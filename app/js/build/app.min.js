!function(i,s,o,g,r,a,m){i.GoogleAnalyticsObject=r,i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date,a=s.createElement(o),m=s.getElementsByTagName(o)[0],a.async=1,a.src=g,m.parentNode.insertBefore(a,m)}(window,document,"script","//www.google-analytics.com/analytics.js","ga"),ga("create","UA-48589837-1","auto"),ga("require","displayfeatures"),ga("send","pageview"),window.log=function(){try{ga.apply(null,arguments)}catch(ex){}},window.onerror=function(err,url,line,col){try{var exceptionLog={exDescription:[err,url,line,col].join(";")};console.log(exceptionLog),log("send","exception",exceptionLog)}catch(ex){}},window.logException=function(description,details){try{var exceptionLog={exDescription:[description,details].join(";")};console.log(exceptionLog),log("send","exception",exceptionLog)}catch(ex){}},window.uwa="undefined"==typeof window.uwa?null:window.uwa,window.app=window.app||{},window.app.lib={},window.app.collection={},window.app.model={},window.app.dataadapter={},window.app.view={},window.app.view.note={},window.app.view.item={},window.app.view.components={},window.app.view.content={},window.app.view.context={},window.app.view.content.component={},window.app.view.layout={},window.app.view.sidepane={},window.app.view.sidepane.component={},window.app.router={},window.app.config={},window.app.data={},app.fonts={load:function(){var deferred=$.Deferred();return WebFont.load({google:{families:["Roboto+Slab:100,300,400,700:cyrillic-ext,latin-ext"]},active:function(){deferred.resolve()},inactive:function(){deferred.reject("Browser does not support linked fonts or none of the fonts could be loaded")}}),deferred}},app.config.colors=["red","orange","yellow","green","cyan","blue","lilac","grey","white"],app.config.maxNoteLength=2048,app.config.colors.map={red:"#F56545",orange:"#FFBB22",yellow:"#EEEE22",green:"#BBE535",cyan:"#77DDBB",blue:"#66CCDD",lilac:"#D28EF6",grey:"#B5C5C5",white:"#FFFFFF"},app.config.defaultNoteOptions={timestamp:!1,noteInheritColor:!1,noteTimestamp:!1,noteAddToInbox:!1,noteLinkToTag:!1,extratags:[],hideFromTrackerList:!1,autoExpand:!1},app.config.defaultListOptions={addToInbox:!1,showNewNote:!1,hideTags:!1,appendOnly:!1},app.config.context={tag:{name:"tag",icon:"icon-tag",placeholder:{header:"Tag name",blockValue:"Tag name"}},note:{name:"note",icon:"icon-doc-text-inv",placeholder:{header:"Note tag name",blockTitle:"Block name",blockValue:"Text note"}},tracker:{name:"tracker",icon:"icon-spinner",placeholder:{header:"Tracker tag name",blockTitle:"Block name",blockValue:"Blank text"}}},app.config.contextList=[app.config.context.tag,app.config.context.note,app.config.context.tracker],app.config.navigation=[{page:"notes",title:"Notes",icon:"icon-pentagon-alt"},{page:"boards",title:"Boards",icon:"icon-books"},{page:"trackers",title:"Trackers",icon:"icon-spinner"},{page:"tags",title:"Tags",icon:"icon-tags"},{page:"insights",title:"Insights",icon:"icon-chart-pie-alt-explode"},{page:"calendar",title:"Calendar",icon:"icon-calendar-number"},{page:"map",title:"Map",icon:"icon-map"},{page:"",title:"Account",icon:"icon-profile",children:[{page:"",title:"Account",icon:"icon-profile"},{page:"settings",title:"Settings",icon:"icon-cog"},{page:"upload",title:"Upload",icon:"icon-upload-cloud"},{page:"upgrade",title:"Upgrade",icon:"icon-rocket"},{page:"feedback",title:"Feedback",icon:"icon-comment"},{page:"logout",url:"/logout",title:"Logout",icon:"icon-off"}]}],function(){for(var lastTime=0,vendors=["ms","moz","webkit","o"],x=0;x<vendors.length&&!window.requestAnimationFrame;++x)window.requestAnimationFrame=window[vendors[x]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[vendors[x]+"CancelAnimationFrame"]||window[vendors[x]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(callback,element){var currTime=(new Date).getTime(),timeToCall=Math.max(0,16-(currTime-lastTime)),id=window.setTimeout(function(){callback(currTime+timeToCall)},timeToCall);return lastTime=currTime+timeToCall,id}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(id){clearTimeout(id)})}(),app.lib={scope:function(){var scope=function(){this.delegate=function(){return Object.create(this)}};return _.extend(scope.prototype,Backbone.Events),new scope},counter:0,retry:function(logic,deferred,count){return deferred=deferred||$.Deferred(),count=count||0,logic().fail(function(){4>count?(count+=1,setTimeout(function(){app.lib.retry(logic,deferred,count)},100*count)):deferred.reject.apply(deferred,arguments)}).done(function(){deferred.resolve.apply(deferred,arguments)}),deferred},extendDemoObject:function(data){if(data.lists&&_.each(data.lists,function(list){list._id=list._id||app.lib.oid()}),!data._id){data._id=app.lib.oid(),data._owner=app.data.account.get("_id");var timeoffset=1402727032767,date=Date.now();data.order=100*(date-1398778819956),data._data&&(data._data.note&&!data._data.note.order&&(data._data.note.order=100*(date-timeoffset)),data._data.tracker&&!data._data.tracker.order&&(data._data.tracker.order=100*(date-timeoffset)),data._data.tag&&!data._data.tag.order&&(data._data.tag.order=100*(date-timeoffset)))}return data},element:function(definition){var elementClass=React.createClass(definition),elementFactory=React.createFactory(elementClass);return elementFactory._class=elementClass,elementFactory},newNotes:{_all:[],add:function(model){app.lib.newNotes._all.push(model)},remove:function(model){var index=app.lib.newNotes._all.indexOf(model);index>=0&&app.lib.newNotes._all.splice(index,1)},clear:function(){app.lib.newNotes._all=[]},all:function(){return app.lib.newNotes._all},validate:function(silent){for(var hasUnsaved=!1,i=0;i<app.lib.newNotes.all().length;i++){var newNote=app.lib.newNotes.all()[i];if(hasUnsaved=hasUnsaved||newNote.isChanged())break}if(hasUnsaved)try{return silent?!1:!confirm('There are unsaved new note(s), click "OK" to keep editing.')}catch(ex){return!0}return!0}},decimals:function(num){var match=(""+num).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);return match?Math.max(0,(match[1]?match[1].length:0)-(match[2]?+match[2]:0)):0},getUrl:function(url){var reg=/(^.+:\/\/)|(^[/])/gi;return reg.test(url)?url:"http://"+url},isSupported:function(){var myNav=navigator.userAgent.toLowerCase(),result=-1!=myNav.indexOf("msie")?!(parseInt(myNav.split("msie")[1])<=9):!0;return result},cursorLoading:function(){$("body").addClass("loading")},cursorDefault:function(){$("body").removeClass("loading")},dateTimeToString:function(ms){var date=new Date(ms),arr=[];return arr.push(app.lib.pad(date.getDate(),2)),arr.push("-"),arr.push(app.lib.pad(date.getMonth()+1,2)),arr.push("-"),arr.push(app.lib.pad(date.getFullYear(),4)),arr.push(" "),arr.push(app.lib.pad(date.getHours(),2)),arr.push(":"),arr.push(app.lib.pad(date.getMinutes(),2)),arr.join("")},isEmpty:function(obj){var hasOwnProperty=Object.prototype.hasOwnProperty;if(null==obj)return!0;if(obj.length>0)return!1;if(0===obj.length)return!0;for(var key in obj)if(hasOwnProperty.call(obj,key))return!1;return!0},getFontSize:function(length){length=10*Math.ceil(length/10)*1.25;var size=Math.round(Math.sqrt(6250/Math.sqrt(length)));return size=Math.min(size,40),size=Math.max(size,14)},cid:function(){return app.lib.counter++,app.lib.counter.toString(36)},uidmap:function(id){return app.lib._uidmap[id]||(app.lib._uidmap[id]=app.lib.cid()),app.lib._uidmap[id]},_uidmap:{},uid:function(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)},guid:function(){var uid=app.lib.uid;return uid()+uid()+"-"+uid()+"-"+uid()+"-"+uid()+"-"+uid()+uid()+uid()},oid:function(){var uid=app.lib.uid;return uid()+uid()+uid()+uid()+uid()+uid()},validIndex:function(index,array){return 0>index&&(index=0),index>=array.length&&(index=array.length-1),index},clearTimeout:function(timeout){timeout&&clearTimeout(timeout)},isMounted:function(component){return component.isMounted()&&"UNMOUNTING"!==component._compositeLifeCycleState},mixins:{isActive:{isActive:function(){return this.isMounted()&&"UNMOUNTING"!==this._compositeLifeCycleState}},resize:{componentDidUpdate:function(){this.rootParent&&this.rootParent().onResize(this)}},focus:{componentDidMount:function(){},componentWillUnmount:function(){}},rootParent:{rootParent:function(){return this.props.rootParent?this.props.rootParent.rootParent():this},isRootParent:function(){return!this.props.rootParent}}},color:function(color){return _.startsWith(color,"#")?color:app.config.colors.map[color]||app.config.colors.map.white},randomColor:function(){var index=Math.floor(Math.random()*app.config.colors.length-1e-5);return"white"!==app.config.colors[index]?app.config.colors[index]:app.lib.randomColor()},dateUTC:function(){var now=new Date;return now},pad:function(text,width,pad){return pad=pad||"0",text+="",text.length>=width?text:new Array(width-text.length+1).join(pad)+text},triggerWindowResizeEvent:_.debounce(function(){app.events.trigger("resize:window")},200),parseQuery:function(query){return query&&_.map(query,function(item){return"branch"===item.type?{type:item.type,query:app.data.tags.getTags(item.query)}:item})},focus:{element:null,clear:function(){app.lib.focus.element=null},save:function(element){app.lib.focus.element=element},restore:function(){app.lib.focus.element&&app.lib.focus.element.focus()},next:function(context){if(app.lib.focus.element){context=context||".note";var items=$(app.lib.focus.element).closest(context).find(":focusable");items.eq(items.index(app.lib.focus.element)+1).focus()}}},findChildren:function(component,list){list=list||[];for(var ref in component.refs)list.push(component.refs[ref]),app.lib.findChildren(component.refs[ref],list);return list},getChildren:function(component,list){list=list||[];for(var ref in component.refs)component.refs[ref].isMounted()&&list.push(component.refs[ref]);return list},selection:function(extension){var selection={collection:extension.collection,selectAll:extension.selectAll};return selection=_.extend(selection,{selected:[],active:null,onUpdate:_.debounce(function(){app.events.trigger("contextbar:update")},10).bind(selection),deselectAll:function(){for(;this.selected.length>0;)this.deselect(this.selected[0]);this.onUpdate()}.bind(selection),select:function(component){this.selected.indexOf(component)<0&&(this.selected.push(component),component.onSetSelected(!0)),this.onUpdate()}.bind(selection),deselect:function(component){var index=this.selected.indexOf(component);index>=0&&this.selected.splice(index,1),component.onSetSelected(!1),this.onUpdate()}.bind(selection),activate:function(component){this.active!==component&&(this.deactivate(this.active),this.active=component,component.onSetActive(!0),this.onUpdate())}.bind(selection),deactivate:function(component){component&&component.onSetActive(!1),this.active=null,this.onUpdate()}.bind(selection)})},router:{QueryObject:function(){function QueryObject(query){return this instanceof QueryObject?(this._raw=query,void(this._all=query?_.map(query.split("&"),function(item){var parts=item.split(":");return 1===parts.length?{type:null,query:parts[0]}:{type:parts[0],query:parts[1]}}):[])):new QueryObject(query)}return QueryObject.prototype.raw=function(){return this._raw},QueryObject.prototype.all=function(){return this._all},QueryObject.prototype.tags=function(){return _.filter(this.all(),this.findTags,this)},QueryObject.prototype.text=function(){return _.filter(this.all(),this.findText,this)},QueryObject.prototype.findTags=function(query){return"root"===query.type||"branch"===query.type},QueryObject.prototype.findText=function(query){return"text"===query.type||"name"===query.type},QueryObject.prototype.valid=function(){var tagsValid=!_.find(this.tags(),function(tag){return!app.data.tags.get(tag.query)});return tagsValid},QueryObject}(),validBoards:function(nav){var valid=!0;if(nav.data&&nav.data.board){var board=app.data.boards.get(nav.data.board);if(board){if(nav.data.list){var list=board.get("lists").get(nav.data.list);list||(valid=!1)}}else valid=!1}return valid},execute:function(data){data.query.valid()&&app.lib.router.validBoards(data)?(document.title="Beyondpad - "+_.capitalize(data.page),app.navigation&&app.navigation.page===data.page||log("send","pageview",{page:(app.demo?"/demo#":"/app#")+data.page}),log("send","event","navigate",data.page,(data.view?data.view:"")+(data.query&&data.query.all().length>0?"/query":""),data.query&&data.query.all().length>0?data.query.all().length:null),app.navigation=data,app.events.trigger("navigate navigate:"+data.page,data),app.data.state.set("route",data.page)):app.router.navigate(data.page,{trigger:!0,replace:!0})},handle:{generic:function(page,view,query){app.lib.router.execute({page:page,view:view,query:app.lib.router.QueryObject(query)})},boards:function(page,view,board,list,query){"board-search"===view&&(query=list,list=null),app.lib.router.execute({page:page,view:view,query:app.lib.router.QueryObject(query),data:{board:board,list:list}})}},handler:function(page,view){switch(page){case"boards":return app.lib.router.handle.boards.bind(this,page,view);default:return app.lib.router.handle.generic.bind(this,page,view)}}},searchText:function(text,search){text=(text||"").toLocaleLowerCase(),search=(search||"").toLocaleLowerCase();var words=text.split(" ");return!!_.find(words,function(word){return _.startsWith(word,search)})}},app.model.account=Backbone.Model.extend({urlRoot:"/api/account",idAttribute:"_id",initialize:function(){this.on("change sync",function(){this.get("_id")&&this.buildTagLinkHash()})},defaults:{_id:null,_data:{email:null,name:null,options:{}}},defaultOptions:{tagLinks:[[]],maxColumnCount:100,noteLayout:"masonry"},getOptions:function(field){return field?this.data("options")&&"undefined"!=typeof this.data("options")[field]?this.data("options")[field]:this.defaultOptions[field]:$.extend(!0,{},this.defaultOptions,this.data("options"))},setOptions:function(name,value){var update={};update[name]={$set:value},this.update("options",update)},buildTagLinkHash:function(){var tagLinkHash=this.tagLinkHash={};_.each(this.get("tagLinks").models,function(taglink){var tags=taglink.data("tags");_.each(tags,function(tag){tagLinkHash[tag]=tags})})},fetch:function(){if(app.demo){this.set(this.parse(app.demo.account));var deferred=$.Deferred();return deferred.resolve(app.demo.account),deferred}var f=Backbone.Model.prototype.fetch.apply(this,arguments);return f},save:function(){if(app.demo){var deferred=$.Deferred();return deferred.resolve(this.parse(this.toJSON())),deferred}var f=Backbone.Model.prototype.save.apply(this,arguments);return f},parse:function(response){if(response._data){var tagLinks=response._data.options&&response._data.options.tagLinks||[];tagLinks=_.map(tagLinks,function(tags){return{_data:{tags:tags}}});var Coll=Backbone.Collection.extend({model:app.model.dataModel});return response.tagLinks=new Coll(tagLinks),response}return{}},toJSON:function(){var json=Backbone.Model.prototype.toJSON.apply(this,arguments),tagLinks=_.map(this.get("tagLinks").models,function(taglink){return taglink.data("tags")});return delete json.tagLinks,json._data.options=json._data.options||{},json._data.options.tagLinks=tagLinks,json},data:function(context){return context?this.get("_data")[context]:this.get("_data")},update:function(){"string"==typeof arguments[0]?this._update.apply(this,arguments):this._update.call(this,null,arguments[0],arguments[1])},_update:function(context,update,silent){if(context){var temp={};temp[context]=update,update=temp,this.get("_data")[context]=this.get("_data")[context]||{}}if(this.set("_data",React.addons.update(this.get("_data"),update),{silent:silent}),!silent){var routes=this.commandRoutes(update,!0);this.trigger(routes.change.join(" ")),this.trigger(routes.update.join(" "))}},commandRoutes:function(update,prefix,root){var path,nested,result={change:[],update:[]};for(var field in update)update.hasOwnProperty(field)&&("$"===field[0]?result.update.push(prefix?"update:"+root:root):(path=root?root+"."+field:field,result.change.push(prefix?"change:"+path:path),nested=this.commandRoutes(update[field],prefix,path),result.change=result.change.concat(nested.change),result.update=result.update.concat(nested.update)));return result}}),app.model.board=Backbone.Model.extend({urlRoot:"/api/board",idAttribute:"_id",initialize:function(){},defaults:function(){return app.model.board.parse({name:"",order:0,color:"white",_data:{},lists:[]})},parse:function(response){return app.model.board.parse(response)},toJSON:function(){return app.model.board.toJSON(this)},updatePosition:function(order){this.set("order",order),this.save()},save:function(){if(app.demo){var deferred=$.Deferred(),data=this.parse(app.lib.extendDemoObject(this.toJSON()));return this.set(data),deferred.resolve(data),deferred}return Backbone.Model.prototype.save.apply(this,arguments)},destroy:function(){return app.demo?void app.data.boards.remove(this):Backbone.Model.prototype.destroy.apply(this,arguments)}},{parse:function(response){return{_id:response._id,name:response.name,order:response.order,color:response.color,_data:response._data,lists:new app.collection.lists(response.lists)}},toJSON:function(model){return{_id:model.get("_id"),name:model.get("name"),order:model.get("order"),color:model.get("color"),_data:model.get("_data"),lists:_.map(model.get("lists").models,function(list){return list.toJSON()})}}}),app.model.list=Backbone.Model.extend({idAttribute:"_id",initialize:function(){},defaults:function(){return{_data:{name:"",color:"white",tags:[],excludeTags:[],options:{}}}},reset:function(){this.unset({silent:!0}),this.set(this.defaults())},data:function(context){return context?this.get("_data")[context]:this.get("_data")},update:function(){"string"==typeof arguments[0]?this._update.apply(this,arguments):this._update.call(this,null,arguments[0],arguments[1])},_update:function(context,update,silent){if(context){var temp={};temp[context]=update,update=temp}if(this.set("_data",React.addons.update(this.get("_data"),update),{silent:silent}),!silent){var routes=this.commandRoutes(update,!0);this.trigger(routes.change.join(" ")),this.trigger(routes.update.join(" "))}},getOptions:function(field){return field?this.data("options")&&"undefined"!=typeof this.data("options")[field]?this.data("options")[field]:app.config.defaultListOptions[field]:$.extend(!0,{},app.config.defaultListOptions,this.data("options"))},commandRoutes:function(update,prefix,root){var path,nested,result={change:[],update:[]};for(var field in update)update.hasOwnProperty(field)&&("$"===field[0]?result.update.push(prefix?"update:"+root:root):(path=root?root+"."+field:field,result.change.push(prefix?"change:"+path:path),nested=this.commandRoutes(update[field],prefix,path),result.change=result.change.concat(nested.change),result.update=result.update.concat(nested.update)));return result}}),app.model.state=Backbone.Model.extend({initialize:function(){this.on("change:route change:menuTreeActive",function(){this.set("menuTreeShow",_.contains(["notes","boards","trackers","tags"],this.get("route")))}),this.on("change:menuTreeShow change:menuTreeActive",function(){this.set("controlTreeShow",this.get("menuTreeShow")&&this.get("menuTreeActive"))}),this.on("change:menuNavigationActive",function(){this.set("controlNavigationShow",this.get("menuNavigationActive"))})},defaults:{menuNavigationActive:!0,menuTreeActive:!0,menuTreeShow:!0,controlTreeShow:!0,controlNavigationShow:!0,route:"home"}}),app.model.note=Backbone.Model.extend({urlRoot:"/api/note",idAttribute:"_id",constructor:function(){return Backbone.Model.apply(this,arguments)},initialize:function(options){this.updateKey()},setDefaults:function(context,tags,data){this.defaults=app.model.note.defaults.get(context,tags,data,this)},data:function(context){return context?this.get("_data")[context]:this.get("_data")},updateKey:function(){this.key=app.lib.uidmap(this.get("_id")||app.lib.uid())},reset:function(options){this.clear({silent:!0}),this.set(this.defaults(),{silent:!0}),this.trigger("reset")},tags:function(){return _.filter(this.data("tags"),function(tag){var model=app.data.tags.get(tag._id);return model&&"trash"!==model.data("status")})},getStatus:function(){var link=this.getLinkedTag();return link.tag?link.valid?"link":"error":null},isChanged:function(){return!_.isEqual(this.originalJson,this.attributes)},getLinkedTag:function(){var tag=_.find(app.data.tags.models,function(tag){return this.data("tag")&&tag.data("tag").name.toLocaleLowerCase()===this.data("tag").name.toLocaleLowerCase()&&tag.get("_id")!==this.get("_id")},this);return tag?this.data("note")&&!tag.data("note")||this.data("tracker")&&!tag.data("tracker")?{tag:tag,valid:!0}:{tag:tag,valid:!1}:{tag:null,valid:!0}},duplicate:function(context){var data=this.toJSON();delete data._id,data._data[context].order-=1e3;var clone=new app.model.note(app.model.note.parse(data));this.collection.add(clone),clone.save(context)},save:function(context,options){var link=this.getLinkedTag();if(link.tag){var data=this.clone();if(this.set(app.model.note.parse(link.tag.toJSON())),this.data()[context]=data.data()[context],this.data().status=data.data().status,this.data().tags=_.reduce(this.data("tags").concat(data.data("tags")),function(memo,tag){return _.find(memo,function(memoTag){return memoTag._id===tag._id})||memo.push(tag),memo},[],this),data.isNew())return this.save.apply(this,arguments);var tag=app.data.tags.get(data.get("_id"));if(tag){delete tag.data()[context];var deferred=$.Deferred();return $.when(this.save.apply(this,arguments),tag.save("tag")).done(function(r1,r2){deferred.resolve(r1[0])}),deferred}var deferred=$.Deferred();return $.when(this.save.apply(this,arguments),app.dataadapter.generic.remove({ids:[data.get("_id")]})).done(function(r1,r2){deferred.resolve(r1[0])}),deferred}var tag=app.data.tags.get(this.get("_id"));if(tag&&!this.data("tag")){var deferred=$.Deferred();switch(delete tag.data()[context],context){case"note":this.unset("_id",{silent:!0}),$.when(this.save.apply(this,arguments),tag.save("tag")).done(function(r1,r2){deferred.resolve(r1[0])});break;case"tracker":$.when(tag.save("tag")).done(function(r1){deferred.resolve(r1[0])})}return deferred}return _.each(this.data(context).items,function(item){var text="";switch(item.type){case"text":text=item.data.text;break;case"choice":case"list":text=_.reduce(item.data.items,function(str,item){return str+" "+(item.text||"")},"");break;case"link":text=(item.data.link||"")+" "+(item.data.title||"");break;case"numeric":text=item.data.value+""||""}item.data.text=text}),app.dataadapter.generic.save(this.url(),this.toJSON(),this.isNew()?"POST":"PUT").done(function(data){log("send","event","entity","save",context);var collection=this.collection;if(!this.isNew()&&collection){var filtered=app.dataadapter.local.filter(collection.req,[data]);0===filtered.length&&collection.remove(this)}this.set(this.parse(data)),this.trigger("update:model",data),collection&&collection.trigger("update:model",data)}.bind(this))},parse:function(response){return app.model.note.parse(response)},toJSON:function(options){var result=$.extend(!0,{},Backbone.Model.prototype.toJSON.apply(this,arguments));return result._data.options&&app.lib.isEmpty(result._data.options)&&delete result._data.options,result._data.status||(result._data.status="all"),result._data.tags&&app.lib.isEmpty(result._data.tags)&&delete result._data.tags,result},clear:function(){return this.updateKey(),Backbone.Model.prototype.clear.apply(this,arguments)},setTag:function(){this.update({tag:{$set:{name:"",order:0}},color:{$set:app.lib.randomColor()}})},removeTag:function(){this.update({tag:{$set:null},color:{$set:"white"}})},appendTag:function(tagId,context,silent){"note"===context?(this.set({_data:app.model.note.addTagToData(this.data(),tagId)},{silent:!0}),this.updateChoice(context,silent),this.trigger("update:color")):(this.update({tags:{$push:[{_id:tagId}]}},silent),this.updateChoice(context,silent))},deleteTag:function(tagId,context,silent){var tags=_.pluck(this.data("tags"),"_id");if(tags.indexOf(tagId)>=0){if(this.update({tags:{$splice:[[tags.indexOf(tagId),1]]}},silent),app.data.tags.get(tagId).data("tracker")){var trackerItem=_.find(this.data(context).items,function(item){return item.data.trackerId===tagId});trackerItem&&this.removeItem(context,trackerItem.uid,silent)}this.updateChoice(context,silent)}},updateChoice:function(context,silent){if("note"===context||"tracker"===context){var data=app.model.note.updateChoiceData(this.data());this.update(context,{items:{$set:_.clone(data[context].items)}},silent)}},update:function(){"string"==typeof arguments[0]?this._update.apply(this,arguments):this._update.call(this,null,arguments[0],arguments[1])},_update:function(context,update,silent){if(context){var temp={};temp[context]=update,update=temp}if(this.set({_data:React.addons.update(this.get("_data"),update)},{silent:silent}),!silent){var routes=this.commandRoutes(update,!0);this.trigger(routes.change.join(" ")),this.trigger(routes.update.join(" "))}},getOptions:function(field){return field?this.data("options")&&"undefined"!=typeof this.data("options")[field]?this.data("options")[field]:app.config.defaultNoteOptions[field]:$.extend(!0,{},app.config.defaultNoteOptions,this.data("options"))},commandRoutes:function(update,prefix,root){var path,nested,result={change:[],update:[]};for(var field in update)update.hasOwnProperty(field)&&("$"===field[0]?result.update.push(prefix?"update:"+root:root):(path=root?root+"."+field:field,result.change.push(prefix?"change:"+path:path),nested=this.commandRoutes(update[field],prefix,path),result.change=result.change.concat(nested.change),result.update=result.update.concat(nested.update)));return result},updatePosition:function(context,order){this.update(context,{order:{$set:order}}),this.collection.sort(),this.save(context)},setStatus:function(context,status){this.update({status:{$set:status}}),this.save(context)},remove:function(context){this.update({status:{$set:"trash"}}),this.collection&&this.collection.remove(this),this.save(context)},addItem:function(context,type){app.model.note.item[type]&&this.update(context,{items:{$push:[app.model.note.item[type]()]}})},removeItem:function(context,uid,silent){var items=this.data(context).items,item=_.find(items,function(item){return item.uid===uid});if(item.data.trackerId){var trackerId=item.data.trackerId;_.each(_.filter(items,function(subItem){return subItem.group===item.uid}),function(subItem){items.splice(items.indexOf(subItem),1)})}items.splice(items.indexOf(item),1),this.update(context,{items:{$set:items}},silent),item.data.trackerId&&this.deleteTag(trackerId,context)},updateColor:function(color){this.update({color:{$set:color}})}},{parse:function(response){return response._data.tags=response._data.tags||[],response},item:{choice:function(data){var item={uid:app.lib.uid(),group:null,type:"choice",name:null,data:{items:[{text:"",value:"",tags:[]}],text:""}};return $.extend(!0,item,data)},list:function(data){var item={uid:app.lib.uid(),group:null,type:"list",name:null,data:{items:[{text:"",uid:app.lib.uid()}],text:""}};return $.extend(!0,item,data)},text:function(data){var item={uid:app.lib.uid(),group:null,type:"text",name:null,data:{text:""}};return $.extend(!0,item,data)},link:function(data){var item={uid:app.lib.uid(),group:null,type:"link",name:null,data:{link:"",title:"",text:""}};return $.extend(!0,item,data)},numeric:function(data){var item={uid:app.lib.uid(),group:null,type:"numeric",name:null,data:{value:"",text:""}};return $.extend(!0,item,data)},stopwatch:function(data){var item={uid:app.lib.uid(),group:null,type:"stopwatch",name:null,data:{ellapsed:0,periods:[]}};return $.extend(!0,item,data)},countdown:function(data){var item={uid:app.lib.uid(),group:null,type:"countdown",name:null,data:{start:9e5,ellapsed:0,periods:[]}};return $.extend(!0,item,data)},group:function(trackerId){var item={uid:app.lib.uid(),group:null,type:"group",name:null,data:{trackerId:trackerId}};return item}},defaults:{note:function(){return{_data:{status:"all",color:"white",created:Date.now(),modified:Date.now(),note:{order:0,items:[app.model.note.item.text()]},tags:[]}}},tracker:function(){return{_data:{status:"all",color:app.lib.randomColor(),created:Date.now(),modified:Date.now(),tag:{order:0,name:""},tracker:{order:0,items:[app.model.note.item.text({name:"",data:{text:""}})]},tags:[]}}},tag:function(){return{_data:{status:"all",color:app.lib.randomColor(),created:Date.now(),modified:Date.now(),tag:{order:0,name:""},tags:[]}}},note_blank:function(){return{_data:{color:"white",created:Date.now(),modified:Date.now(),tag:null,note:{order:0,items:[]},tags:[]}}},get:function(context,tags,data,model){return function(){var json=$.extend(!0,app.model.note.defaults[context](),app.model.note.defaults.getDefaultData(context,tags),data);return model&&(model.originalJson=json),$.extend(!0,{},json)}},getDefaultData:function(context,tags){var result=null;if("note"===context){var data={};if(_.each(tags,function(tag){data=app.model.note.addTagToData(data,tag._id)}),data.note)for(var i=0;3>i;i++)_.each(data.note.items,function(noteItem){"choice"===noteItem.type&&_.each(noteItem.data.items,function(listItem){listItem.checked&&listItem.tags&&listItem.tags.length>0&&_.each(listItem.tags,function(listItemTag){data=app.model.note.addTagToData(data,listItemTag)})})});data=app.model.note.updateChoiceData(data),result={_data:data}}else result={_data:{tags:_.map(tags,function(tag){return{_id:tag._id}})}};return result}},addTagToData:function(data,tagId){var data=app.model.note.addTagToDataLogic(data,tagId);return data},addTagToDataLogic:function(data,tagId){data=$.extend(!0,{},data||{}),data.tags=data.tags||[];var tag=app.data.tags.get(tagId);return tag&&!_.find(data.tags,function(tagItem){return tagItem._id===tagId})&&(data.tags=data.tags||[],data.tags.push({_id:tagId}),tag.hasTracker()&&(data.note=data.note||{},data.note.items=data.note.items||[],data.note.items=data.note.items.concat(tag.getTrackerItems())),tag.getOptions("noteLinkToTag")&&(data.tag||(data.tag={name:"",order:0},data.color=app.lib.randomColor())),tag.getOptions("noteInheritColor")&&(data.color=tag.data("color")),tag.getOptions("noteAddToInbox")&&(data.status="inbox"),tag.getOptions("noteTimestamp")&&(data.options=data.options||{},data.options.timestamp=!0),_.each(tag.getOptions("extratags"),function(tag){data=app.model.note.addTagToDataLogic(data,tag)})),data},updateChoiceData:function(data){if(data&&data.note){var allTags=_.pluck(data.tags,"_id");_.each(data.note.items,function(item){"choice"===item.type&&_.each(item.data.items,function(listItem){listItem.tags&&listItem.tags.length>0&&(listItem.checked=0===_.difference(listItem.tags,allTags).length)})},this)}return data}}),app.model.tag=app.model.note.extend({hasTracker:function(){return!!this.data("tracker")},getTrackerItems:function(){var groupId=app.lib.uid(),items=$.extend(!0,[],this.data("tracker").items);_.each(items,function(item){item.group=groupId});var group=app.model.note.item.group(this.get("_id"));return group.uid=groupId,group.name=this.data("tag").name,items.push(group),items},save:function(options){return app.model.note.prototype.save.call(this,"tag",options)},isVisible:function(){var status=this.data("status");return"trash"!==status},isActive:function(){var status=this.data("status");return"all"===status||"inbox"===status}}),app.model.dataModel=Backbone.Model.extend({data:function(context){return context?this.get("_data")[context]:this.get("_data")},update:function(){"string"==typeof arguments[0]?this._update.apply(this,arguments):this._update.call(this,null,arguments[0],arguments[1])},_update:function(context,update,silent){if(context){var temp={};temp[context]=update,update=temp}if(this.set("_data",React.addons.update(this.get("_data"),update),{silent:silent}),!silent){var routes=this.commandRoutes(update,!0);this.trigger(routes.change.join(" ")),this.trigger(routes.update.join(" "))}},commandRoutes:function(update,prefix,root){
var path,nested,result={change:[],update:[]};for(var field in update)update.hasOwnProperty(field)&&("$"===field[0]?result.update.push(prefix?"update:"+root:root):(path=root?root+"."+field:field,result.change.push(prefix?"change:"+path:path),nested=this.commandRoutes(update[field],prefix,path),result.change=result.change.concat(nested.change),result.update=result.update.concat(nested.update)));return result}}),app.collection.boards=Backbone.Collection.extend({url:"/api/boards",model:app.model.board,load:function(){if(app.demo){var data=app.demo.boards,deferred=$.Deferred();return deferred.resolve(data),this.reset(_.map(data,function(item){return app.model.board.parse(item)}),{silent:!0}),deferred}return this.fetch()},comparator:function(model){return-model.get("order")}}),app.collection.lists=Backbone.Collection.extend({model:app.model.list}),app.collection.notes=Backbone.Collection.extend({url:"/api/notes",model:app.model.note,initialize:function(models,options){this.options={context:options.context}},comparator:function(model){return-model.data(this.options.context).order},unload:function(){this.reset(null,{silent:!0}),this.trigger("unloaded")},load:function(page,view,query){switch(this.unload(),page){case"trackers":this.options.context="all"===view||"search"===view?"note":"tracker"}return this.req={page:page,view:view,query:app.lib.parseQuery(query)},app.dataadapter.generic.load(this.url,this.req).done(function(data){this.reset(_.map(data,function(item){return app.model.note.parse(item)}),{silent:!0}),this.trigger("loaded")}.bind(this))},updateNotes:function(url,req){return app.dataadapter.generic.update(url,req).done(function(responseData){var inContextData=app.dataadapter.local.filter(this.req,responseData),notesUpdate=_.map(inContextData,function(item){return app.model.note.parse(item)}),models=this.add(notesUpdate,{merge:!0});_.each(models,function(model){model.trigger("batch:model")});var notesRemove=_.map(_.difference(_.pluck(responseData,"_id"),_.pluck(inContextData,"_id")),function(id){return this.get(id)}.bind(this));this.remove(notesRemove,{silent:!0}),this.trigger("batch:collection",responseData)}.bind(this))},removeNotes:function(req){return app.dataadapter.generic.remove(req).done(function(){var notesRemove=_.map(req.ids,function(id){return this.get(id)},this);this.remove(notesRemove,{silent:!0}),this.trigger("batch:collection")}.bind(this))}}),app.collection.tags=Backbone.Collection.extend({url:"/api/notes",model:app.model.tag,initialize:function(){this.tree={},this.edges=[]},load:function(){return this.req={page:"tags",view:"preload",query:app.lib.parseQuery("")},app.dataadapter.generic.load(this.url,this.req).done(function(data){this.reset(_.map(data,function(item){return app.model.note.parse(item)}),{silent:!0}),this.trigger("loaded")}.bind(this))},comparator:function(model){return-model.data("tag").order},buildEdges:function(onlyTags){this.sort();for(var tree={},edges=[],i=0;i<this.models.length;i++){var tag=this.models[i].get("_id");if(this.models[i].isVisible()&&(!onlyTags||!this.models[i].data("tracker"))){var tags=this.models[i].data("tags");tree[tag]=tree[tag]||{tag:tag,up:[],down:[]};for(var j=0;j<tags.length;j++)!this.get(tags[j]._id)||!this.get(tags[j]._id).isActive()||onlyTags&&this.get(tags[j]._id).data("tracker")||(edges.push({child:tag,parent:tags[j]._id}),tree[tag].up.push(tags[j]._id),tree[tags[j]._id]=tree[tags[j]._id]||{tag:tags[j]._id,up:[],down:[]},tree[tags[j]._id].down.push(tag))}}onlyTags?(this.tree_tags=tree,this.edges_tags=edges):(this.tree=tree,this.edges=edges)},getVisible:function(){return _.filter(this.models,function(model){return model.isVisible()})},getEdges:function(){return this.buildEdges(),this.edges},getTree:function(rebuild){return rebuild!==!1&&this.buildEdges(),this.tree},getTreeTags:function(rebuild){return rebuild!==!1&&this.buildEdges(!0),this.tree_tags},treeToArray:function(tree){var tags=_.map(tree,function(tags,tag){return tag});return tags=_.sortBy(tags,function(tag){return-this.get(tag).data("tag").order},this),_.map(tags,function(tag){return tree[tag]},this)},getParents:function(tags,parents){parents=parents||{};var newTags=[];return _.each(tags,function(tag){this.get(tag)&&this.tree[tag]&&_.each(this.tree[tag].up,function(parent){parents[parent]||(newTags.push(parent),parents[parent]=!0)})},this),newTags.length>0?this.getParents(newTags,parents):parents},reduceTree:function(tree){var count={};for(var tag in tree)count[tag]=tree[tag].down.length;var result=this._reduceTree(tree,count);return this.treeToArray(result)},_reduceTree:function(tree,count){var tag,changed=!1;for(tag in count)0===count[tag]&&tree[tag].up.length>0?(count[tag]=null,changed=!0,_.each(tree[tag].up,function(upTag){count[upTag]-=1})):0===tree[tag].up.length&&(changed=this._nullifyDown(tag,tree,count));if(changed)return this._reduceTree(tree,count);var resultTree={};for(tag in count)null!==count[tag]&&(resultTree[tag]=tree[tag]);return resultTree},_nullifyDown:function(tag,tree,count){var changed=!1;return _.each(tree[tag].down,function(downTag){null!==count[downTag]&&(count[downTag]=null,this._nullifyDown(downTag,tree,count),changed=!0)},this),changed},getTrackers:function(){var result=_.filter(this.models,function(model){return model.hasTracker()&&!model.getOptions("hideFromTrackerList")});return result=_.sortBy(result,function(tag){return-tag.data("tracker").order})},getAllTags:function(_id,memo){return memo=memo||{},memo[_id]=!0,app.data.tags.getTree()[_id]?_.reduce(app.data.tags.getTree()[_id].down,function(memo,tag){return memo[tag]||(memo[tag]=!0,memo=this.getAllTags(tag,memo)),memo},memo,this):memo},getTags:function(_id){return _.map(this.getAllTags(_id),function(value,key){return key})}}),app.dataadapter.generic={options:{localStorage:!0},preload:function(){if(app.demo){var deferred=$.Deferred();return app.dataadapter.local.update(app.demo.notes),deferred.resolve(),deferred}if(this.options.localStorage)return app.dataadapter.remote.load("/api/notes",{page:"all"}).done(function(response){app.dataadapter.local.update(response)});var deferred=$.Deferred();return deferred.resolve(),deferred},load:function(url,req,method){if(app.demo)return app.dataadapter.local.load(url,req,method);if(this.options.localStorage){if(app.dataadapter.local.data.array)return app.dataadapter.local.load(url,req,method);var deferred=$.Deferred();return app.dataadapter.remote.load("/api/notes",{page:"all"}).done(function(response){app.dataadapter.local.update(response),app.dataadapter.local.load(url,req,method).done(function(data){deferred.resolve(data)}).fail(function(){deferred.reject.apply(deferred,arguments)})}).fail(function(){deferred.reject.apply(deferred,arguments)}),deferred}return app.dataadapter.remote.load(url,req,method)},save:function(url,req,method){if(app.demo){var deferred=$.Deferred();deferred.resolve(app.lib.extendDemoObject(req))}else var deferred=app.dataadapter.remote.save(url,req,method);return this.options.localStorage&&deferred.done(function(result){app.dataadapter.local.update([result])}),deferred.done(function(result){app.data.tags.get(result._id);result._data.tag&&app.data.tags.add(app.model.tag.parse(result),{merge:!0})}),deferred},update:function(url,req,method){if(app.demo){var deferred=$.Deferred();deferred.resolve(app.dataadapter.local.updateActionExecute(url,req))}else var deferred=app.dataadapter.remote.update(url,req,method);return this.options.localStorage&&deferred.done(function(results){app.dataadapter.local.update(results)}),deferred.done(function(results){var tags=[];_.each(results,function(result){result._data.tag&&tags.push(app.model.tag.parse(result))}),app.data.tags.add(tags,{merge:!0})}),deferred},remove:function(req){if(app.demo){var deferred=$.Deferred();deferred.resolve([])}else var deferred=app.dataadapter.remote.remove("/api/notes/remove",req);return this.options.localStorage&&deferred.done(function(results){app.dataadapter.local.remove(req.ids);var tags=[];_.each(req.ids,function(id){var tag=app.data.tags.get(id);tag&&tags.push(tag)}),app.data.tags.remove(tags)}.bind(this)),deferred}},app.dataadapter.local={data:{array:null,hash:{}},load:function(url,req){return app.lib.cursorLoading(),this.request(url,req).done(this.onSuccess).fail(this.onError)},getAllTexts:function(){var arr=[];return _.each(this.data.array,function(data){data._data.note&&_.each(data._data.note.items,function(item){item.data&&item.data.text&&arr.push(item.data.text)})}),arr.join()},update:function(array){this.data.array?_.each(array,function(item){this.data.hash[item._id]?this.data.array.splice(this.data.array.indexOf(this.data.hash[item._id]),1,item):this.data.array.push(item),this.data.hash[item._id]=item},this):(this.data.array=array,this.data.hash={},_.each(this.data.array,function(item){this.data.hash[item._id]=item},this))},remove:function(ids){ids=_.isArray(ids)?ids:[ids],_.each(ids,function(id){this.data.hash[id]&&(this.data.array.splice(this.data.array.indexOf(this.data.hash[id]),1),this.data.hash[id]=null,delete this.data.hash[id])},this)},request:function(url,req){var deferred=$.Deferred();return setTimeout(function(){deferred.resolve(this.filter(req,this.data.array))}.bind(this),5),deferred},onSuccess:function(res){app.lib.cursorDefault()},onError:function(){app.lib.cursorDefault()},filter:function(data,result){var queryItems=data.query&&data.query.all?app.lib.parseQuery(data.query.all()):data.query,statusPredicate=null;if(queryItems){var statusList=[];_.each(queryItems,function(queryItem){if(!queryItem.type)switch(queryItem.query){case"all":case"inbox":case"archive":case"trash":statusList.push(queryItem.query)}},this),statusList.length>0&&(statusPredicate=this.statusFinderPredicate(statusList))}switch(data.page){case"none":return[];case"all":return result;case"notes":switch(data.view){case"inbox":result=_.filter(result,function(entity){return"inbox"===entity._data.status&&entity._data.note});break;case"all":result=_.filter(result,function(entity){return(statusPredicate?statusPredicate(entity):"all"===entity._data.status||"inbox"===entity._data.status)&&entity._data.note});break;case"search":result=_.filter(result,function(entity){return(statusPredicate?statusPredicate(entity):"trash"!==entity._data.status)&&entity._data.note});break;case"trackers":result=_.filter(result,function(entity){return(statusPredicate?statusPredicate(entity):"all"===entity._data.status||"inbox"===entity._data.status)&&entity._data.note&&_.find(entity._data.note.items,function(item){return item.data.trackerId})});break;case"untagged":result=_.filter(result,function(entity){return!("all"!==entity._data.status&&"inbox"!==entity._data.status||entity._data.tags&&0!==entity._data.tags.length||!entity._data.note)});break;case"archive":result=_.filter(result,function(entity){return"archive"===entity._data.status&&entity._data.note});break;case"trash":result=_.filter(result,function(entity){return"trash"===entity._data.status&&entity._data.note});break;default:return[]}result=_.sortBy(result,function(entity){return-entity._data.note.order});break;case"trackers":switch(data.view){case"manage":result=_.filter(result,function(entity){return(statusPredicate?statusPredicate(entity):"all"===entity._data.status||"inbox"===entity._data.status)&&entity._data.tracker});break;case"all":result=_.filter(result,function(entity){return(statusPredicate?statusPredicate(entity):"all"===entity._data.status||"inbox"===entity._data.status)&&entity._data.note&&_.find(entity._data.note.items,function(item){return item.data.trackerId})});break;case"search":result=_.filter(result,function(entity){return(statusPredicate?statusPredicate(entity):"trash"!=entity._data.status)&&entity._data.note&&_.find(entity._data.note.items,function(item){return item.data.trackerId})});break;case"untagged":result=_.filter(result,function(entity){return!("all"!==entity._data.status&&"inbox"!==entity._data.status||entity._data.tags&&0!==entity._data.tags.length||!entity._data.tracker)});break;case"archive":result=_.filter(result,function(entity){return"archive"===entity._data.status&&entity._data.tracker});break;case"trash":result=_.filter(result,function(entity){return"trash"===entity._data.status&&entity._data.tracker});break;default:return[]}switch(data.view){case"all":case"search":result=_.sortBy(result,function(entity){return-entity._data.note.order});break;case"manage":case"untagged":case"archive":case"trash":result=_.sortBy(result,function(entity){return-entity._data.tracker.order})}break;case"tags":switch(data.view){case"preload":result=_.filter(result,function(entity){return entity._data.tag});break;case"all":result=_.filter(result,function(entity){return(statusPredicate?statusPredicate(entity):"all"===entity._data.status||"inbox"===entity._data.status)&&entity._data.tag});break;case"search":result=_.filter(result,function(entity){return(statusPredicate?statusPredicate(entity):"trash"!==entity._data.status)&&entity._data.tag});break;case"untagged":result=_.filter(result,function(entity){return!("all"!==entity._data.status&&"inbox"!==entity._data.status||entity._data.tags&&0!==entity._data.tags.length||!entity._data.tag)});break;case"archive":result=_.filter(result,function(entity){return"archive"===entity._data.status&&entity._data.tag});break;case"trash":result=_.filter(result,function(entity){return"trash"===entity._data.status&&entity._data.tag});break;default:return[]}result=_.sortBy(result,function(entity){return-entity._data.tag.order});break;default:return[]}return queryItems&&_.each(queryItems,function(queryItem){switch(queryItem.type){case"branch":var predicate=this.tagFinderPredicate(queryItem.query);result=_.filter(result,function(entity){return _.find(entity._data.tags,predicate)}),predicate=null;break;case"root":var predicate=this.tagFinderPredicate([queryItem.query]);result=_.filter(result,function(entity){return _.find(entity._data.tags,predicate)}),predicate=null;break;case"not":var predicate=this.tagFinderPredicate([queryItem.query]);result=_.filter(result,function(entity){return!_.find(entity._data.tags,predicate)}),predicate=null;break;case"text":var search=this.fuzzyRegExpString(queryItem.query),predicate=function(item){return search.test(item.data.text)};result=_.filter(result,function(entity){return entity._data.note&&_.find(entity._data.note.items,predicate)}),predicate=null;break;case"type":var predicate=function(item){return item.type===queryItem.query};result=_.filter(result,function(entity){return entity._data.note&&_.find(entity._data.note.items,predicate)}),predicate=null;break;case"id":result=_.filter(result,function(entity){return entity._id===queryItem.query});break;case"color":result=_.filter(result,function(entity){return entity._data.color===queryItem.query});break;case"name":var search=this.fuzzyRegExpString(queryItem.query);result=_.filter(result,function(entity){return entity._data.tag&&search.test(entity._data.tag.name)})}},this),JSON.parse(JSON.stringify(result))},updateActionExecute:function(url,req){switch(url){case"/api/notes/update/tags":return app.dataadapter.local.updateActions.tags(req);case"/api/notes/update/status":return app.dataadapter.local.updateActions.status(req);case"/api/notes/update/color":return app.dataadapter.local.updateActions.color(req);case"/api/notes/upload/list":return app.dataadapter.local.updateActions.list(req)}},updateActions:{tags:function(data){var data=$.extend(!0,{},data),modified=Date.now(),filtered=_.filter(app.dataadapter.local.data.array,function(note){return _.contains(data.ids,note._id)});return _.each(filtered,function(note){_.each(data.tags.pull,function(tagId){var tag=_.find(note._data.tags,function(tag){return tag._id===tagId}),index=note._data.tags.indexOf(tag);index>=0&&(note._data.tags.splice(index,1),note._data.modified=modified)})}),_.each(filtered,function(note){note._data.tags=note._data.tags||[],_.each(data.tags.push,function(tagId){note._data.tags.push({_id:tagId}),note._data.modified=modified})}),_.each(filtered,function(note){note._data.tags=_.uniq(note._data.tags,function(tag){return tag._id}),note._data.tags&&0===note._data.tags.length&&delete note._data.tags}),filtered},status:function(data){var data=$.extend(!0,{},data),modified=Date.now(),filtered=_.filter(app.dataadapter.local.data.array,function(note){return _.contains(data.ids,note._id)});return _.each(filtered,function(note){note._data.status=data.status,note._data.modified=modified}),filtered},color:function(data){var data=$.extend(!0,{},data),modified=Date.now(),filtered=_.filter(app.dataadapter.local.data.array,function(note){return _.contains(data.ids,note._id)});return _.each(filtered,function(note){note._data.color=data.color,note._data.modified=modified}),filtered},list:function(data){var data=$.extend(!0,{},data),created=Date.now(),timeoffset=1402727032767,order=100*(created-timeoffset),notes=[],tags=_.map(data.tags,function(tag){return{_id:tag}}),texts=data.text.split("\n");order+=100*texts.length||0;var batch=app.lib.oid();return _.each(texts,function(text,index){if(text&&text.length>0&&notes.length<201){text=text.trim();var textOriginal=text;text=text.length<app.config.maxNoteLength+1?text:text.substring(0,app.config.maxNoteLength-3),text.length!==textOriginal.length&&(text+="...");var note={_id:app.lib.oid(),_owner:app.data.account.get("_id"),_batch:batch,_data:{created:created,modified:created,color:"white",status:"all",note:{order:Math.round(order-100*index),items:[{data:{text:text},name:null,type:"text",group:null,uid:"0"}]}}};tags.length>0&&(note._data.tags=tags),notes.push(note)}}),notes}},tagFinderPredicate:function(or){var ors=_.map(or,function(tag){return'tag._id==="'+tag+'"'});return new Function("tag","return "+ors.join(" || "))},statusFinderPredicate:function(statusList){var ors=_.map(statusList,function(status){return'entity._data.status==="'+status+'"'});return new Function("entity","return "+ors.join(" || "))},fuzzyRegExpString:function(text){return new RegExp(text.split("").join(".{0,2}").replace(/\s/gim,".*"),"im")}},app.dataadapter.remote={load:function(url,req,method){return app.lib.cursorLoading(),this.request(url,req,method).done(this.onSuccess).fail(this.onError)},save:function(url,req,method){return app.lib.cursorLoading(),this.request(url,req,method).done(this.onSuccess).fail(this.onError)},update:function(url,req,method){return app.lib.cursorLoading(),this.request(url,req,method).done(this.onSuccess).fail(this.onError)},remove:function(url,req){return app.lib.cursorLoading(),this.request(url,req,"DELETE").done(this.onSuccess).fail(this.onError)},request:function(url,req,method){var promise=app.lib.retry(function(){return $.ajax({url:url,contentType:"application/json",type:method||"POST",dataType:"json",data:JSON.stringify(req),cache:!1})});return app.dataadapter.remote.requestCount++,app.dataadapter.remote.requestCount>=5&&(app.dataadapter.remote.requestCount=0,alert("You are making quite a lot requests to server per second")),null===app.dataadapter.remote.timeout&&(app.dataadapter.remote.timeout=setTimeout(function(){app.dataadapter.remote.requestCount=0,app.dataadapter.remote.timeout=null},1e3)),promise},requestCount:0,timeout:null,onSuccess:function(res){app.lib.cursorDefault()},onError:function(jqXHR,textStatus,errorThrown){return jqXHR=jqXHR||{},app.lib.cursorDefault(),logException("dataadapter remote error",jqXHR.statusText+";"+jqXHR.readyState+";"+jqXHR.status+";"+jqXHR.responseText),403==jqXHR.status?void(window.location="/app"):void alert("Unable to complete request to server try again or try to reload page")}},app.view.layout.content=app.lib.element({displayName:"layout.content",componentDidMount:function(){app.events.on("navigate",this.onNavigate,this)},componentDidUpdate:function(){},getInitialState:function(){return{page:null,navigation:null}},onNavigate:function(navigation){this.setState({page:navigation.page,navigation:navigation})},componentWillUnmount:function(){app.events.off(null,null,this)},showContextMenu:function(enable){var $container=$(this.refs.container.getDOMNode());"undefined"==typeof enable?$container.hasClass("showctx")?$container.removeClass("showctx"):$container.addClass("showctx"):enable?$container.addClass("showctx"):$container.removeClass("showctx")},render:function(){var canScroll=!_.contains(["board","board-search"],app.navigation&&app.navigation.view);return React.DOM.div({id:"container",className:"scroll",ref:"container"},React.DOM.div({id:"cont",className:"animate scroll"+(canScroll?" scroll":"")},(app.view.content[this.state.page]||app.view.content.notfound)({navigation:this.state.navigation,key:app.lib.cid()}),app.view.context.contextmenu({selector:"#cont"})),app.view.context[this.state.page]?app.view.context[this.state.page]({toggle:this.showContextMenu}):null)}}),app.view.layout.contextmenu=app.lib.element({displayName:"layout.contextmenu",componentDidMount:function(){app.data.state.on("change:menuNavigationActive change:menuTreeActive change:menuTreeShow",this.forceUpdate.bind(this,null),this)},componentWillUnmount:function(){app.data.state.off(null,null,this)},shouldComponentUpdate:function(nextProps,nextState){return!1},menuNavigationToggle:function(){app.data.state.set("menuNavigationActive",!app.data.state.get("menuNavigationActive"))},menuTreeToggle:function(){app.data.state.set("menuTreeActive",!app.data.state.get("menuTreeActive"))},render:function(){var navigationClasses=window.classnames({item:!0,active:app.data.state.get("menuNavigationActive")}),treeClasses=window.classnames({item:!0,hide:!app.data.state.get("menuTreeShow"),active:app.data.state.get("menuTreeActive")});return React.DOM.div({id:"contextmenu"},React.DOM.span({className:navigationClasses,onClick:this.menuNavigationToggle},React.DOM.i({className:"icon-menu"})),React.DOM.span({className:treeClasses,onClick:this.menuTreeToggle},React.DOM.i({className:"icon-hash"})))}}),app.view.layout.header=app.lib.element({displayName:"layout.header",shouldComponentUpdate:function(nextProps,nextState){return!1},render:function(){return React.DOM.div({id:"header"},React.DOM.span({id:"title"},"Beyondpad"),React.DOM.span({id:"search"},React.DOM.input({type:"text"}),React.DOM.button(null,React.DOM.i({className:"icon-search"}))),React.DOM.div({id:"account"},React.DOM.span({id:"accountname"},"Arturs Girons"),React.DOM.span({id:"accounticon"},React.DOM.i({className:"icon-user-round"}))))}}),app.view.layout.main=app.lib.element({displayName:"layout.main",componentDidMount:function(){app.data.state.on("change:controlTreeShow change:controlNavigationShow",this.forceUpdate.bind(this,null),this)},componentWillUnmount:function(){app.data.state.off(null,null,this)},shouldComponentUpdate:function(nextProps,nextState){return!1},render:function(){var containerClasses=window.classnames({treeshow:app.data.state.get("controlTreeShow"),navigationshow:app.data.state.get("controlNavigationShow")});return React.DOM.div({id:"app",onFocus:this.focus},app.view.layout.header(),React.DOM.div({id:"body",className:containerClasses},app.view.layout.contextmenu(),app.view.layout.navigation(),app.view.layout.sidepane(),app.view.layout.content()))},focus:function(event){app.lib.focus.save(event.target)},componentDidUpdate:function(){app.events.trigger("resize:content")}}),app.view.layout.navigation=app.lib.element({displayName:"layout.navigation",componentDidMount:function(){app.events.on("navigate",this.onNavigate,this)},getInitialState:function(){return{page:null}},onNavigate:function(navigation){this.setState({page:navigation.page})},componentWillUnmount:function(){app.events.off(null,null,this)},shouldComponentUpdate:function(nextProps,nextState){return this.state.page!==nextState.page},validate:function(event){return app.lib.newNotes.validate()?void app.lib.newNotes.clear():(event.preventDefault(),void event.stopPropagation())},render:function(){return React.DOM.div({id:"navigation",className:"noselect"},_.map(app.config.navigation,function(item,index){return item.children?React.DOM.div({key:index,className:"navswap"},React.DOM.div({className:"navswapplaceholder"},React.DOM.a({href:item.url||"#"+item.page,onClick:this.validate,className:window.classnames({item:!0,active:item.page===this.state.page})},React.DOM.i({className:item.icon}),React.DOM.span(null,item.title))),React.DOM.div({className:"navswapcontent"},_.map(item.children,function(item,index){return React.DOM.a({key:index,href:item.page?item.url||"#"+item.page:null,onClick:this.validate,className:window.classnames({item:!0,active:item.page===this.state.page})},React.DOM.i({className:item.icon}),React.DOM.span(null,item.title))},this))):React.DOM.a({key:index,href:"#"+item.page,onClick:this.validate,className:window.classnames({item:!0,active:item.page===this.state.page})},React.DOM.i({className:item.icon}),React.DOM.span(null,item.title))},this))}}),app.view.layout.sidepane=app.lib.element({displayName:"layout.sidepane",componentDidMount:function(){app.events.on("navigate",this.onNavigate,this)},getInitialState:function(){return{page:null,navigation:null}},onNavigate:function(navigation){this.setState({page:navigation.page,navigation:navigation})},componentWillUnmount:function(){app.events.off(null,null,this)},render:function(){return React.DOM.div({id:"sidepane"},(app.view.sidepane[this.state.page]||app.view.sidepane.notfound)({navigation:this.state.navigation}))}}),app.view.context.tags=app.view.context.boards=app.view.context.trackers=app.view.context.notes=app.lib.element({displayName:"context.notes",getInitialState:function(){return{expanded:!1}},componentWillMount:function(){app.events.on("contextbar:initialize",this.initialize,this),app.events.on("contextbar:update",this.update,this),app.events.on("contextbar:dispose",this.dispose,this)},initialize:function(selection){this.selection=selection,this.forceUpdate(function(){this.triggerToggle()}.bind(this))},dispose:function(){this.selection=null,this.props.toggle(!1),this.setState({expanded:!1})},update:function(){this.forceUpdate(function(){this.triggerToggle()}.bind(this))},triggerToggle:function(){this.selection&&this.props.toggle(this.selection.selected.length>0||"trash"===app.navigation.view||this.state.expanded)},componentWillReceiveProps:function(nextProps){this.triggerToggle()},componentWillUnmount:function(){app.events.off(null,null,this),this.props.toggle(!1)},componentDidMount:function(){},applyRetag:function(pushpull){var update={ids:_.map(this.selection.selected,function(item){return item.props.model.get("_id")}),tags:pushpull};this.selection.collection.updateNotes("/api/notes/update/tags",update)},applyColor:function(color){var update={ids:_.map(this.selection.selected,function(item){return item.props.model.get("_id")}),color:color};this.selection.collection.updateNotes("/api/notes/update/color",update)},applyStatus:function(status){var update={ids:_.map(this.selection.selected,function(item){return item.props.model.get("_id")}),status:status};this.selection.collection.updateNotes("/api/notes/update/status",update)},applyDelete:function(){var update={ids:_.map(this.selection.selected,function(item){return item.props.model.get("_id")})};this.selection.collection.removeNotes(update)},retagAll:function(event){var menu={type:"retagmenu",selection:this.selection,callback:this.applyRetag};app.events.trigger("contextmenu:contextbar",$(event.target).closest(".button")[0]||event.target,menu,"bottom")},moveTo:function(event){var menu={type:"statusmenu",callback:this.applyStatus};app.events.trigger("contextmenu:contextbar",$(event.target).closest(".button")[0]||event.target,menu,"bottom")},changeColor:function(event){var menu={type:"colormenu",callback:this.applyColor};app.events.trigger("contextmenu:contextbar",$(event.target).closest(".button")[0]||event.target,menu,"bottom","middle")},changeViewTo:function(view){var path=app.router.getPath(),nav=app.router.prev||app.navigation;view&&(path+=nav.query&&nav.query.all().length>0?"&":"/",path+=view,path=path.replace("//","/").replace("/&","/")),app.router.navigate(path,{trigger:!0,temp:!0})},changeView:function(event){var menu={type:"textmenu",items:[{icon:"icon-archive",text:"Show archived",callback:this.changeViewTo.bind(this,"archive")},{icon:"icon-inbox",text:"Show inboxed",callback:this.changeViewTo.bind(this,"inbox")},{icon:"icon-trash-alt",text:"Show trashed",callback:this.changeViewTo.bind(this,"trash")},{icon:"icon-folder-open",text:"Show all",callback:this.changeViewTo.bind(this,null)}]};app.events.trigger("contextmenu:contextbar",$(event.target).closest(".button")[0]||event.target,menu,"bottom")},changeLayoutTo:function(layout){app.data.account.setOptions("noteLayout",layout),app.events.trigger("resize:window")},changeLayout:function(event){var menu={type:"textmenu",items:[{icon:"icon-th-1",text:"Tile alignment",callback:this.changeLayoutTo.bind(this,"masonry")},{icon:"icon-menu",text:"Row alignment",callback:this.changeLayoutTo.bind(this,"row")}]};app.events.trigger("contextmenu:contextbar",$(event.target).closest(".button")[0]||event.target,menu,"bottom")},toggleContextPanel:function(){this.selection.deselectAll(),this.setState({expanded:!this.state.expanded},function(){this.triggerToggle()}.bind(this))},render:function(){return this.selection?React.DOM.div({id:"ctx",className:"animate"},React.DOM.div({className:"ctxRight"},app.view.components.button({icon:"icon-sort",dropdown:!0,text:"",hidden:!0}),app.view.components.button({icon:"icon-view-mode",dropdown:!0,text:"",title:"Layout mode",onClick:this.changeLayout,inactive:_.contains(["board","board-search"],app.navigation.view)}),app.view.components.button({icon:"icon-eye",text:"",title:"Status view toggle",dropdown:!0,onClick:this.changeView,inactive:!_.contains(["all","trackers","search","manage","list","list-search","board","board-search"],app.navigation.view)})),React.DOM.div({className:"ctxLeft"},app.view.components.button({icon:"icon-block",text:"Uncheck",title:"Unchek all items",ticker:this.selection.selected.length,inactive:0===this.selection.selected.length,onClick:this.selection.deselectAll}),app.view.components.button({icon:"icon-ok-big",text:"Check all",title:"Check all items",onClick:this.selection.selectAll}),app.view.components.button({icon:"icon-tags",text:"Tags",title:"Change item tags",inactive:0===this.selection.selected.length,dropdown:!0,onClick:this.retagAll}),app.view.components.button({icon:"icon-art-gallery",text:"Color",title:"Change item color",inactive:0===this.selection.selected.length,dropdown:!0,onClick:this.changeColor}),app.view.components.button({icon:"icon-folder-open",text:"trash"===app.navigation.view?"Restore":"Move",inactive:0===this.selection.selected.length,dropdown:!0,onClick:this.moveTo}),app.view.components.button({icon:"icon-trash-alt",text:"Permanently delete",inactive:0===this.selection.selected.length,hidden:"trash"!==app.navigation.view,onClick:this.applyDelete})),React.DOM.i({className:"contextpanetoggle icon-ellipsis-vert",onClick:this.toggleContextPanel,title:"Toggle context bar"}),app.view.context.contextmenu({type:"contextbar",selector:"#ctx"})):null}}),app.view.context.contextmenu=app.lib.element({displayName:"context.contextmenu",componentWillMount:function(){this.prev=null},componentDidMount:function(){app.events.on("contextmenu"+(this.props.type?":"+this.props.type:""),this.showContextMenu,this)},showContextMenu:function(element,data,vertical,horizontal){this.cancelHide=!1,element!==this.prev&&this.prev&&(this.cancelHide=!0),this.prev=element,this.setState({element:element,data:data,vertical:vertical||"top",horizontal:horizontal||"right"}),$(document).on("mouseup",this.componentDidBlur)},componentDidBlur:function(event){if(this.state.data){var container=$(this.getDOMNode());container.is(event.target)||0!==container.has(event.target).length||this.hide()}},componentWillReceiveProps:function(nextProps){this.prev=null,this.cancelHide=!1,this.hide(!0)},componentWillUnmount:function(){app.events.off(null,null,this),$(document).off("mouseup",this.componentDidBlur)},shouldComponentUpdate:function(nextProps,nextState){
return!0},getInitialState:function(){return{element:null,data:null,vertical:"top",horizontal:"right"}},hide:function(force){this.hide__=this.hide__||_.debounce(this.hide_,10),this.hide__(force)},hide_:function(force){(!this.cancelHide||force)&&($(document).off("mouseup",this.componentDidBlur),this.isMounted()&&this.setState({element:null,data:null})),this.cancelHide=!1},render:function(){return this.state.data&&app.view.context.components[this.state.data.type]?app.view.context.components[this.state.data.type]({ref:"contextmenu",hide:this.hide,data:this.state.data}):React.DOM.span({style:{display:"none"}})},componentDidUpdate:function(){if(this.state.element){var element=$(this.refs.contextmenu.getDOMNode()),source=$(this.state.element),context=$(this.props.selector||"#cont");element.bbox=element[0].getBoundingClientRect(),source.bbox=source[0].getBoundingClientRect(),context.bbox=context[0].getBoundingClientRect();var offsetTop=0;if("top"==this.state.vertical){var top=source.bbox.top-context.bbox.top-element.bbox.height+context.scrollTop()-offsetTop;top=0>=top?0:top}else{var top=source.bbox.top+source.bbox.height+context.scrollTop()-offsetTop;top=0>=top?0:top}if("middle"===this.state.horizontal){var left=source.bbox.left+source.bbox.width/2-context.bbox.left-element.bbox.width/2+context.scrollLeft();left=0>=left?0:left}else{var left=source.bbox.left-context.bbox.left-element.bbox.width+source.bbox.width+context.scrollLeft();left=0>=left?0:left}$(element).css({top:top+"px",left:left+"px"})}}}),app.view.context.components=app.view.context.components||{},app.view.context.components.retagitem=app.lib.element({displayName:"context.components.retagitem",mixins:[app.lib.mixins.rootParent],getDefaultProps:function(){return{filter:null,tree:[],active:!1,rootParent:null}},getInitialState:function(){return this.isRootParent()?{hasChecked:!1,parents:null,tags:{visible:null,filtered:null}}:{parents:null,tags:{visible:null,filtered:null}}},componentWillMount:function(){this.refreshExpander(this.props)},componentDidMount:function(){this.rootParent().expandedTagHash=_.clone(this.rootParent()._expandedTagHash),this.rootParent().skipUpdate=!1},componentDidUpdate:function(){this.rootParent().expandedTagHash=_.clone(this.rootParent()._expandedTagHash),this.rootParent().skipUpdate=!1},componentWillReceiveProps:function(nextProps){this.isRootParent()&&(this.rootParent().forceExpander=this.props.filter!==nextProps.filter&&nextProps.filter,this.rootParent().skipUpdate&&this.props.filter===nextProps.filter?(this.expandedTagHash={},this._expandedTagHash={}):nextProps.filter?this.refreshExpanderFilter(nextProps):this.refreshExpander(nextProps,this.props.filter!==nextProps.filter))},toggle:function(_id,event){if(this.isRootParent())if(event.preventDefault(),event.stopPropagation(),"undefined"==typeof this.props.selectionHashDefault[_id])"undefined"==typeof this.props.selectionHash[_id]?this.props.selectionHash[_id]=!0:delete this.props.selectionHash[_id],this.forceUpdate();else{if(this.props.selectionHash[_id]===!1)return this.props.selectionHash[_id]=!0,void this.forceUpdate();if(this.props.selectionHash[_id]===!0)return this.props.selectionHash[_id]=this.props.selectionHashDefault[_id]?!1:this.props.selectionHashDefault[_id],void this.forceUpdate();if(null===this.props.selectionHash[_id])return this.props.selectionHash[_id]=!1,void this.forceUpdate()}},refreshExpander:function(props,force){this.isRootParent()&&(props.active||force)&&(this.expandedTagHash=app.data.tags.getParents(_.keys(this.props.selectionHash)),this._expandedTagHash=_.clone(this.expandedTagHash),this.setState({tags:{visible:null,filtered:null}}))},refreshExpanderFilter:function(props){if(this.isRootParent()&&props.filter){var filter=props.filter.toLowerCase(),filteredTags=_.filter(app.data.tags.models,function(tag){return app.lib.searchText(tag.data("tag").name.toLowerCase(),filter)},this),filteredIds=_.map(filteredTags,function(item){return item.get("_id")});this.expandedTagHash=app.data.tags.getParents(filteredIds),this._expandedTagHash=_.clone(this.expandedTagHash);var parentsIds=_.keys(this.expandedTagHash),mergedTags=[].concat(filteredIds,parentsIds);this.setState({tags:{visible:_.object(mergedTags,mergedTags),filtered:filteredIds}})}},isExpanded:function(id){return this.isRootParent()?this.expandedTagHash&&this.expandedTagHash[id]?(this.expandedTagHash[id]=!1,!0):!1:void 0},isVisible:function(id){if(this.isRootParent()){var visible=app.data.tags.get(id).isActive();if(this.state.tags.visible){var show=_.intersection(app.data.tags.getTree(!1)[id].up,this.state.tags.filtered).length>0;return visible&&(!!this.state.tags.visible[id]||show)}return visible}},isChildrenVisible:function(id){if(this.isRootParent()){var status=app.data.tags.get(id).data("status"),visible="all"===status||"inbox"===status;if(this.state.tags.visible){var show=_.intersection(app.data.tags.getTree(!1)[id].up,this.state.tags.filtered).length>0;return visible&&show}return visible}},isToggle:function(id){return this.isRootParent()?"undefined"!=typeof this.props.selectionHash[id]?this.props.selectionHash[id]:!1:void 0},render:function(){return React.DOM.div({className:"retag"},_.map(this.props.tree,function(treeItem){var tag=treeItem.tag,id=app.data.tags.get(tag).get("_id"),childrenVisible=this.props.isChildrenVisible||this.rootParent().isChildrenVisible(id),visible=(this.rootParent().isVisible(id)||childrenVisible)&&app.data.tags.get(id).isActive();if(visible){var newTree=_.reduce(treeItem.down,function(memo,subTag){return memo[subTag]=app.data.tags[this.props.hasNotes?"getTreeTags":"getTree"](!1)[subTag],memo},{},this);newTree=app.data.tags.treeToArray(newTree);var isSelected=this.props.active&&!!_.find(app.navigation.query.tags(),function(queryItem){return queryItem.query===id});return app.view.sidepane.component.checkitem({key:app.lib.uidmap(id),text:app.data.tags.get(tag).data("tag").name,icon:"icon-blank",color:app.lib.color(app.data.tags.get(tag).data("color")),click:this.rootParent().toggle.bind(null,id),checked:this.rootParent().isToggle(id),expanded:this.rootParent().isExpanded(id),forceExpanded:this.rootParent().forceExpander,visible:visible,selected:isSelected},treeItem.down.length>0?app.view.context.components.retagitem({tree:newTree,rootParent:this.props.rootParent||this,active:this.props.active,isChildrenVisible:childrenVisible}):null)}return null},this))}}),app.view.context.components=app.view.context.components||{},app.view.context.components.retagmenu=app.lib.element({displayName:"context.components.retagmenu",componentWillMount:function(){this.selectionHash=this.getSelectionHash(this.props.data.selection),this.selectionHashDefault=_.clone(this.selectionHash),app.data.tags.on("add remove change sync",this.forceUpdate.bind(this,null),this),this.newTag=new app.model.tag,this.newTag.setDefaults("tag"),this.newTag.reset()},componentDidMount:function(){},componentWillUnmount:function(){app.data.tags.off(null,null,this)},getInitialState:function(){return{filter:null}},apply:function(){var result={push:[],pull:[]};_.each(_.keys(this.selectionHash),function(tag){"undefined"!=typeof this.selectionHash[tag]&&null!==this.selectionHash[tag]&&(this.selectionHash[tag]===!0&&result.push.push(tag),this.selectionHash[tag]===!1&&result.pull.push(tag))},this),this.props.data.callback(result),this.props.hide(!0)},getSelectionHash:function(selection){var hash={};this.hasNotes=!0;var arr=_.reduce(selection.selected,function(memo,selected){return this.hasNotes=this.hasNotes&&"note"===selected.props.context,memo.push(_.pluck(selected.props.model.data("tags"),"_id")),memo},[],this),common=_.intersection.apply(null,arr),different=_.difference(_.flatten(arr),common);return _.each(common,function(checkedTag){hash[checkedTag]=!0}),_.each(different,function(uncheckedTag){hash[uncheckedTag]=null}),hash},onSearchChanged:function(filter){this.newTag.update("tag",{name:{$set:'Create tag "'+filter+'"'}},!0);var createNew=filter&&!_.find(app.data.tags.models,function(tag){return tag.data("tag").name.toLocaleLowerCase()===filter.toLocaleLowerCase()},this);this.setState({filter:filter,createNew:createNew})},createNew:function(){var createTag=this.newTag.clone();createTag.update("tag",{name:{$set:this.state.filter}},!0),createTag.save(),this.onSearchChanged(null)},render:function(){return React.DOM.div({className:"contextmenu sidepane retagmenu",ref:"contextmenu"},app.view.sidepane.search({filter:this.state.filter,onChange:this.onSearchChanged,onEnter:this.onSearchSubmit,isSearch:!1,placeholder:"Filter tags"}),this.state.createNew?React.DOM.div({className:"createNew"},app.view.components.tag({tag:this.newTag,onClickTag:this.createNew})):null,app.view.context.components.retagitem({tree:app.data.tags.reduceTree(app.data.tags[this.hasNotes?"getTreeTags":"getTree"]()),selectionHash:this.selectionHash,selectionHashDefault:this.selectionHashDefault,filter:this.state.filter,hasNotes:this.hasNotes,active:!0}),React.DOM.div({className:"retagApply",onClick:this.apply},React.DOM.i({className:"icon-enter"}),"Apply"))}}),app.view.context.components=app.view.context.components||{},app.view.context.components.textmenu=app.lib.element({displayName:"context.components.textmenu",componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},getInitialState:function(){return{}},click:function(item,event){item.callback&&item.callback(),this.props.hide(!0)},render:function(){return React.DOM.div({className:"contextmenu textmenu"},_.map(this.props.data.items,function(item,index){return React.DOM.div({key:index,className:"item","data-value":item.value,onClick:this.click.bind(this,item)},React.DOM.i({className:item.icon}),React.DOM.span(null,item.text))},this))}}),app.view.context.components=app.view.context.components||{},app.view.context.components.tagmenu=app.lib.element({displayName:"context.components.tagmenu",componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},getInitialState:function(){return{}},click:function(tag,event){this.props.data.onClick&&this.props.data.onClick(this.props.data.tag,tag),this.props.hide(!0)},render:function(){return React.DOM.div({className:"contextmenu"},_.map(this.props.data.tags,function(tag,index){return app.view.components.tag({key:app.lib.uidmap(tag),tag:app.data.tags.get(tag),onClickTag:this.click.bind(this,tag)})},this))}}),app.view.context.components=app.view.context.components||{},app.view.context.components.statusmenu=app.lib.element({displayName:"context.components.statusmenu",componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},getInitialState:function(){return{}},click:function(status,event){this.props.data.callback(status),this.props.hide(!0)},render:function(){return React.DOM.div({className:"contextmenu statusmenu"},React.DOM.div({className:"statusmenuitem",onClick:this.click.bind(this,"all")},React.DOM.i({className:"icon-folder-open"}),React.DOM.div({className:"statusmenutitle"},"All"),React.DOM.div({className:"statusmenudetails"},"Default state for active items (all manipulations aviable)")),React.DOM.div({className:"statusmenusub",onClick:this.click.bind(this,"inbox")},React.DOM.div({className:"statusmenuitem"},React.DOM.i({className:"icon-inbox"}),React.DOM.div({className:"statusmenutitle"},"Inbox"),React.DOM.div({className:"statusmenudetails"},"State for incomming, new and important items"))),React.DOM.div({className:"statusmenuitem",onClick:this.click.bind(this,"archive")},React.DOM.i({className:"icon-archive"}),React.DOM.div({className:"statusmenutitle"},"Archive"),React.DOM.div({className:"statusmenudetails"},"Recommended state for dismissed items (aviable in search and archive view only)")),React.DOM.div({className:"statusmenuitem",onClick:this.click.bind(this,"trash")},React.DOM.i({className:"icon-trash-alt"}),React.DOM.div({className:"statusmenutitle"},"Trash"),React.DOM.div({className:"statusmenudetails"},"Items in trash will be deleted in 30 days (aviable only in trash)")))}}),app.view.context.components=app.view.context.components||{},app.view.context.components.colormenu=app.lib.element({displayName:"context.components.colormenu",componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},getInitialState:function(){return{}},click:function(color,event){this.props.data.callback(color),this.props.hide(!0)},render:function(){return React.DOM.div({className:"contextmenu colormenu"},_.map(app.config.colors,function(color,index){return React.DOM.i({key:index,className:"icon-blank ",onClick:this.click.bind(this,color),style:{color:app.lib.color(color)}})},this))}}),app.view.content.boards=app.lib.element({displayName:"content.boards",getInitialState:function(){return{loaded:!1}},componentWillMount:function(){switch(this.collection=new app.collection.notes([],{context:"note"}),this.model=new app.model.note(null,{collection:this.collection}),this.props.navigation.view){case"list":case"list-search":this.collection.on("loaded",this.onDataLoaded,this),this.resetDefaults(),app.lib.newNotes.add(this.model),this.loadData()}},componentDidUpdate:function(prevProps,prevState){this.resetDefaults()},componentWillReceiveProps:function(nextProps){},componentWillUnmount:function(){app.lib.newNotes.remove(this.model),this.collection.off(null,null,this)},loadData:function(){var listModel=app.data.boards.get(app.navigation.data.board).get("lists").get(app.navigation.data.list),query=_.map(listModel.data("tags"),function(tag){return{type:"branch",query:tag}}).concat(_.map(listModel.data("excludeTags"),function(tag){return{type:"not",query:tag}}));query=$.extend(!0,[],query.concat(app.navigation.query.all())),this.collection.load("notes","all",query)},onDataLoaded:function(){this.setState({loaded:!0})},render:function(){switch(this.props.navigation.view){case"all":return app.view.content.component.boards();case"board":case"board-search":return app.view.content.component.lists({board:app.navigation.data.board});case"list":case"list-search":return this.state.loaded?app.view.content.component.notes({collection:this.collection,model:this.model,context:"note",showNew:"list"===app.navigation.view}):app.view.content.component.loading()}},resetDefaults:function(){var data,listModel=app.data.boards.get(app.navigation.data.board).get("lists").get(app.navigation.data.list);listModel.getOptions("addToInbox")&&(data={_data:{status:"inbox"}}),this.model.setDefaults("note",this.getTags(),data),this.model.reset()},getTags:function(){var nav=this.props.navigation;if(app.navigation.data.board&&app.navigation.data.list){var listModel=app.data.boards.get(app.navigation.data.board).get("lists").get(app.navigation.data.list),query=_.map(listModel.data("tags"),function(tag){return{type:"branch",query:tag}});return query&&"list"===nav.view?_.map(query,function(queryItem){return{_id:queryItem.query}}):null}return null}}),app.view.content.calendar=app.lib.element({displayName:"content.calendar",componentWillMount:function(){},componentWillReceiveProps:function(nextProps){},render:function(){return React.DOM.div({className:"commingsoon"},React.DOM.span({className:"highlight"},React.DOM.i({className:"icon-calendar-number"}),"Calendar view")," coming soon",React.DOM.div({className:"details"},React.DOM.div(null,"View or add notes and trackers in calendar view"),React.DOM.div(null,"Any data with date information can be seen hear")))},componentDidUpdate:function(prevProps,prevState){}}),app.view.content.insights=app.lib.element({displayName:"content.insights",componentWillMount:function(){},componentWillReceiveProps:function(nextProps){},render:function(){return React.DOM.div({className:"commingsoon"},React.DOM.span({className:"highlight"},React.DOM.i({className:"icon-chart-pie-alt-explode"}),"Insights")," coming soon",React.DOM.div({className:"details"},React.DOM.div(null,"Get automatic insights based on your notes and trackers"),React.DOM.div(null,"Create graphs and charts for projects, expenses and more...")))},componentDidUpdate:function(prevProps,prevState){}}),app.view.content.map=app.lib.element({displayName:"content.map",componentWillMount:function(){},componentWillReceiveProps:function(nextProps){},render:function(){return React.DOM.div({className:"commingsoon"},React.DOM.span({className:"highlight"},React.DOM.i({className:"icon-map"}),"Map view")," coming soon",React.DOM.div({className:"details"},React.DOM.div(null,"View or add notes and trackers on map"),React.DOM.div(null,"Any data with location information can be seen here")))},componentDidUpdate:function(prevProps,prevState){}}),app.view.content.notes=app.lib.element({displayName:"content.notes",getInitialState:function(){return{loaded:!1}},componentWillMount:function(){this.collection=new app.collection.notes([],{context:"note"}),this.model=new app.model.note(null,{collection:this.collection}),app.lib.newNotes.add(this.model),this.collection.on("loaded",this.onDataLoaded,this),this.collection.on("unloaded",this.onDataUnloaded,this),this.resetDefaults(),this.collection.load("notes",this.props.navigation.view,this.props.navigation.query.all())},componentWillReceiveProps:function(nextProps){this.collection.load("notes",nextProps.navigation.view,nextProps.navigation.query.all())},componentWillUnmount:function(){app.lib.newNotes.remove(this.model),this.collection.off(null,null,this)},componentDidMount:function(){},componentDidUpdate:function(prevProps,prevState){this.resetDefaults()},onDataUnloaded:function(){this.setState({loaded:!1})},onDataLoaded:function(){this.setState({loaded:!0})},render:function(){if(!this.state.loaded)return app.view.content.component.loading();var nav=this.props.navigation;return app.view.content.component.notes({collection:this.collection,model:this.model,context:"note",showNew:"inbox"===nav.view||"all"===nav.view||"trackers"===nav.view&&nav.query.tags().length>0})},resetDefaults:function(){var data;"inbox"===this.props.navigation.view&&(data={_data:{status:"inbox"}}),this.model.setDefaults("note",this.getTags(),data),this.model.reset()},getTags:function(){var nav=this.props.navigation;return nav.query?_.map(nav.query.tags(),function(queryItem){return{_id:queryItem.query}}):null}}),app.view.content.trackers=app.lib.element({displayName:"content.trackers",getInitialState:function(){return{loaded:!1}},componentWillMount:function(){this.collection=new app.collection.notes([],{context:"all"===app.navigation.view?"note":"tracker"}),this.model=new app.model.note(null,{collection:this.collection}),app.lib.newNotes.add(this.model),this.collection.on("loaded",this.onDataLoaded,this),this.resetDefaults(),this.collection.load("trackers",this.props.navigation.view,this.props.navigation.query.all())},componentWillReceiveProps:function(nextProps){this.collection.load("trackers",nextProps.navigation.view,nextProps.navigation.query.all())},componentWillUnmount:function(){app.lib.newNotes.remove(this.model),this.collection.off(null,null,this)},componentDidMount:function(){app.events.trigger("context:notes:init",{reload:this.reload})},componentDidUpdate:function(prevProps,prevState){this.resetDefaults()},onDataLoaded:function(){this.setState({loaded:!0})},render:function(){if(!this.state.loaded)return app.view.content.component.loading();var nav=this.props.navigation;return app.view.content.component.notes({collection:this.collection,model:this.model,context:"all"===app.navigation.view||"search"===app.navigation.view?"note":"tracker",showNew:"manage"===nav.view||"all"===nav.view&&nav.query.tags().length>0})},reload:function(){this.collection.load("trackers",this.props.navigation.view,this.props.navigation.query.all())},resetDefaults:function(){"all"===this.props.navigation.view?this.model.setDefaults("note",this.getTags()):this.model.setDefaults("tracker",this.getTags()),this.model.reset()},getTags:function(){var nav=this.props.navigation;return!nav.query||"all"!==nav.view&&"manage"!==nav.view?null:_.map(nav.query.tags(),function(queryItem){return{_id:queryItem.query}})}}),app.view.content.settings=app.lib.element({displayName:"content.settings",componentWillMount:function(){this.model=new app.model.account,this.model.set(this.model.parse(app.data.account.toJSON())),this.model.on("change:options",this.forceUpdate.bind(this,null),this)},componentWillUnmount:function(){this.model.off(null,null,this)},componentWillReceiveProps:function(nextProps){},addTagLink:function(){this.model.get("tagLinks").push({_data:{tags:[]}}),this.forceUpdate()},removeTagLink:function(taglink){this.model.get("tagLinks").remove(taglink),this.forceUpdate()},save:function(){app.lib.cursorLoading(),this.model.save().then(this.doneSave,this.doneSave),app.data.account.set(app.data.account.parse(this.model.toJSON()))},doneSave:function(){app.lib.cursorDefault()},changeOptionsValue:function(name,type,event){var val;switch(type){case"number":val=parseInt(event.target.value);break;case"boolean":val="true"===event.target.value?!0:!1;break;default:val=event.target.value}this.model.setOptions(name,val)},render:function(){return React.DOM.table({id:"settings"},React.DOM.tbody({className:""},React.DOM.tr({className:"rowMain"},React.DOM.td({className:"collumnDescription"},React.DOM.div({className:"tc"},React.DOM.div({className:"settingsTitle"},"Linked tags"),React.DOM.div({className:"settingsDetails"},'Easly switch between these note tags by simply clicking on one. You can define multiple sets of linked tags. Ideal for linking "Todo", "Later", "Done" tags.'))),React.DOM.td({className:"collumnValue"},React.DOM.div({className:"tc"},_.map(this.model.get("tagLinks").models,function(taglink,index){return React.DOM.div({key:index,className:"taglinkblock"},React.DOM.div({className:"taglinkgroup"},app.view.content.component.taglinktags({model:taglink,account:this.model})),React.DOM.i({className:"icon-cancel",onClick:this.removeTagLink.bind(this,taglink)}))},this),app.view.components.button({icon:"icon-plus-squared",text:"Add list",onClick:this.addTagLink})))),React.DOM.tr({className:"rowMain"},React.DOM.td({className:"collumnDescription"},React.DOM.div({className:"tc"},React.DOM.div({className:"settingsTitle"},"Note column count"),React.DOM.div({className:"settingsDetails"},"Maximum number of columns notes will arenge them selves. Smaller column count may improve readability. (Setting can be changed from context bar)"))),React.DOM.td({className:"collumnValue"},React.DOM.div({className:"tc"},React.DOM.select({value:this.model.getOptions("maxColumnCount"),onChange:this.changeOptionsValue.bind(this,"maxColumnCount","number")},React.DOM.option({value:100},"Fill entire screen"),React.DOM.option({value:6},"6 columns"),React.DOM.option({value:5},"5 columns"),React.DOM.option({value:4},"4 columns"),React.DOM.option({value:3},"3 columns"),React.DOM.option({value:2},"2 columns"),React.DOM.option({value:1},"1 column"))))),React.DOM.tr({className:"rowMain"},React.DOM.td({className:"collumnDescription"},React.DOM.div({className:"tc"},React.DOM.div({className:"settingsTitle"},"Note layout"),React.DOM.div({className:"settingsDetails"},"How notes will arange in columns. Tile alignment will pack notes one after another while Row alignment will enforece rows (less dense). Smaller column count may improve readability. (Setting can be changed from context bar)"))),React.DOM.td({className:"collumnValue"},React.DOM.div({className:"tc"},React.DOM.select({value:this.model.getOptions("noteLayout"),onChange:this.changeOptionsValue.bind(this,"noteLayout","string")},React.DOM.option({value:"masonry"},"Tile alignment"),React.DOM.option({value:"row"},"Row alignment"))))),React.DOM.tr({className:"rowMain"},React.DOM.td({className:"collumnDescription"},React.DOM.div({className:"tc"},React.DOM.div({className:"settingsTitle"},"Toggle block options"),React.DOM.div({className:"settingsDetails"},"Toggle note item options to be always visible. Usefull if you like to customize your notes."))),React.DOM.td({className:"collumnValue"},React.DOM.div({className:"tc"},React.DOM.select({value:this.model.getOptions("noteItemOptions"),onChange:this.changeOptionsValue.bind(this,"noteItemOptions","boolean")},React.DOM.option({value:!1},"Manual"),React.DOM.option({value:!0},"Automatic"))))),React.DOM.tr({className:""},React.DOM.td({className:"collumnDescription"},React.DOM.div({className:"tc"})),React.DOM.td({className:"collumnValue"},React.DOM.div({className:"tc"},app.view.components.button({icon:"icon-enter",text:"Save settings",onClick:this.save}))))))},componentDidUpdate:function(prevProps,prevState){}}),app.view.content.tags=app.lib.element({displayName:"content.tags",getInitialState:function(){return{loaded:!1}},componentWillMount:function(){this.collection=new app.collection.notes([],{context:"tag"}),this.model=new app.model.note(null,{collection:this.collection}),app.lib.newNotes.add(this.model),this.collection.on("loaded",this.onDataLoaded,this),this.collection.on("unloaded",this.onDataUnloaded,this),this.resetDefaults(),this.collection.load("tags",this.props.navigation.view,this.props.navigation.query.all())},componentWillReceiveProps:function(nextProps){this.collection.load("tags",nextProps.navigation.view,nextProps.navigation.query.all())},componentWillUnmount:function(){app.lib.newNotes.remove(this.model),this.collection.off(null,null,this)},componentDidMount:function(){app.events.trigger("context:notes:init",{reload:this.reload})},componentDidUpdate:function(prevProps,prevState){this.resetDefaults()},onDataUnloaded:function(){this.setState({loaded:!1})},onDataLoaded:function(){this.setState({loaded:!0})},render:function(){if(!this.state.loaded)return app.view.content.component.loading();if("graph"===this.props.navigation.view)return app.view.content.component.graph();var nav=this.props.navigation;return app.view.content.component.notes({collection:this.collection,model:this.model,context:"tag",showNew:"all"===nav.view})},reload:function(){this.collection.load("tags",this.props.navigation.view,this.props.navigation.query.all())},resetDefaults:function(){var data;this.model.setDefaults("tag",this.getTags(),data),this.model.reset()},getTags:function(){var nav=this.props.navigation;return nav.query?_.map(nav.query.tags(),function(queryItem){return{_id:queryItem.query}}):null}}),app.view.content.notfound=app.lib.element({displayName:"content.notes",render:function(){return app.view.content.component.notfound()}}),app.view.content.logout=app.lib.element({displayName:"content.logout",componentWillMount:function(){},componentWillReceiveProps:function(nextProps){},render:function(){return React.DOM.div({className:"commingsoon"},React.DOM.span({className:"highlight"},React.DOM.i({className:"icon-off"}),"Logout")," coming soon")},componentDidUpdate:function(prevProps,prevState){}}),app.view.content.feedback=app.lib.element({displayName:"content.feedback",componentWillMount:function(){},componentWillReceiveProps:function(nextProps){},render:function(){return React.DOM.div({className:"commingsoon"},React.DOM.a({className:"highlight",href:"mailto:feedback@beyondpad.com",target:"_blank"},React.DOM.i({className:"icon-comment"}),"feedback@beyondpad.com"),React.DOM.div({className:"details"},React.DOM.div(null,"We would appreciate your feedback"),React.DOM.div(null,"There are some social love buttons on ",React.DOM.a({href:"http://www.beyondpad.com",target:"_blank"},"homepage")," too. :)")))},componentDidUpdate:function(prevProps,prevState){}}),app.view.content.upgrade=app.lib.element({displayName:"content.upgrade",componentWillMount:function(){},componentWillReceiveProps:function(nextProps){},render:function(){return React.DOM.div({className:"commingsoon"},React.DOM.span({className:"highlight"},React.DOM.i({className:"icon-rocket"}),"Upgrade to Pro")," coming soon",React.DOM.div({className:"details"},React.DOM.div(null,"Support Beyondpad development and new features, plus remove all quotas (there are no quotas at the moment)")))},componentDidUpdate:function(prevProps,prevState){}}),app.view.content.upload=app.lib.element({displayName:"content.upload",getInitialState:function(){return{text:""}},upload:function(){var req={tags:this.refs.tags.getTags(),text:this.state.text};app.dataadapter.generic.update("/api/notes/upload/list",req).done(this.postUpload)},reverse:function(){var arr=this.state.text.split("\n");arr=_.map(arr,function(text){return text.trim()}),arr=_.filter(arr,function(text){return text}),arr.reverse(),this.setState({text:arr.join("\n")})},postUpload:function(){this.setState({text:""})},onChange:function(event){this.setState({text:event.target.value})},render:function(){return React.DOM.div({className:"options upload"},app.view.components.group({name:"List of notes to be uploaded"},React.DOM.textarea({value:this.state.text,onChange:this.onChange})),app.view.components.group({name:"Tags for uploaded notes"},app.view.content.component.uploadtags({ref:"tags"})),app.view.components.group({name:"Upload notes"},React.DOM.div({className:"uploaddetails"},React.DOM.div({},"Each line in the list above (excluding blank lines) will be created as a new note"),React.DOM.div({},"In a single upload you can create up to 200 notes"),React.DOM.div({},'Order of notes will be the same as order of lines (use "Reverse" to reverse order)')),app.view.components.button({icon:"icon-sort",text:"Reverse",onClick:this.reverse}),app.view.components.button({icon:"icon-upload-cloud",text:"Upload",onClick:this.upload})))}}),app.view.content.component.choicetags=app.lib.element({displayName:"content.component.choicetags",mixins:[],componentWillMount:function(){},componentWillUnmount:function(){},render:function(){return app.view.components.tagbox({ref:app.lib.cid(),tags:this.props.tags,addTag:this.addTag,removeTag:this.removeTag,events:this.props.events})},addTag:function(tag){this.props.tags.push(tag),this.forceUpdate()},removeTag:function(tag){this.props.tags.splice(this.props.tags.indexOf(tag),1),this.forceUpdate()}}),app.view.content.component.board=app.lib.element({displayName:"content.component.board",mixins:[],getInitialState:function(){return{mode:this.props.mode||"view",placeholder:!0}},componentWillMount:function(){},componentDidMount:function(){$(this.getDOMNode()).data("model",this.props.model),this.focus()},focus:function(){return this.refs.input?(this.refs.input.getDOMNode().focus(),!0):!1},isEdit:function(){return"edit"===this.state.mode},edit:function(){this.setState({mode:"edit",placeholder:!1})},remove:function(){this.props.model.destroy()},keyPress:function(event){"Enter"===event.key&&(event.preventDefault(),this.save())},save:function(){if(this.props.model.get("name"))if(this.props.model.isNew()){var board=this.props.model.clone();this.props.model.collection.unshift(board),this.props.model.collection.sort(),board.save(),this.props.model.clear(),this.props.model.set(this.props.model.defaults()),this.setState({placeholder:!0})}else this.props.model.save(),this.setState({mode:"view"})},updateName:function(event){this.props.model.set("name",event.target.value),this.forceUpdate()},openBoard:function(){this.isEdit()||app.router.navigate("boards/"+this.props.model.get("_id"),{trigger:!0})},more:function(event){event.preventDefault(),event.stopPropagation();var menu={type:"textmenu",items:[]};menu.items.push({icon:"icon-pencil-alt",text:"Edit board",callback:this.edit}),menu.items.push({icon:"icon-trash-alt",text:"Remove board",callback:this.remove}),app.events.trigger("contextmenu",event.target,menu)},removePlaceholder:function(){this.setState({placeholder:!1})},render:function(){var lists=this.props.model.get("lists");switch(this.state.mode){case"view":return React.DOM.div({className:"boarditem view",onDoubleClick:this.openBoard},React.DOM.div({className:"title"},React.DOM.div({className:"value"},this.props.model.get("name"))),React.DOM.div({className:"list"},lists.length>0?_.map(lists.models,function(listModel,index){return React.DOM.div({key:index,className:"item"},listModel.data("name"))}):React.DOM.div({
className:"item",dangerouslySetInnerHTML:{__html:"&nbsp;"}})),React.DOM.div({className:"more icon-ellipsis",onClick:this.more,title:"More"}));case"edit":switch(this.state.placeholder){case!0:return React.DOM.div({className:"boarditem edit placeholder",onClick:this.removePlaceholder},React.DOM.div({className:"text"},"+ New board"));case!1:return React.DOM.div({className:"boarditem edit",onClick:this.openBoard},React.DOM.div({className:"title"},React.DOM.textarea({rows:1,className:"value",value:this.props.model.get("name"),onChange:this.updateName,placeholder:"New board name",ref:"input",onKeyDown:this.keyPress})),React.DOM.div({className:"list"},lists.length>0?_.map(lists.models,function(listModel,index){return React.DOM.div({key:index,className:"item"},listModel.data("name"))}):React.DOM.div({className:"item",dangerouslySetInnerHTML:{__html:"&nbsp;"}})),React.DOM.div({className:"more icon-enter",onClick:this.save,title:"Save board"}))}}},componentDidUpdate:function(prevProps,prevState){(this.state.mode!==prevState.mode||this.state.placeholder!==prevState.placeholder)&&(this.focus(),this.props.onResize())}}),app.view.content.component.boards=app.lib.element({displayName:"content.component.boards",componentWillMount:function(){this.newBoard=new app.model.board(null,{collection:app.data.boards}),app.data.boards.on("add remove sort",this.forceUpdate.bind(this,null),this),app.events.on("resize:component resize:window resize:content",this.reposition,this)},reposition:_.debounce(function(element){if(element){{var $element=$(element).parents(".note"),size={height:$element.outerHeight(),width:$element.outerWidth()};$element.data("size")}$element.data("size",size)}this.alignDOM()},50),componentWillUnmount:function(){app.data.boards.off(null,null,this),app.events.off(null,null,this)},componentDidMount:function(){this.initializeDraggable()},componentDidUpdate:function(){this.initializeDraggable()},changeOrder:function(drag){var order,items=_.filter(this.items,function(item){return!$(item).hasClass("placeholder")}),index=items.indexOf(drag);if(items.length>1){var dataPrev=index>0?$(items[index-1]).data("model"):null,dataNext=index<items.length-1?$(items[index+1]).data("model"):null;dataNext&&dataPrev?order=Math.round(dataPrev.get("order")-(dataPrev.get("order")-dataNext.get("order"))/2):dataPrev?order=dataPrev.get("order")-1e5:dataNext&&(order=dataNext.get("order")+1e5),order&&($(items[index]).data("model").updatePosition(order),this.reposition())}},initializeDraggable:function(){$(".boarditem.ui-draggable",this.getDOMNode()).draggable("destroy"),this.items=$.makeArray($(".boarditem",this.getDOMNode())),$(".boarditem.view",this.getDOMNode()).draggable({distance:10,delay:50,scroll:!0,start:function(event,ui){$(event.target).removeClass("animate"),$(event.target).addClass("drag")}.bind(this),stop:function(event,ui){$(event.target).removeClass("drag"),this.alignDOM(),this.changeOrder(event.target)}.bind(this),drag:function(event,ui){this.reorderDOM(event.target,{top:ui.position.top+(event.pageY-ui.offset.top),left:ui.position.left+(event.pageX-ui.offset.left)})}.bind(this)}),this.alignDOM()},reorderDOM:function(drag,pos,fix){for(var i=0;i<this.items.length;i++){var item=this.items[i];if(item!==drag&&!$(item).hasClass("edit")){var bbox=$(item).data("bbox");if(bbox.top<pos.top&&bbox.top+Math.min($(drag).outerHeight(),bbox.height)>pos.top&&bbox.left<pos.left&&bbox.left+bbox.width>pos.left){var indexDrag=this.items.indexOf(drag),indexDrop=this.items.indexOf(item);this.items.splice(indexDrag,1),this.items.splice(this.items.indexOf(item)+(indexDrag>indexDrop?0:1),0,drag),this.alignDOM(drag),fix||this.reorderDOM(drag,pos,!0);break}}}},onBoardSizeChange:_.debounce(function(note){this.alignDOM()},10),alignDOM:function(target){if(this.isMounted()){var container=$(this.getDOMNode());container.css({width:"auto"});var i,spacer=15,itemWidth=300,containerWidth=container.outerWidth(),count=Math.floor((containerWidth+spacer)/(itemWidth+spacer))||1;count=Math.min(count,app.data.account.getOptions("maxColumnCount")||100);var spaces=[];for(container.css({width:count*itemWidth+(count-1)*spacer}),i=0;count>i;i++)spaces.push({x:itemWidth*i+spacer*i,y:0});var space=spaces[0];for(i=0;i<this.items.length;i++){var $item=$(this.items[i]);$item.data("bbox",{top:space.y,left:space.x,width:$item.outerWidth(),height:$item.outerHeight()}),target&&this.items[i]===target||($(this.items[i]).addClass("animate"),$(this.items[i]).css({position:"absolute",top:space.y+"px",left:space.x+"px"})),space.y+=$item.outerHeight()+spacer,space=_.reduce(spaces,function(first,space){return first.y<=space.y?first:space},space)}}},render:function(){return React.DOM.div({className:"boardoverview"},app.view.content.component.board({onResize:this.onBoardSizeChange,model:this.newBoard,mode:"edit"}),_.map(app.data.boards.models,function(model){return app.view.content.component.board({onResize:this.onBoardSizeChange,key:app.lib.uidmap(model.get("_id")),model:model,mode:"view"})},this))}}),app.view.content.component.graph=app.lib.element({displayName:"content.component.graph",render:function(){return React.DOM.div({className:"graph"})},componentDidMount:function(){var self=this,visibleModels=_.filter(app.data.tags.models,function(tagModel){return tagModel.isVisible()}),nodes=_.map(visibleModels,function(tag){return{data:{id:tag.get("_id"),name:tag.data("tag").name,color:app.lib.color(tag.data("color")),width:12*tag.data("tag").name.length,height:25}}}),edges=_.map(app.data.tags.getEdges(),function(edge){return{data:{source:edge.child,target:edge.parent}}}),options={showOverlay:!0,minZoom:.1,maxZoom:2,layout:{name:"springy",maxSimulationTime:15e3,ungrabifyWhileSimulating:!1,fit:!0,random:!1},style:cytoscape.stylesheet().selector("node").css({shape:"roundrectangle",content:"data(name)","font-family":"Roboto Slab, serif","font-size":14,"text-outline-width":0,"text-outline-color":"#fff","text-valign":"center",color:"#444",width:"data(width)",height:"data(height)","border-width":.75,"border-color":"#999","background-color":"data(color)"}).selector(":selected").css({"border-width":2,"border-color":"#666","line-color":"#666","target-arrow-color":"#666"}).selector("edge").css({width:2,"target-arrow-shape":"triangle"}),elements:{nodes:nodes,edges:edges},ready:function(){self.cy=this,self.cy.boxSelectionEnabled(!1)}};$(".graph").cytoscape(options)},componentWillUnmount:function(){this.cy&&this.cy.remove("*")}}),app.view.content.component.list=app.lib.element({displayName:"content.component.list",getInitialState:function(){return{mode:this.props.mode,loaded:!1}},componentWillMount:function(){this.events=_.clone(Backbone.Events),this.collection=new app.collection.notes([],{context:"note"}),this.model=new app.model.note(null,{collection:this.collection}),app.lib.newNotes.add(this.model),this.collection.on("loaded",this.onDataLoaded,this),this.collection.on("update:model batch:collection",this.props.updateLists),this.resetDefaults(),this.loadData()},componentWillUnmount:function(){app.lib.newNotes.remove(this.model),this.collection.off(null,null,this)},componentWillReceiveProps:function(nextProps){},componentDidMount:function(){"edit"===this.state.mode&&this.focus()},componentDidUpdate:function(prevProps,prevState){prevState.mode!==this.state.mode&&"edit"===this.state.mode&&this.focus()},shouldComponentUpdate:function(nextProps,nextState){return!0},isEdit:function(){return"edit"===this.state.mode},loadData:function(){this.collection.load("notes","all",this.getListQuery())},getListQuery:function(){var query=_.map(this.props.model.data("tags"),function(tag){return{type:"root",query:tag}}).concat(_.map(this.props.model.data("excludeTags"),function(tag){return{type:"not",query:tag}}));return $.extend(!0,[],query.concat(app.navigation.query.all()))},onDataLoaded:function(){this.setState({loaded:!0})},resetDefaults:function(){var data;this.props.model.getOptions("addToInbox")&&(data={_data:{status:"inbox"}}),this.model.setDefaults("note",this.getTags(),data),this.model.reset()},getTags:function(){var query=_.map(this.props.model.data("tags"),function(tag){return{type:"branch",query:tag}});return query.length>0?_.map(query,function(queryItem){return{_id:queryItem.query}}):null},update:function(){this.forceUpdate()},changeName:function(event){this.props.model.data().name=event.target.value,this.forceUpdate()},keyPress:function(event){"Enter"===event.key&&(app.lib.focus.next(".boardlist"),event.preventDefault())},focus:function(){$(":focusable:first",this.getDOMNode()).focus()},save:function(){if(this.props.model.data().name||this.props.model.update({name:{$set:"Unnamed"}}),this.props.model.isNew()){var list=this.props.model.clone();this.props.add(list),this.setState({mode:"add"}),this.props.model.reset()}else this.props.save(),this.toggleMode()},toggleMode:function(){"add"==this.state.mode?this.setState({mode:"edit"}):this.isEdit()?this.setState({mode:"view",loaded:!1},function(){this.resetDefaults(),this.loadData()}.bind(this)):this.setState({mode:"edit"})},showMenu:function(event){event.preventDefault(),event.stopPropagation();var menu={type:"textmenu",items:[]};menu.items.push({icon:"icon-ok-big",text:"Select all notes",callback:this.selectAllNotes}),menu.items.push({icon:"icon-pencil-alt",text:"Edit list",callback:this.editList}),menu.items.push({icon:"icon-trash-alt",text:"Delete list",callback:this.deleteList}),app.events.trigger("contextmenu",event.target,menu,"bottom")},deleteList:function(){this.props.remove(this.props.model)},editList:function(){this.toggleMode()},newNote:function(){this.refs.notes.addNewNote()},optionsToggle:function(field,value,component){this.props.model.data().options=this.props.model.data("options")||{};var options=this.props.model.data("options");if("undefined"==typeof options[field]){var update={};update[field]={$set:!app.config.defaultListOptions[field]},this.props.model.update("options",update),component.update(this.props.model.getOptions(field),!1)}else if("undefined"!=typeof options[field]&&options[field]===app.config.defaultListOptions[field]){var update={};update[field]={$set:void 0},this.props.model.update("options",update),delete this.props.model.data("options")[field],component.update(this.props.model.getOptions(field),!0)}else{var update={};update[field]={$set:!options[field]},this.props.model.update("options",update),component.update(this.props.model.getOptions(field),!1)}},getOptionToggleProps:function(field,text){this.props.model.data().options=this.props.model.data("options")||{};var options=this.props.model.data("options"),isDefault="undefined"==typeof options[field],checked=isDefault?app.config.defaultListOptions[field]:options[field];return{field:field,isDefault:isDefault,checked:checked,text:text,callback:this.optionsToggle}},selectAllNotes:function(){this.refs.notes&&this.refs.notes.selectAllNotes()},render:function(){var background=this.props.index%2==1?" bg light":" bg dark",saved=this.props.model.isNew()?"":" savedlist ";switch(this.state.mode){case"edit":return React.DOM.div({className:"boardlist edit "+saved+background,"data-index":this.props.index},React.DOM.div({className:"head"},React.DOM.textarea({ref:"input",className:"value",value:this.props.model.data("name"),onChange:this.changeName,onKeyDown:this.keyPress,rows:1,placeholder:"List name"}),React.DOM.div({className:"more icon-enter",onClick:this.save,title:"Save list"})),React.DOM.div({className:"options"},app.view.components.group({name:"Tag to include (filter)",labelClassName:background},app.view.content.component.listtags({model:this.props.model,events:this.events})),app.view.components.group({name:"Tags to exclude (optional)",labelClassName:background},app.view.content.component.listexcludetags({model:this.props.model,events:this.events})),React.DOM.div({className:"seperator"}),app.view.components.checkbox(this.getOptionToggleProps("addToInbox","Add note to inbox")),React.DOM.div({className:"seperator"}),app.view.components.checkbox(this.getOptionToggleProps("showNewNote","Always show new note")),React.DOM.div({className:"seperator"}),app.view.components.checkbox(this.getOptionToggleProps("hideTags","Don't show filter tags")),React.DOM.div({className:"seperator"}),app.view.components.checkbox(this.getOptionToggleProps("appendOnly","Only append / don't remove source list tags")),React.DOM.div({className:"seperator"}),React.DOM.div({className:"seperator"}),app.view.components.button({icon:"icon-enter",text:"Save list",onClick:this.save,className:"right"})));case"view":return React.DOM.div({className:"boardlist view "+saved+background,"data-index":this.props.index},React.DOM.div({className:"head"},React.DOM.div({className:"value",onDoubleClick:this.toggleMode},this.props.model.data("name")),React.DOM.div({className:"newnote icon-plus-alt",onClick:this.newNote,title:"Add new note"}),React.DOM.div({className:"more icon-ellipsis",onClick:this.showMenu,title:"More"})),this.state.loaded?app.view.content.component.listnotes({ref:"notes",model:this.model,collection:this.collection,selection:this.props.selection,listModel:this.props.model,lists:this.props.lists}):app.view.content.component.loading());case"add":return React.DOM.div({className:"newboardlist","data-index":this.props.index},React.DOM.span({onClick:this.toggleMode},"+ New list"))}}}),app.view.content.component.listnotes=app.lib.element({displayName:"content.component.listnotes",defaults:{lazyLoadTimeout:0,initialBatchSize:30,lazyBatch:null},getInitialState:function(){return{showNewNote:this.props.listModel.getOptions("showNewNote")}},componentWillMount:function(){this.collection=this.props.collection,this.collection.on("add",this.onNewNoteAdded,this),this.collection.on("remove update batch:collection",this.forceUpdate.bind(this,null),this)},shouldComponentUpdate:function(nextProps,nextState){return!0},componentWillReceiveProps:function(nextProps){},componentWillUnmount:function(){this.collection.off(null,null,this),this.lazyLoadDisable();var $sortable=$(this.getDOMNode());$sortable.sortable("destroy"),$sortable.removeData()},componentDidMount:function(){var $sortable=$(this.getDOMNode());$sortable.sortable({appendTo:".boardlistwrapper",containment:".boardlistwrapper",items:".note.sortable",tolerance:"pointer",delay:50,scroll:!1,forceHelperSize:!0,forcePlaceholderSize:!0,connectWith:".view .body",zIndex:100,helper:this.getSortableHelper,start:this.onStartSorting,update:this.updateNotePosition}),$sortable.data("model",this.props.model),this.lazyLoadEnable()},onNewNoteAdded:function(model){model.newlyAdded=!0,this.forceUpdate()},onStartSorting:function(event,ui){app.view.content.component.listnotes._source=this},updateNotePosition:function(event,ui){var order,sourceList=ui.sender&&ui.sender[0],targetList=$(this.getDOMNode()),items=$.makeArray($(".note.sortable",targetList).filter(":visible")),index=items.indexOf(ui.item[0]);if(items.length>1&&index>=0){var dataPrev=index>0?$(items[index-1]).data("model").data():null,dataNext=index<items.length-1?$(items[index+1]).data("model").data():null;dataNext&&dataPrev?order=Math.round(dataPrev.note.order-(dataPrev.note.order-dataNext.note.order)/2):dataPrev?order=dataPrev.note.order-1e5:dataNext&&(order=dataNext.note.order+1e5)}var noteTags,noteTagsOnly;if(sourceList&&targetList){var noteModel=ui.item.data("model");if(noteTags=noteModel.data("tags"),!this.props.listModel.getOptions("appendOnly")){var nonTargetTags=_.reduce(this.props.lists,function(array,list){return list!==this.props.listModel&&array.push(list.data("tags")),array},[],this);noteTagsOnly=_.pluck(noteTags,"_id"),nonTargetTags=_.filter(nonTargetTags,function(tags){return _.intersection(tags,noteTagsOnly).length>=tags.length}),nonTargetTags=_.flatten(nonTargetTags),noteTags=_.filter(noteTags,function(tag){return!_.contains(nonTargetTags,tag._id)})}var targetListModel=targetList.data("model"),targetTags=targetListModel.data("tags");noteTags=noteTags.concat(targetTags),noteTags=_.uniq(noteTags,function(item){return item._id})}if(noteTags||order){app.view.content.component.listnotes._source&&(noteTags&&$(ui.item[0]).hide(),$(app.view.content.component.listnotes._source.getDOMNode()).sortable("cancel"),app.view.content.component.listnotes._source=null);var model=$(items[index]).data("model");if(noteTags){var tagsPrev=_.pluck(noteModel.data("tags"),"_id"),tagsNext=_.pluck(noteTags,"_id"),remove=_.difference(tagsPrev,tagsNext),add=_.difference(tagsNext,tagsPrev);_.each(remove,function(tag){model.deleteTag(tag,"note",!0)},this),_.each(add,function(tag){model.appendTag(tag,"note",!0)},this)}order&&model.update("note",{order:{$set:order}},!0);var json=model.toJSON();model.trigger("update:model",json),this.collection.trigger("update:model",json),model.save("note").done(function(){$(ui.item[0]).show()})}},getSortableHelper:function(event,element){var helper=element.clone();return helper.removeAttr("data-reactid"),helper.find("[data-reactid]").removeAttr("data-reactid"),helper},lazyLoadEnable:function(){null!==this.defaults.lazyLoadTimeout&&(this.lazyNotes=this.lazyNotes||_.sortBy(_.keys(this.refs),function(ref){return this.refs[ref].props.index},this),this.lazyBatchSize=this.defaults.initialBatchSize,this.lazyLoad())},lazyLoad:function(){if(null!==this.defaults.lazyBatch)this.items.length>this.lazyBatchSize?(this.lazyBatchSize+=this.defaults.lazyBatch,this.forceUpdate(function(){this.lazyLoadTimeout=setTimeout(this.lazyLoad,this.defaults.lazyLoadTimeout)}.bind(this))):this.lazyLoadTimeout=null;else if(this.lazyNotes&&this.lazyNotes.length>0){var note=this.refs[this.lazyNotes.shift()];note.state.inflated?this.lazyLoadTimeout=setTimeout(this.lazyLoad,0):note.inflate(function(){this.lazyLoadTimeout=setTimeout(this.lazyLoad,this.defaults.lazyLoadTimeout)}.bind(this))}else this.lazyLoadTimeout=null},lazyLoadDisable:function(){this.lazyNotes=null,app.lib.clearTimeout(this.lazyLoadTimeout)},addNewNote:function(){this.setState({showNewNote:!this.state.showNewNote})},onNoteSaved:function(){this.setState({showNewNote:this.getInitialState().showNewNote})},onNoteResize:function(){},selectAllNotes:function(){var children=app.lib.getChildren(this);_.each(children,function(noteComponent){noteComponent.setSelected(!0)}.bind(this))},getTagsToHide:function(){return this.props.listModel.getOptions("hideTags")?this.props.listModel.data("tags"):[]},render:function(){return React.DOM.div({className:"body scroll"},this.state.showNewNote?app.view.note.main({key:"new",focus:!0,view:"edit",model:this.props.model,className:"stamp",context:"note",onSaved:this.onNoteSaved,inflated:!0,onResize:this.onNoteResize,selection:this.props.selection}):null,_.map(this.collection.models,function(model,index){return app.view.note.main({key:model.key,ref:model.key,view:"view",model:model,context:"note",selection:this.props.selection,inflated:model.newlyAdded||null===this.defaults.lazyLoadTimeout||index<this.lazyBatchSize||index<this.defaults.initialBatchSize,onResize:this.onNoteResize,index:index+1,className:"sortable",getTagsToHide:this.getTagsToHide})},this))}}),app.view.content.component.listtags=app.lib.element({displayName:"content.component.listtags",mixins:[app.lib.mixins.resize,app.lib.mixins.focus],componentWillMount:function(){this.props.model.on("update:tags",this.forceUpdate.bind(this,null),this)},componentWillUnmount:function(){this.props.model.off(null,null,this)},render:function(){return app.view.components.tagbox({ref:app.lib.cid(),tags:this.props.model.data("tags"),addTag:this.addTag,removeTag:this.removeTag,events:this.props.events})},addTag:function(tag){this.props.model.update({tags:{$push:[tag]}})},removeTag:function(tag){var tags=this.props.model.data("tags");this.props.model.update({tags:{$splice:[[tags.indexOf(tag),1]]}})}}),app.view.content.component.listexcludetags=app.lib.element({displayName:"content.component.listexcludetags",mixins:[app.lib.mixins.resize,app.lib.mixins.focus],componentWillMount:function(){this.props.model.on("update:excludeTags",this.forceUpdate.bind(this,null),this)},componentWillUnmount:function(){this.props.model.off(null,null,this)},render:function(){return app.view.components.tagbox({ref:app.lib.cid(),tags:this.props.model.data("excludeTags"),addTag:this.addTag,removeTag:this.removeTag,events:this.props.events})},addTag:function(tag){this.props.model.update({excludeTags:{$push:[tag]}})},removeTag:function(tag){var tags=this.props.model.data("excludeTags");this.props.model.update({excludeTags:{$splice:[[tags.indexOf(tag),1]]}})}}),app.view.content.component.lists=app.lib.element({displayName:"content.component.lists",componentWillMount:function(){this.setModel(this.props.board),this.collection=new app.collection.notes(null,{context:"note"}),this.collection.req={page:"none"},this.collection.on("batch:collection",this.updateLists),this.selection=app.lib.selection({collection:this.collection,selectAll:this.selectAllNotes})},selectAllNotes:function(){var lists=_.map(_.keys(this.refs),function(key){return this.refs[key]},this);_.each(lists,function(list){list.selectAllNotes()})},componentDidMount:function(){$(this.getDOMNode()).sortable({containment:"parent",items:".boardlist.savedlist",tolerance:"pointer",cursor:"ew-resize",axis:"x",handle:".head",update:this.reorderFinished,scroll:!0,delay:100,forceHelperSize:!0,forcePlaceholderSize:!0}),app.events.trigger("contextbar:initialize",this.selection)},reorderFinished:function(event,ui){var indexArray=$(this.getDOMNode()).sortable("toArray",{attribute:"data-index"}),orderedItems=_.map(indexArray,function(index){return this.board.get("lists").models[parseInt(index)]},this);orderedItems=orderedItems.concat(_.difference(this.board.get("lists").models,orderedItems)),$(this.getDOMNode()).sortable("cancel"),this.board.set("lists",new app.collection.lists(orderedItems)),this.board.save(),this.refresh()},componentWillUnmount:function(){app.events.trigger("contextbar:dispose"),this.unsetModel()},componentWillReceiveProps:function(nextProps){this.setModel(nextProps.board)},setModel:function(id){this.unsetModel(),this.board=app.data.boards.get(id),this.board.on("change",this.refresh,this),this.newList=new app.model.list},unsetModel:function(){this.board&&(this.board.off(null,null,this),this.board=null)},refresh:function(){this.forceUpdate()},add:function(list){this.board.get("lists").push(list),this.board.save(),this.refresh()},remove:function(list){this.board.get("lists").remove(list),this.board.save(),this.refresh()},save:function(){this.board.save(),this.refresh()},updateLists:function(response){if(response){var responseData=_.isArray(response)?response:[response],lists=_.map(_.keys(this.refs),function(key){return this.refs[key]},this);_.each(lists,function(list){var inContextData=app.dataadapter.local.filter(list.collection.req,responseData),notesUpdate=_.map(inContextData,function(item){return app.model.note.parse(item)}),models=list.collection.add(notesUpdate,{merge:!0});models.length>0&&list.collection.sort(),_.each(models,function(model){model.trigger("batch:model")});var notesRemove=_.map(_.difference(_.pluck(responseData,"_id"),_.pluck(inContextData,"_id")),function(id){return list.collection.get(id)});list.collection.remove(notesRemove),list.collection.trigger("batch:collection")})}},render:function(){return React.DOM.div({className:"boardlistwrapper"+((this.board.get("lists").models.length+(this.board.get("lists").models.length>0?0:1))%2==1?" bg light":" bg dark")},_.map(this.board.get("lists").models,function(list,index){return app.view.content.component.list({key:app.lib.uidmap(list.get("_id")),ref:index,lists:this.board.get("lists").models,model:list,add:this.add,save:this.save,remove:this.remove,mode:"view",index:index,selection:this.selection,updateLists:this.updateLists})},this),app.view.content.component.list({key:"new",model:this.newList,add:this.add,save:this.save,remove:this.remove,mode:this.board.get("lists").models.length>0?"add":"edit",index:this.board.get("lists").models.length}))}}),app.view.content.component.notes=app.lib.element({displayName:"content.component.notes",defaults:{lazyLoadTimeout:0,initialBatchSize:30,lazyBatch:null,noteWidth:300,spacer:15},componentWillMount:function(){this.collection=this.props.collection,this.collection.on("add",this.onNewNoteAdded,this),this.collection.on("remove update batch:collection",this.forceUpdate.bind(this,null),this),app.events.on("resize:window resize:content",this.forceUpdate.bind(this,null),this),this.selection=app.lib.selection({collection:this.collection,selectAll:this.selectAllNotes}),app.events.trigger("contextbar:initialize",this.selection)},componentWillUnmount:function(){app.events.trigger("contextbar:dispose"),this.lazyLoadDisable(),this.collection.off(null,null,this),app.events.off(null,null,this),$(this.getDOMNode()).off(),$(this.getDOMNode()).removeData(),this.items=null,this.currentDraggable=null},componentDidMount:function(){var self=this;$(this.getDOMNode()).on("mouseover",".note.sortable",function(){self.currentDraggable===this||$(self.currentDraggable).hasClass("ui-draggable-dragging")||(self.currentDraggable&&($(self.currentDraggable).hasClass("ui-draggable")&&$(self.currentDraggable).draggable("destroy"),self.currentDraggable=null),$(this).draggable({distance:5,delay:30,scroll:!0,scrollSensitivity:30,scrollSpeed:20,start:function(event,ui){var element=$(event.target);element.data("startingScrollTop",element.parent().parent().scrollTop())}.bind(self),stop:function(event,ui){self.updateNotePosition(event.target)}.bind(self),drag:function(event,ui){var element=$(event.target);ui.position.top+=element.parent().parent().scrollTop()-parseInt(element.data("startingScrollTop")),self.alignNotesOnDrag(event.target,{top:ui.position.top+(event.pageY-ui.offset.top),left:ui.position.left+(event.pageX-ui.offset.left)})}.bind(self)}),self.currentDraggable=this)}),this.componentDidMountOrUpdate(),this.lazyLoadEnable()},componentDidUpdate:function(){this.componentDidMountOrUpdate()},componentDidMountOrUpdate:function(){this.items=$.makeArray($(".note",this.getDOMNode())),this.alignAllNotes()},selectAllNotes:function(){var children=app.lib.getChildren(this);_.each(children,function(noteComponent){noteComponent.setSelected(!0)}.bind(this))},lazyLoadEnable:function(){null!==this.defaults.lazyLoadTimeout&&(this.lazyNotes=this.lazyNotes||_.sortBy(_.keys(this.refs),function(ref){return this.refs[ref].props.index},this),this.lazyBatchSize=this.defaults.initialBatchSize,this.lazyLoad())},lazyLoad:function(){if(null!==this.defaults.lazyBatch)this.items.length>this.lazyBatchSize?(this.lazyBatchSize+=this.defaults.lazyBatch,this.forceUpdate(function(){this.lazyLoadTimeout=setTimeout(this.lazyLoad,this.defaults.lazyLoadTimeout)}.bind(this))):this.lazyLoadTimeout=null;else if(this.lazyNotes&&this.lazyNotes.length>0){var note=this.refs[this.lazyNotes.shift()];note&&!note.state.inflated?note.inflate(function(){this.addNoteToAlignment(note.getDOMNode()),this.lazyLoadTimeout=setTimeout(this.lazyLoad,this.defaults.lazyLoadTimeout)}.bind(this)):this.lazyLoadTimeout=setTimeout(this.lazyLoad,0)}else this.lazyLoadTimeout=null},lazyLoadDisable:function(){this.lazyNotes=null,app.lib.clearTimeout(this.lazyLoadTimeout)},onNewNoteAdded:function(model){model.newlyAdded=!0,this.forceUpdate(function(){this.alignAllNotes()}.bind(this))},onNoteSizeChange:_.debounce(function(note){this.alignAllNotes()},10),onNoteUnmount:function(note){var $note=$(note.getDOMNode());$note.hasClass("ui-draggable")&&$note.draggable("destroy")},alignNotesOnDrag:function(drag,pos,fix){for(var dragBoxSize=$(drag).data("noteSize"),i=0;i<this.items.length;i++){var item=this.items[i];if(item!==drag&&!$(item).hasClass("stamp")){var size=$(item).data("noteSize"),position=$(item).data("notePosition");if(position.top<pos.top&&position.top+Math.min(dragBoxSize.height,size.height)>pos.top&&position.left<pos.left&&position.left+size.width>pos.left){var indexDrag=this.items.indexOf(drag),indexDrop=this.items.indexOf(item);this.items.splice(indexDrag,1),this.items.splice(this.items.indexOf(item)+(indexDrag>indexDrop?0:1),0,drag),this.alignAllNotes(drag),fix||this.alignNotesOnDrag(drag,pos,!0);break}}}},updateNotePosition:function(drag){var order,items=_.filter(this.items,function(item){return!$(item).hasClass("stamp")}),index=items.indexOf(drag);if(items.length>1){var dataPrev=index>0?$(items[index-1]).data("model").data():null,dataNext=index<items.length-1?$(items[index+1]).data("model").data():null;dataNext&&dataPrev?order=Math.round(dataPrev[this.props.context].order-(dataPrev[this.props.context].order-dataNext[this.props.context].order)/2):dataPrev?order=dataPrev[this.props.context].order-1e5:dataNext&&(order=dataNext[this.props.context].order+1e5),order&&($(items[index]).data("model").updatePosition(this.props.context,order),this.forceUpdate())}else this.forceUpdate()},clearAlignSpacer:function(){var containerWidth=$(this.getDOMNode()).outerWidth(),count=Math.floor((containerWidth+this.defaults.spacer)/(this.defaults.noteWidth+this.defaults.spacer))||1;count=Math.min(count,app.data.account.getOptions("maxColumnCount")||100),this.spaces=[],this.spacesActual=[],this.spacesRowHeight={};for(var i=0;count>i;i++){var x=this.defaults.noteWidth*i+this.defaults.spacer*i;this.spaces.push({x:x,y:0,rows:0}),this.spacesActual.push({x:x,y:0,rows:0})}},addNoteToAlignment:function(element){this.items.push(element),this.alignNote(element)},alignNote:function(element){var masonry="masonry"===app.data.account.getOptions("noteLayout");if(masonry)var space=_.min(this.spaces,function(space){return space.y});else var space=_.min(this.spaces,function(space){return space.rows});var spaceIndex=this.spaces.indexOf(space),$note=$(element),size=$note.data("noteSize"),sizeActual=$note.data("noteSizeActual");if(masonry)var top=this.spacesActual[spaceIndex].y;else var top=this.spacesRowHeight[space.rows]||0;$note.data("notePosition",{top:top,left:space.x}),$note.css({top:top+"px",left:space.x+"px"}),space.rows+=1,this.spacesActual[spaceIndex].rows+=1,masonry?(space.y+=size.height+this.defaults.spacer,this.spacesActual[spaceIndex].y+=sizeActual.height+this.defaults.spacer):(space.y=top+size.height+this.defaults.spacer,this.spacesActual[spaceIndex].y=top+sizeActual.height+this.defaults.spacer),this.spacesRowHeight[space.rows]=Math.max(this.spacesRowHeight[space.rows]||0,this.spacesActual[spaceIndex].y)},alignAllNotes:function(target){this.clearAlignSpacer();for(var i=0;i<this.items.length;i++)this.alignNote(this.items[i])},render:function(){return React.DOM.div({id:"notesblock"},this.props.showNew?app.view.note.main({focus:!0,key:"new",inflated:!0,view:"edit",model:this.props.model,className:"stamp",context:this.props.context,selection:this.selection,onResize:this.onNoteSizeChange,onUnmount:this.onNoteUnmount}):null,_.map(this.collection.models,function(model,index){return app.view.note.main({key:model.key,inflated:model.newlyAdded||null===this.defaults.lazyLoadTimeout||index<this.lazyBatchSize||index<this.defaults.initialBatchSize,ref:model.key,index:index+1,view:"view",model:model,className:"sortable",context:this.props.context,selection:this.selection,force:this.force,onResize:this.onNoteSizeChange,onUnmount:this.onNoteUnmount})},this))}}),app.view.content.component.notfound=app.lib.element({displayName:"content.component.notfound",render:function(){return React.DOM.div(null,"Not found")}}),app.view.content.component.taglinktags=app.lib.element({displayName:"content.component.taglinktags",mixins:[],componentWillMount:function(){this.props.model.on("update:tags",this.forceUpdate.bind(this,null),this)},componentWillUnmount:function(){this.props.model.off(null,null,this)},render:function(){var exclude=[];return exclude=_.flatten(_.map(this.props.account.get("tagLinks").models,function(model){return model.data("tags")})),app.view.components.tagbox({ref:app.lib.cid(),tags:this.props.model.data("tags"),addTag:this.addTag,removeTag:this.removeTag,events:this.props.events,exclude:exclude})},addTag:function(tag){
this.props.model.update({tags:{$push:[tag]}})},removeTag:function(tag){var tags=this.props.model.data("tags");this.props.model.update({tags:{$splice:[[tags.indexOf(tag),1]]}})}}),app.view.content.component.uploadtags=app.lib.element({displayName:"content.component.uploadtags",mixins:[],getInitialState:function(){return{tags:[]}},render:function(){return app.view.components.tagbox({ref:"tags",tags:this.state.tags,addTag:this.addTag,removeTag:this.removeTag,events:this.props.events})},getTags:function(){return this.state.tags},addTag:function(tag){this.state.tags.push(tag),this.forceUpdate()},removeTag:function(tag){this.state.tags.splice(this.state.tags.indexOf(tag),1),this.forceUpdate()}}),app.view.content.component.loading=app.lib.element({displayName:"content.component.loading",render:function(){return React.DOM.div({className:"loadingdata"},React.DOM.div({className:"loadingdatatext"},"Loading..."))}}),app.view.components.button=app.lib.element({displayName:"components.button",mixins:[React.addons.PureRenderMixin],getDefaultProps:function(){return{icon:"icon-flash",text:"Button",onClick:null,ticker:null}},render:function(){return this.props.hidden?null:React.DOM.div({className:"button"+(this.props.dropdown?" drop":"")+(this.props.text?"":" textless")+(null!==this.props.ticker?" tick":"")+(this.props.inactive?" inactive":"")+" "+this.props.className||"",onClick:this.props.inactive?null:this.props.onClick,title:this.props.title||this.props.text},React.DOM.i({className:this.props.icon}),React.DOM.span(null,this.props.text),this.props.dropdown?React.DOM.i({className:"dropicon icon-down-dir"}):null,null!==this.props.ticker?React.DOM.div({className:"ticker"},this.props.ticker):null)}}),app.view.components.checkbox=app.lib.element({displayName:"components.checkbox",getInitialState:function(){return{checked:this.props.checked,isDefault:this.props.isDefault}},getDefaultProps:function(){return{field:null,checked:!1,isDefault:!0,text:"Label",callback:null}},componentWillMount:function(){},componentDidMount:function(){},componentDidUpdate:function(){},toggle:function(event){this.props.callback&&this.props.callback(this.props.field,!this.state.checked,this)},update:function(checked,isDefault){this.setState({checked:checked,isDefault:isDefault})},render:function(){return React.DOM.div({className:"checkboxlable"},React.DOM.span({className:this.state.isDefault?"default":"",onClick:this.toggle},React.DOM.i({className:window.classnames({checkbox:!0,"icon-blank-empty":!this.state.checked,"icon-ok-blank":this.state.checked})}),React.DOM.span({className:"labeltext"},this.props.text)))}}),app.view.components.group=app.lib.element({displayName:"components.group",mixins:[React.addons.PureRenderMixin],getDefaultProps:function(){return{name:null,labelClassName:null}},render:function(){return React.DOM.div({className:"optionsitem"},this.props.name?React.DOM.div({className:"label "+(this.props.labelClassName||"")},this.props.name):null,React.DOM.div({className:"element"},this.props.children))}}),app.view.components.tag=app.lib.element({displayName:"components.tag",componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},getInitialState:function(){return{expand:!1}},shouldComponentUpdate:function(nextProps,nextState){return!0},render:function(){if(!this.props.tag)return null;var tagClasses={};tagClasses.tagcontent=!0,tagClasses.active=this.props.active,tagClasses.remove=this.props.onRemoveTag,tagClasses.noselect=this.props.onRemoveTag;var hasTagLink=!!app.data.account.tagLinkHash[this.props.tag.get("_id")];return React.DOM.div({className:"tag"},React.DOM.div({className:window.classnames(tagClasses),onMouseOver:this.onMouseOverTag,onClick:this.onClickTag},React.DOM.i({className:this.props.tag.get("_temp")&&this.props.tag.get("_temp")._icon?this.props.tag.get("_temp")._icon:this.props.tag.data("tag").icon||(hasTagLink?"icon-link-ext-alt":"icon-blank"),style:{color:app.lib.color(this.props.tag.data("color"))}}),React.DOM.span(null,this.props.tag.data("tag").name),this.props.onRemoveTag?React.DOM.i({className:"remove icon-cancel",onClick:this.onRemoveTag},null):null))},onMouseOverTag:function(event){this.props.onMouseOverTag&&this.props.onMouseOverTag(event,this.props.tag)},onClickTag:function(event){this.setState({expand:!this.state.expand}),this.props.onClickTag&&this.props.onClickTag(event,this.props.tag),event.preventDefault(),event.stopPropagation()},onRemoveTag:function(event){event.preventDefault(),event.stopPropagation(),this.props.onRemoveTag&&this.props.onRemoveTag(event,this.props.tag)},componentDidUpdate:function(){this.props.active&&$(this.getDOMNode()).scrollintoview({direction:"y",duration:0})}}),app.view.components.tagbox=app.lib.element({displayName:"components.tagbox",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],componentWillMount:function(){this.events=_.clone(Backbone.Events),this.events.on("add",this.addTag,this),$(document).on("mouseup",this.componentDidBlur),this.temp={backspacecount:0,timeout:null},this.resolveTags(this.props.tags)},componentWillUnmount:function(){this.events.off(null,null,this),$(document).off("mouseup",this.componentDidBlur),app.lib.clearTimeout(this.temp.timeout)},componentDidBlur:function(event){if(this.state.showLookup){var container=$(this.getDOMNode());container.is(event.target)||0!==container.has(event.target).length||(app.lib.clearTimeout(this.temp.timeout),app.lib.focus.clear(),this.setState({showLookup:!1}))}},componentWillReceiveProps:function(nextProps){this.resolveTags(nextProps.tags)},onResize:function(){},resolveTags:function(tags){tags=_.filter(tags,function(tag){var tagModel=app.data.tags.get(tag);return tagModel&&tagModel.isVisible()});var selected=_.map(tags,function(tag){return app.data.tags.get(tag)});this.setState({text:"",selected:selected})},getInitialState:function(){return{showLookup:!1,text:"",selected:[]}},focus:function(){return this.refs.input.getDOMNode().focus(),this.onFocus(),!0},onFocus:function(){app.lib.clearTimeout(this.temp.timeout),this.__scroll=this.__scroll||_.debounce(this.scroll,5),this.__scroll(),this.setState({showLookup:!0})},blur:function(event){var target=event.target;this.temp.timeout=setTimeout(function(){app.lib.isMounted(this)&&target!==document.activeElement&&this.setState({showLookup:!1})}.bind(this),250)},textChanged:function(event){this.temp.backspacecount=0,this.setState({showLookup:!0,text:event.target.value})},keyDown:function(event){if(_.contains(["PageUp","PageDown","ArrowUp","ArrowDown"],event.key)){var key=event.key;this.state.showLookup?this.events.trigger("navigate",key):this.setState({showLookup:!0}),event.preventDefault(),event.stopPropagation()}else switch(event.key){case"Enter":this.state.showLookup?this.events.trigger("select","keyboard"):this.setState({showLookup:!0}),event.preventDefault(),event.stopPropagation();break;case"Backspace":0===this.state.text.length&&(++this.temp.backspacecount>0||!this.state.showLookup)&&(this.state.showLookup?this.setState({showLookup:!1}):this.removeTag());break;case"Escape":this.setState({showLookup:!1})}},removeTag:function(index){if(index=(index||this.props.tags.length)-1,index>=0){var tag=this.props.tags[index],model=app.data.tags.get(tag);model&&model.isVisible()?this.props.removeTag(tag):this.removeTag(index)}},addTag:function(item,source){if(item.isNew())switch(item.get("_temp")._command){case"add":var newTag=item.clone();newTag.update("tag",{name:{$set:newTag.get("_temp")._name}}),newTag.unset("_temp"),newTag.save().done(function(){this.addTag(newTag,source)}.bind(this)),item.update("color",{$set:app.lib.randomColor()});break;case"save":this.props.events.trigger("save")}else this.props.addTag(item.get("_id")),"keyboard"===source?this.setState({showLookup:!1}):this.focus()},getDefaultProps:function(){return{addTag:null,removeTag:null}},render:function(){return React.DOM.div({className:"tags",onClick:this.clickComponent},_.map(this.state.selected,function(tag){return app.view.components.tag({key:app.lib.uidmap(tag.get("_id")),tag:tag,onClickTag:this.props.onClickTag,onRemoveTag:this.onRemoveTag,onReplaceTag:this.props.replaceTag})},this),React.DOM.input({ref:"input",onFocus:this.onFocus,onBlur:this.blur,onChange:this.textChanged,onKeyDown:this.keyDown,value:this.state.text,placeholder:" + Add or create tags"}),app.view.components.taglookup({events:this.events,filter:this.state.text,selected:this.state.selected,show:this.state.showLookup,save:this.props.save,create:!0,rootParent:this.props.rootParent,exclude:this.props.exclude}))},clickComponent:function(event){this.focus()},onRemoveTag:function(event,tagModel){this.props.removeTag(tagModel.get("_id"))},componentDidUpdate:function(){},scroll:function(){this.isMounted()&&$(this.getDOMNode()).scrollintoview({direction:"y",duration:100})}}),app.view.components.taglookup=app.lib.element({displayName:"components.taglookup",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],componentWillMount:function(){this.props.events.on("navigate",this.navigate,this),this.props.events.on("select",this.select,this),app.data.tags.on("sync",this.filter,this)},componentWillUnmount:function(){this.props.events.off(null,null,this),app.data.tags.off(null,null,this)},shouldComponentUpdate:function(nextProps,nextState){return nextProps.show!==this.props.show||nextProps.show},componentWillReceiveProps:function(nextProps){if(nextProps.filter!==this.props.filter||nextProps.selected!==this.props.selected){var filtered=this.filtered(nextProps.filter,nextProps.selected);this.setState({items:filtered,active:nextProps.filter?filtered[0]:null})}nextProps.show!==this.props.show&&this.state.items.length>0&&this.setState({active:this.state.items[0]||null})},onResize:function(){},getInitialState:function(){return this.newTag=new app.model.tag,this.newTag.setDefaults("tag"),this.newTag.reset(),this.newTag.set("_temp",{_icon:null,_name:null,_command:null}),this.doneTag=new app.model.tag,this.doneTag.setDefaults("tag"),this.doneTag.reset(),this.doneTag.update({color:{$set:"#666"}}),this.doneTag.set("_temp",{_icon:"icon-enter",_name:null,_command:null}),{items:this.filtered(this.props.filter,this.props.selected),active:null}},navigate:function(key){var index=this.state.items.indexOf(this.state.active);"PageUp"===key&&(index-=6),"PageDown"===key&&(index+=6),"ArrowUp"===key&&(index-=1),"ArrowDown"===key&&(index+=1),this.setState({active:this.state.items[app.lib.validIndex(index,this.state.items)]})},select:function(source){this.props.show&&(this.state.active?(this.props.events.trigger("add",this.state.active,source),this.setState({active:null})):this.state.items.length>0&&this.setState({active:this.state.items[0]}))},filter:function(){this.setState({items:this.filtered(this.props.filter,this.props.selected)})},filtered:function(filter,exclude){var result=null,items=app.data.tags.getVisible(),exact=!1;return result=null===filter?items:_.filter(items,function(item){return exact=item.data("tag").name.toLowerCase()===filter.toLowerCase()||exact,_.contains(item.data("tag").name.toLowerCase(),filter.toLowerCase())&&!_.contains(this.props.exclude,item.get("_id"))},this),exclude&&(result=_.difference(result,exclude)),filter.length>0&&!exact?(this.newTag.update("tag",{name:{$set:'Create tag "'+filter+'"'}},!0),this.newTag.set("_temp",{_name:filter,_command:"add",_icon:"icon-plus-squared"}),result.push(this.newTag)):this.props.save&&0===filter.length&&(this.doneTag.update("tag",{name:{$set:"Save note"}},!0),this.doneTag.set("_temp",{_name:filter,_command:"save",_icon:"icon-enter"}),result.unshift(this.doneTag)),result},mouseOverItem:function(event,item){this.setState({active:item})},mouseClickItem:function(event,item){this.select("mouse")},render:function(){return this.props.show&&this.state.items.length>0?React.DOM.div({className:"lookup scroll noselect"},_.map(this.state.items,function(item,index){var active=this.state.active&&this.state.active.get("_id")===item.get("_id");return app.view.components.tag({key:item.key,tag:item,active:active,onMouseOverTag:this.mouseOverItem,onClickTag:this.mouseClickItem})},this)):React.DOM.div({className:"hide"})}}),app.view.sidepane.boards=app.lib.element({displayName:"sidepane.boards",getDefaultProps:function(){return{showSearch:!0}},getInitialState:function(){return{filter:null,isSearch:!1}},componentWillMount:function(){app.data.boards.on("add remove change sync",this.forceUpdate.bind(this,null),this),this.restoreSearch()},componentWillUpdate:function(){app.data.boards.sort()},componentWillUnmount:function(){app.data.boards.off(null,null,this)},componentWillReceiveProps:function(nextProps){this.restoreSearch()},restoreSearch:function(){app.navigation.query.text().length>0?this.setState({filter:_.pluck(app.navigation.query.text(),"query").join(" "),isSearch:app.navigation.query.text().length>0}):this.state.isSearch&&this.setState({filter:null,isSearch:!1})},onSearchChanged:function(filter){null===filter?(this.setState({filter:filter}),app.navigation.query.text().length>0&&(app.navigation.data.board&&app.navigation.data.list?app.router.navigate("boards/"+app.navigation.data.board+"/"+app.navigation.data.list,{trigger:!0,replace:!0}):app.navigation.data.board&&app.router.navigate("boards/"+app.navigation.data.board,{trigger:!0,replace:!0}))):this.setState({filter:filter})},onSearchSubmit:function(){this.state.filter&&(app.navigation.data.board&&app.navigation.data.list?app.router.navigate("boards/"+app.navigation.data.board+"/"+app.navigation.data.list+"/all/text:"+encodeURIComponent(this.state.filter),{trigger:!0,replace:!0}):app.navigation.data.board&&app.router.navigate("boards/"+app.navigation.data.board+"/all/text:"+encodeURIComponent(this.state.filter),{trigger:!0,replace:!0}))},getFilter:function(){return 0===app.navigation.query.text().length?this.state.filter:null},showAllBoards:function(){app.router.navigate("boards",{trigger:!0})},showBoard:function(_board){app.router.navigate("boards/"+_board,{trigger:!0})},showList:function(_board,_list){app.router.navigate("boards/"+_board+"/"+_list,{trigger:!0})},render:function(){var boardsFiltered;return boardsFiltered=this.getFilter()?_.filter(app.data.boards.models,function(board){var boardMatch=app.lib.searchText(board.get("name"),this.getFilter()),listMatch=!!_.find(board.get("lists").models,function(list){return app.lib.searchText(list.data("name"),this.getFilter())},this);return boardMatch||listMatch},this):app.data.boards.models,React.DOM.div({className:window.classnames({sidepane:!0,showsearch:this.props.showSearch})},React.DOM.div({className:"sidepanecontent scroll noselect"},app.view.sidepane.component.item({text:"Boards",icon:"icon-folder-open",expanded:!0,click:this.showAllBoards,selected:"boards"===app.navigation.page},_.map(boardsFiltered,function(board){return app.view.sidepane.component.item({key:app.lib.uidmap(board.get("_id")),text:board.get("name"),icon:"icon-books",expanded:!0,click:this.showBoard.bind(this,board.get("_id")),selected:app.navigation.data.board===board.get("_id")},_.map(board.get("lists").models,function(list){if(!this.getFilter()||app.lib.searchText(list.data("name"),this.getFilter())){var color=function(){var tags=list.data("tags");if(tags.length>0){var tag=app.data.tags.get(tags[tags.length-1]);if(tag)return app.lib.color(tag.data("color"))}return null}();return app.view.sidepane.component.item({key:app.lib.uidmap(list.get("_id")),text:list.data("name"),icon:"icon-bookmark",color:color,click:this.showList.bind(this,board.get("_id"),list.get("_id")),selected:app.navigation.data.list===list.get("_id")})}},this))},this))),this.props.showSearch?app.view.sidepane.search({filter:this.state.filter,onChange:this.onSearchChanged,onEnter:this.onSearchSubmit,isSearch:this.state.isSearch,placeholder:"Filter lists | Search"}):null)}}),app.view.sidepane.calendar=app.lib.element({displayName:"sidepane.calendar",itemOptions:function(options){return options.click=this.itemClick.bind(this,options.view),options.selected=options.view===this.props.navigation.view,options},itemClick:function(view,event){app.router.navigate("notes/"+view,{trigger:!0})},render:function(){return React.DOM.div(null,app.view.sidepane.component.item(this.itemOptions({text:"Notes",icon:"icon-folder",expanded:!0,view:"all"}),app.view.sidepane.component.tags({tree:app.data.tags.reduceTree(app.data.tags.getTree())})),app.view.sidepane.component.item({text:"More",icon:"icon-braille",expanded:!0},app.view.sidepane.component.item(this.itemOptions({text:"Bin",icon:"icon-trash-alt",view:"bin"}))))}}),app.view.sidepane.insights=app.lib.element({displayName:"sidepane.insights",itemOptions:function(options){return options.click=this.itemClick.bind(this,options.view),options.selected=options.view===this.props.navigation.view,options},itemClick:function(view,event){app.router.navigate("notes/"+view,{trigger:!0})},render:function(){return React.DOM.div(null,app.view.sidepane.component.item(this.itemOptions({text:"Notes",icon:"icon-folder",expanded:!0,view:"all"}),app.view.sidepane.component.tags({tree:app.data.tags.reduceTree(app.data.tags.getTree())})),app.view.sidepane.component.item({text:"More",icon:"icon-braille",expanded:!0},app.view.sidepane.component.item(this.itemOptions({text:"Bin",icon:"icon-trash-alt",view:"bin"}))))}}),app.view.sidepane.map=app.lib.element({displayName:"sidepane.map",itemOptions:function(options){return options.click=this.itemClick.bind(this,options.view),options.selected=options.view===this.props.navigation.view,options},itemClick:function(view,event){app.router.navigate("notes/"+view,{trigger:!0})},render:function(){return React.DOM.div(null,app.view.sidepane.component.item(this.itemOptions({text:"Notes",icon:"icon-folder",expanded:!0,view:"all"}),app.view.sidepane.component.tags({tree:app.data.tags.reduceTree(app.data.tags.getTree())})),app.view.sidepane.component.item({text:"More",icon:"icon-braille",expanded:!0},app.view.sidepane.component.item(this.itemOptions({text:"Bin",icon:"icon-trash-alt",view:"bin"}))))}}),app.view.sidepane.notes=app.lib.element({displayName:"sidepane.notes",getDefaultProps:function(){return{showSearch:!0}},getInitialState:function(){return{filter:null,isSearch:!1}},componentWillMount:function(){app.data.tags.on("add remove change sync",this.forceUpdate.bind(this,null),this),this.restoreSearch()},componentWillUnmount:function(){app.data.tags.off(null,null,this)},componentWillReceiveProps:function(nextProps){this.restoreSearch()},restoreSearch:function(){app.navigation.query.text().length>0?this.setState({filter:_.pluck(app.navigation.query.text(),"query").join(" "),isSearch:app.navigation.query.text().length>0}):this.state.isSearch&&this.setState({filter:null,isSearch:!1})},extendItemOptions:function(options){return options.click=this.onItemClick.bind(this,options.view),options.selected=options.view===app.navigation.view||app.navigation.query&&options.view===app.navigation.view+"/"+app.navigation.query.raw(),options},onItemClick:function(view,event){app.router.navigate("notes/"+view,{trigger:!0,replace:!0})},onSearchChanged:function(filter){null===filter?(this.setState({filter:filter}),app.navigation.query.text().length>0&&app.router.navigate("notes/inbox",{trigger:!0,replace:!0})):this.setState({filter:filter})},onSearchSubmit:function(){this.state.filter&&app.router.navigate("notes/search/text:"+encodeURIComponent(this.state.filter),{trigger:!0,replace:!0})},getFilter:function(){return 0===app.navigation.query.text().length?this.state.filter:null},render:function(){return React.DOM.div({className:window.classnames({sidepane:!0,showsearch:this.props.showSearch})},React.DOM.div({className:"sidepanecontent scroll noselect"},app.view.sidepane.component.item(this.extendItemOptions({text:"Inbox",icon:"icon-inbox",view:"inbox"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Trackables",icon:"icon-spinner",expanded:!0,view:"trackers"}),app.view.sidepane.component.trackers({root:"notes/trackers",active:"trackers"===app.navigation.view,filter:this.getFilter()})),app.view.sidepane.component.item(this.extendItemOptions({text:"All notes",icon:"icon-folder-open",expanded:!0,view:"all"}),app.view.sidepane.component.tags({tree:app.data.tags.reduceTree(app.data.tags.getTree()),active:"all"===app.navigation.view,filter:this.getFilter()})),app.view.sidepane.component.item({text:"More",icon:"icon-folder",expanded:!0},app.view.sidepane.component.item(this.extendItemOptions({text:"Untagged",icon:"icon-tags",view:"untagged"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Archive",icon:"icon-archive",view:"archive"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Trash",icon:"icon-trash-alt",view:"trash"}))),app.view.sidepane.component.item({text:"Filters",icon:"icon-filter",expanded:!1},app.view.sidepane.component.item({text:"Type",icon:"icon-folder",expanded:!0},app.view.sidepane.component.item(this.extendItemOptions({text:"Text block",icon:"icon-font",view:"all/type:text"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Check list",icon:"icon-check",view:"all/type:list"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Link & image",icon:"icon-link",view:"all/type:link"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Numeric",icon:"icon-sort-numeric",view:"all/type:numeric"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Stopwatch",icon:"icon-stopwatch",view:"all/type:stopwatch"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Countdown",icon:"icon-hourglass",view:"all/type:countdown"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Choice",icon:"icon-list-bullet",view:"all/type:choice"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Group",icon:"icon-marquee",view:"all/type:group"}))),app.view.sidepane.component.item({text:"Color",icon:"icon-art-gallery",expanded:!0},app.view.sidepane.component.item(this.extendItemOptions({text:"Red",icon:"icon-blank",view:"all/color:red",color:app.config.colors.map.red})),app.view.sidepane.component.item(this.extendItemOptions({text:"Orange",icon:"icon-blank",view:"all/color:orange",color:app.config.colors.map.orange})),app.view.sidepane.component.item(this.extendItemOptions({text:"Yellow",icon:"icon-blank",view:"all/color:yellow",color:app.config.colors.map.yellow})),app.view.sidepane.component.item(this.extendItemOptions({text:"Green",icon:"icon-blank",view:"all/color:green",color:app.config.colors.map.green})),app.view.sidepane.component.item(this.extendItemOptions({text:"Cyan",icon:"icon-blank",view:"all/color:cyan",color:app.config.colors.map.cyan})),app.view.sidepane.component.item(this.extendItemOptions({text:"Blue",icon:"icon-blank",view:"all/color:blue",color:app.config.colors.map.blue})),app.view.sidepane.component.item(this.extendItemOptions({text:"Lilac",icon:"icon-blank",view:"all/color:lilac",color:app.config.colors.map.lilac})),app.view.sidepane.component.item(this.extendItemOptions({text:"Grey",icon:"icon-blank",view:"all/color:grey",color:app.config.colors.map.grey})),app.view.sidepane.component.item(this.extendItemOptions({text:"White",icon:"icon-blank",view:"all/color:white",color:app.config.colors.map.white}))))),this.props.showSearch?app.view.sidepane.search({filter:this.state.filter,onChange:this.onSearchChanged,onEnter:this.onSearchSubmit,isSearch:this.state.isSearch,placeholder:"Filter tags | Search"}):null)}}),app.view.sidepane.notfound=app.lib.element({displayName:"sidepane.notfound",render:function(){return React.DOM.div(null,"Not found")}}),app.view.sidepane.tags=app.lib.element({displayName:"sidepane.tags",getDefaultProps:function(){return{showSearch:!0}},getInitialState:function(){return{filter:null,isSearch:!1}},componentWillMount:function(){app.data.tags.on("add remove change sync",this.forceUpdate.bind(this,null),this),this.restoreSearch()},componentWillUnmount:function(){app.data.tags.off(null,null,this)},componentWillReceiveProps:function(nextProps){this.restoreSearch()},restoreSearch:function(){app.navigation.query.text().length>0?this.setState({filter:_.pluck(app.navigation.query.text(),"query").join(" "),isSearch:app.navigation.query.text().length>0}):this.state.isSearch&&this.setState({filter:null,isSearch:!1})},extendItemOptions:function(options){return options.click=this.onItemClick.bind(this,options.view),options.selected=options.view===app.navigation.view||app.navigation.query&&options.view===app.navigation.view+"/"+app.navigation.query.raw(),options},onItemClick:function(view,event){app.router.navigate("tags/"+view,{trigger:!0,replace:!0})},onSearchChanged:function(filter){null===filter?(this.setState({filter:filter}),app.navigation.query.text().length>0&&app.router.navigate("tags/all",{trigger:!0,replace:!0})):this.setState({filter:filter})},onSearchSubmit:function(){this.state.filter&&app.router.navigate("tags/search/name:"+encodeURIComponent(this.state.filter),{trigger:!0,replace:!0})},getFilter:function(){return 0===app.navigation.query.text().length?this.state.filter:null},render:function(){return React.DOM.div({className:window.classnames({sidepane:!0,showsearch:this.props.showSearch})},React.DOM.div({className:"sidepanecontent scroll noselect"},app.view.sidepane.component.item(this.extendItemOptions({text:"All tags",icon:"icon-tags",expanded:!0,view:"all"}),app.view.sidepane.component.tags({tree:app.data.tags.reduceTree(app.data.tags.getTree()),active:"all"===this.props.navigation.view,filter:this.getFilter()})),app.view.sidepane.component.item({text:"More",icon:"icon-folder",expanded:!0},app.view.sidepane.component.item(this.extendItemOptions({text:"Graph",icon:"icon-graph",view:"graph"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Untagged",icon:"icon-tags",view:"untagged"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Archive",icon:"icon-archive",view:"archive"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Trash",icon:"icon-trash-alt",view:"trash"}))),app.view.sidepane.component.item({text:"Filters",icon:"icon-filter",expanded:!1},app.view.sidepane.component.item({text:"Type",icon:"icon-folder",expanded:!1},app.view.sidepane.component.item(this.extendItemOptions({text:"Text block",icon:"icon-font",view:"all/type:text"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Check list",icon:"icon-check",view:"all/type:list"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Link & image",icon:"icon-link",view:"all/type:link"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Numeric",icon:"icon-sort-numeric",view:"all/type:numeric"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Stopwatch",icon:"icon-stopwatch",view:"all/type:stopwatch"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Countdown",icon:"icon-hourglass",view:"all/type:countdown"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Choice",icon:"icon-list-bullet",view:"all/type:choice"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Group",icon:"icon-marquee",view:"all/type:group"}))),app.view.sidepane.component.item({text:"Color",icon:"icon-art-gallery",expanded:!0},app.view.sidepane.component.item(this.extendItemOptions({text:"Red",icon:"icon-blank",view:"all/color:red",color:app.config.colors.map.red})),app.view.sidepane.component.item(this.extendItemOptions({text:"Orange",icon:"icon-blank",view:"all/color:orange",color:app.config.colors.map.orange})),app.view.sidepane.component.item(this.extendItemOptions({text:"Yellow",icon:"icon-blank",view:"all/color:yellow",color:app.config.colors.map.yellow})),app.view.sidepane.component.item(this.extendItemOptions({text:"Green",icon:"icon-blank",view:"all/color:green",color:app.config.colors.map.green})),app.view.sidepane.component.item(this.extendItemOptions({text:"Cyan",icon:"icon-blank",view:"all/color:cyan",color:app.config.colors.map.cyan})),app.view.sidepane.component.item(this.extendItemOptions({text:"Blue",icon:"icon-blank",view:"all/color:blue",color:app.config.colors.map.blue})),app.view.sidepane.component.item(this.extendItemOptions({text:"Lilac",icon:"icon-blank",view:"all/color:lilac",color:app.config.colors.map.lilac})),app.view.sidepane.component.item(this.extendItemOptions({text:"Grey",icon:"icon-blank",view:"all/color:grey",color:app.config.colors.map.grey})),app.view.sidepane.component.item(this.extendItemOptions({text:"White",icon:"icon-blank",view:"all/color:white",color:app.config.colors.map.white}))))),this.props.showSearch?app.view.sidepane.search({filter:this.state.filter,onChange:this.onSearchChanged,onEnter:this.onSearchSubmit,isSearch:this.state.isSearch,placeholder:"Filter tags | Search"}):null)}}),app.view.sidepane.trackers=app.lib.element({displayName:"sidepane.trackers",getDefaultProps:function(){return{showSearch:!0}},getInitialState:function(){return{filter:null,isSearch:!1}},componentWillMount:function(){app.data.tags.on("add remove change sync update:model",this.forceUpdate.bind(this,null),this),this.restoreSearch()},componentWillUnmount:function(){app.data.tags.off(null,null,this)},componentWillReceiveProps:function(nextProps){this.restoreSearch()},restoreSearch:function(){app.navigation.query.text().length>0?this.setState({filter:_.pluck(app.navigation.query.text(),"query").join(" "),isSearch:app.navigation.query.text().length>0}):this.state.isSearch&&this.setState({filter:null,isSearch:!1})},extendItemOptions:function(options){return options.click=this.onItemClick.bind(this,options.view),options.selected=options.view===app.navigation.view||app.navigation.query&&options.view===app.navigation.view+"/"+app.navigation.query.raw(),options},onItemClick:function(view,event){app.router.navigate("trackers/"+view,{trigger:!0,replace:!0})},onSearchChanged:function(filter){null===filter?(this.setState({filter:filter}),app.navigation.query.text().length>0&&app.router.navigate("trackers/all",{trigger:!0,replace:!0})):this.setState({filter:filter})},onSearchSubmit:function(){this.state.filter&&app.router.navigate("trackers/search/text:"+encodeURIComponent(this.state.filter),{trigger:!0,replace:!0})},getFilter:function(){return 0===app.navigation.query.text().length?this.state.filter:null},render:function(){return React.DOM.div({className:window.classnames({sidepane:!0,showsearch:this.props.showSearch})},React.DOM.div({className:"sidepanecontent scroll noselect"},app.view.sidepane.component.item(this.extendItemOptions({text:"Manage trackers",icon:"icon-edit",view:"manage"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Trackables",icon:"icon-spinner",expanded:!0,view:"all"}),app.view.sidepane.component.trackers({root:"trackers",active:"all"===this.props.navigation.view,filter:this.getFilter()})),app.view.sidepane.component.item({text:"More",icon:"icon-folder",expanded:!0},app.view.sidepane.component.item(this.extendItemOptions({text:"Untagged",icon:"icon-tags",view:"untagged"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Archive",icon:"icon-archive",view:"archive"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Trash",icon:"icon-trash-alt",view:"trash"}))),app.view.sidepane.component.item({text:"Filters",icon:"icon-filter",expanded:!1},app.view.sidepane.component.item({text:"Type",icon:"icon-folder",expanded:!0},app.view.sidepane.component.item(this.extendItemOptions({text:"Text block",icon:"icon-font",view:"all/type:text"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Check list",icon:"icon-check",view:"all/type:list"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Link & image",icon:"icon-link",view:"all/type:link"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Numeric",icon:"icon-sort-numeric",view:"all/type:numeric"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Stopwatch",icon:"icon-stopwatch",view:"all/type:stopwatch"})),app.view.sidepane.component.item(this.extendItemOptions({
text:"Countdown",icon:"icon-hourglass",view:"all/type:countdown"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Choice",icon:"icon-list-bullet",view:"all/type:choice"})),app.view.sidepane.component.item(this.extendItemOptions({text:"Group",icon:"icon-marquee",view:"all/type:group"}))),app.view.sidepane.component.item({text:"Color",icon:"icon-art-gallery",expanded:!0},app.view.sidepane.component.item(this.extendItemOptions({text:"Red",icon:"icon-blank",view:"all/color:red",color:app.config.colors.map.red})),app.view.sidepane.component.item(this.extendItemOptions({text:"Orange",icon:"icon-blank",view:"all/color:orange",color:app.config.colors.map.orange})),app.view.sidepane.component.item(this.extendItemOptions({text:"Yellow",icon:"icon-blank",view:"all/color:yellow",color:app.config.colors.map.yellow})),app.view.sidepane.component.item(this.extendItemOptions({text:"Green",icon:"icon-blank",view:"all/color:green",color:app.config.colors.map.green})),app.view.sidepane.component.item(this.extendItemOptions({text:"Cyan",icon:"icon-blank",view:"all/color:cyan",color:app.config.colors.map.cyan})),app.view.sidepane.component.item(this.extendItemOptions({text:"Blue",icon:"icon-blank",view:"all/color:blue",color:app.config.colors.map.blue})),app.view.sidepane.component.item(this.extendItemOptions({text:"Lilac",icon:"icon-blank",view:"all/color:lilac",color:app.config.colors.map.lilac})),app.view.sidepane.component.item(this.extendItemOptions({text:"Grey",icon:"icon-blank",view:"all/color:grey",color:app.config.colors.map.grey})),app.view.sidepane.component.item(this.extendItemOptions({text:"White",icon:"icon-blank",view:"all/color:white",color:app.config.colors.map.white}))))),this.props.showSearch?app.view.sidepane.search({filter:this.state.filter,onChange:this.onSearchChanged,onEnter:this.onSearchSubmit,isSearch:this.state.isSearch,placeholder:"Filter track. | Search"}):null)}}),app.view.sidepane.search=app.lib.element({displayName:"sidepane.search",getDefaultProps:function(){return{filter:null,onChange:null,onEnter:null,isSearch:!1}},onChange:function(event){this.props.onChange&&(""===event.target.value?this.clear():this.props.onChange(event.target.value))},onKeyDown:function(event){"Enter"===event.key&&event.preventDefault()},onKeyUp:function(event){"Enter"===event.key&&(event.preventDefault(),this.props.onEnter&&this.props.onEnter())},clear:function(){this.props.onChange&&this.props.onChange(null)},render:function(){return React.DOM.div({className:"searchcontainer"},React.DOM.div({className:"searchbox"},React.DOM.div({className:"searchcontrol"+(this.props.isSearch?" isnotesearch":"")},React.DOM.textarea({rows:"1",placeholder:this.props.placeholder||"Filter | Search",className:"searchinput",onChange:this.onChange,onKeyUp:this.onKeyUp,onKeyDown:this.onKeyDown,value:this.props.filter||""}),React.DOM.i({className:"icon-search submitsearch"}),this.props.filter?React.DOM.i({className:"icon-cancel clearsearch",onClick:this.clear}):null)))}}),app.view.sidepane.component.checkitem=app.lib.element({displayName:"sidepane.component.checkitem",getInitialState:function(){return{expanded:this.props.expanded}},toggle:function(){this.setState({expanded:!this.state.expanded})},componentWillReceiveProps:function(nextProps){(nextProps.expanded!==this.state.expanded||nextProps.forceExpanded!==this.props.forceExpanded)&&this.setState({expanded:nextProps.expanded||(nextProps.forceExpanded?!1:this.state.expanded)})},checkComp:function(){return this.props.checked===!0?React.DOM.span({className:"handle"},React.DOM.i({className:"blank icon-ok-squared",style:{color:this.props.color}}),React.DOM.i({className:"toggle icon-ok-blank",style:{color:this.props.color},onClick:this.props.toggle})):this.props.checked===!1?React.DOM.span({className:"handle"},React.DOM.i({className:"blank icon-blank",style:{color:this.props.color}}),React.DOM.i({className:"toggle icon-blank-empty",style:{color:this.props.color},onClick:this.props.toggle})):React.DOM.span({className:"handle"},React.DOM.i({className:"blank icon-minus-squared",style:{color:this.props.color}}),React.DOM.i({className:"toggle icon-blank-empty",style:{color:this.props.color},onClick:this.props.toggle}))},render:function(){var hasContent=!!this.props.children;return this.props.visible?React.DOM.div({className:"paneitemwrapper"},React.DOM.i({className:"expander"+(this.state.expanded?" icon-down-dir":" icon-right-dir")+(hasContent?"":" space"),onClick:this.toggle}),React.DOM.div({className:"paneitem check"+(this.props.selected?" selected":"")+(this.props.inactive?" inactive":""),onDoubleClick:this.toggle,onClick:this.props.click,title:this.props.text},this.checkComp(),this.props.text),this.state.expanded?React.DOM.div({className:"subpane"},this.props.children):null):null}}),app.view.sidepane.component.item=app.lib.element({displayName:"sidepane.component.item",getInitialState:function(){return{expanded:!!this.props.expanded}},toggle:function(){this.setState({expanded:!this.state.expanded})},render:function(){var hasContent=!!this.props.children;return React.DOM.div({className:"paneitemwrapper"},React.DOM.i({className:"expander"+(this.state.expanded?" icon-down-dir":" icon-right-dir")+(hasContent?"":" space"),onClick:this.toggle}),React.DOM.div({className:"paneitem"+(this.props.selected?" selected":""),onDoubleClick:this.toggle,onClick:this.props.click,title:this.props.text},React.DOM.i({className:this.props.icon,style:{color:this.props.color}}),this.props.text),this.state.expanded?React.DOM.div({className:"subpane"},this.props.children):null)}}),app.view.sidepane.component.tags=app.lib.element({displayName:"sidepane.component.tags",mixins:[app.lib.mixins.rootParent],getDefaultProps:function(){return{filter:null,tree:[],active:!1,rootParent:null}},getInitialState:function(){return this.isRootParent()?{hasChecked:!1,parents:null,tags:{visible:null,filtered:null}}:{parents:null,tags:{visible:null,filtered:null}}},componentWillMount:function(){this.refreshExpander(this.props,!0)},componentDidMount:function(){this.rootParent().expandedTagHash=_.clone(this.rootParent()._expandedTagHash),this.rootParent().skipUpdate=!1},componentDidUpdate:function(){this.rootParent().expandedTagHash=_.clone(this.rootParent()._expandedTagHash),this.rootParent().skipUpdate=!1},componentWillReceiveProps:function(nextProps){this.isRootParent()&&(this.rootParent().forceExpander=this.props.filter!==nextProps.filter&&nextProps.filter,this.rootParent().skipUpdate&&this.props.filter===nextProps.filter?(this.expandedTagHash={},this._expandedTagHash={}):nextProps.filter?this.refreshExpanderFilter(nextProps):this.refreshExpander(nextProps,this.props.filter!==nextProps.filter))},hasChecked:function(){return this.state.hasChecked||app.navigation.query&&app.navigation.query.tags().length>1},onClick:function(_id,event){this.rootParent().skipUpdate=!0,this.rootParent().setState({hasChecked:!1}),app.router.navigate(app.navigation.page+"/all/branch:"+_id,{trigger:!0,replace:!0})},onCheck:function(_id,event){if(!this.isRootParent())return this.rootParent().onCheck(_id,event);if(this.rootParent().skipUpdate=!0,event.preventDefault(),event.stopPropagation(),this.hasChecked()){var deselectTag=_.find(app.navigation.query.tags(),function(queryItem){return queryItem.query===_id});if(deselectTag){if(!(app.navigation.query.tags().length>1))return void this.setState({hasChecked:!1});app.navigation.query.all().splice(app.navigation.query.all().indexOf(deselectTag),1)}else app.navigation.query.all().push({type:"branch",query:_id});var query=_.reduce(app.navigation.query.tags(),function(memo,item){return memo+"&"+item.type+":"+item.query},"").slice(1);app.router.navigate(app.navigation.page+"/all/"+query,{trigger:!0,replace:!0})}else this.setState({hasChecked:!0},function(){}),app.router.navigate(app.navigation.page+"/all/branch:"+_id,{trigger:!0,replace:!0})},refreshExpander:function(props,force){this.isRootParent()&&(props.active||force)&&(this.expandedTagHash=app.data.tags.getParents(_.map(app.navigation.query.tags(),function(item){return item.query})),this._expandedTagHash=_.clone(this.expandedTagHash),this.setState({tags:{visible:null,filtered:null}}))},refreshExpanderFilter:function(props){if(this.isRootParent()&&props.filter){var filter=props.filter.toLowerCase(),filteredTags=_.filter(app.data.tags.models,function(tag){return app.lib.searchText(tag.data("tag").name.toLowerCase(),filter)},this),filteredIds=_.map(filteredTags,function(item){return item.get("_id")});this.expandedTagHash=app.data.tags.getParents(filteredIds),this._expandedTagHash=_.clone(this.expandedTagHash);var parentsIds=_.keys(this.expandedTagHash),mergedTags=[].concat(filteredIds,parentsIds);this.setState({tags:{visible:_.object(mergedTags,mergedTags),filtered:filteredIds}})}},isExpanded:function(id){return this.isRootParent()?this.expandedTagHash?this.expandedTagHash[id]?(this.expandedTagHash[id]=!1,!0):"undefined"==typeof this.expandedTagHash[id]&&app.data.tags.get(id).getOptions("autoExpand")?(this.expandedTagHash[id]=!0,!0):!1:!1:void 0},isVisible:function(id){if(this.isRootParent()){var visible=app.data.tags.get(id).isActive();if(this.state.tags.visible){var show=_.intersection(app.data.tags.getTree(!1)[id].up,this.state.tags.filtered).length>0;return visible&&(!!this.state.tags.visible[id]||show)}return visible}},isChildrenVisible:function(id){if(this.isRootParent()){var status=app.data.tags.get(id).data("status"),visible="all"===status||"inbox"===status;if(this.state.tags.visible){var show=_.intersection(app.data.tags.getTree(!1)[id].up,this.state.tags.filtered).length>0;return visible&&show}return visible}},render:function(){return React.DOM.div(null,_.map(this.props.tree,function(treeItem){var tag=treeItem.tag,id=app.data.tags.get(tag).get("_id"),childrenVisible=this.props.isChildrenVisible||this.rootParent().isChildrenVisible(id),visible=(this.rootParent().isVisible(id)||childrenVisible)&&app.data.tags.get(id).isActive();if(visible){var newTree=_.reduce(treeItem.down,function(memo,subTag){return memo[subTag]=app.data.tags.getTree(!1)[subTag],memo},{});newTree=app.data.tags.treeToArray(newTree);var isSelected=this.props.active&&!!_.find(app.navigation.query.tags(),function(queryItem){return queryItem.query===id});return app.view.sidepane.component.checkitem({key:app.lib.uidmap(id),text:app.data.tags.get(tag).data("tag").name,icon:"icon-blank",color:app.lib.color(app.data.tags.get(tag).data("color")),click:this.onClick.bind(this,id),toggle:this.onCheck.bind(this,id),checked:this.rootParent().hasChecked()&&isSelected,expanded:this.rootParent().isExpanded(id),forceExpanded:this.rootParent().forceExpander,visible:visible,selected:isSelected},treeItem.down.length>0?app.view.sidepane.component.tags({tree:newTree,rootParent:this.props.rootParent||this,active:this.props.active,isChildrenVisible:childrenVisible}):null)}return null},this))}}),app.view.sidepane.component.types=app.lib.element({displayName:"sidepane.component.types",render:function(){return React.DOM.div(null,app.view.sidepane.component.item({text:"Text",icon:"icon-sort-alphabet"}),app.view.sidepane.component.item({text:"Stopwatch",icon:"icon-stopwatch"}),app.view.sidepane.component.item({text:"List",icon:"icon-list-bullet"}))}}),app.view.sidepane.component.trackers=app.lib.element({displayName:"sidepane.component.trackers",click:function(_id,event){app.navigation&&app.router.navigate(this.props.root+"/all/root:"+_id,{trigger:!0,replace:!0})},isVisible:function(id){var visible=app.data.tags.get(id).isActive();if(this.props.filter){var filter=this.props.filter.toLowerCase();return visible&&app.lib.searchText(app.data.tags.get(id).data("tag").name.toLowerCase(),filter)}return visible},render:function(){return React.DOM.div(null,_.map(app.data.tags.getTrackers(),function(tracker){var id=tracker.get("_id");return this.isVisible(id)?app.view.sidepane.component.item({key:app.lib.uidmap(id),text:tracker.data("tag").name,icon:"icon-spinner",color:app.lib.color(tracker.data("color")),click:this.click.bind(this,id),selected:this.props.active&&app.navigation.query.tags()&&app.navigation.query.tags()[0]&&id===app.navigation.query.tags()[0].query}):null},this))}}),app.view.note.main=app.lib.element({displayName:"note.main",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize,app.lib.mixins.isActive],getInitialState:function(){return{view:this.props.view,active:!1,selected:!1,inflated:this.props.inflated}},componentWillMount:function(){this.key=app.lib.uid(),this.shouldFocus=this.props.focus},inflate:function(callback){this.callback=callback,this.setState({inflated:!0})},postInflate:function(callback){this.props.model.on("reset",this.reset,this),this.props.model.on("update:color batch:model update:model",this.forceUpdate.bind(this,null),this);var $note=$(this.getDOMNode());$note.data("model",this.props.model);var size={width:300,height:$note.outerHeight()};$note.data("noteSize",size),$note.data("noteSizeActual",_.clone(size)),callback&&callback()},componentDidMount:function(){this.state.inflated&&this.postInflate(),this.shouldFocus&&(setTimeout(function(){app.lib.isMounted(this)&&this.focus()}.bind(this),0),this.shouldFocus=!1)},componentDidUpdate:function(prevProps,prevState){!prevState.inflated&&this.state.inflated&&this.postInflate(this.callback),prevState.view!==this.state.view&&this.focus(),this.shouldFocus&&(setTimeout(function(){app.lib.isMounted(this)&&this.focus()}.bind(this),0),this.shouldFocus=!1)},componentWillUnmount:function(){this.setSelected(!1),this.setActive(!1),this.callback=null,this.props.onUnmount&&this.props.onUnmount(this),this.props.model.off(null,null,this),$(this.getDOMNode()).removeData(),"edit"!==this.state.view||this.props.model.isNew()||this.refs.note.save&&this.refs.note.save(!0)},shouldComponentUpdate:function(nextProps,nextState){return nextProps.force||nextState.view!==this.state.view||this.state.inflated!==nextState.inflated},componentWillReceiveProps:function(nextProps){nextProps.inflated&&!this.state.inflated&&this.setState({inflated:!0})},focus:function(){this.refs.note.focus&&"edit"===this.state.view&&this.refs.note.focus()},reset:function(){this.key=app.lib.uid(),this.shouldFocus=this.props.focus,this.forceUpdate()},changeView:function(view){this.setState({view:view})},toggleSelection:function(event){event.ctrlKey||event.shiftKey?(this.setSelected(!this.state.selected),this.setActive(!0)):this.setActive(!0)},setSelected:function(selected){this.props.selection&&"view"===this.state.view&&(selected?this.props.selection.select(this):this.props.selection.deselect(this))},setActive:function(active){this.props.selection&&(active?this.props.selection.activate(this):this.props.selection.deactivate(this))},onSetSelected:function(selected){this.isActive()&&selected!==this.state.selected&&(this.setState({selected:selected}),this.forceUpdate())},onSetActive:function(active){this.isActive()&&active!==this.state.active&&(this.setState({active:active}),active||"edit"!==this.state.view||this.props.model.isNew()?this.forceUpdate():this.refs.note.save&&this.refs.note.save())},onResize:function(){this.onResizeLogicDebounced=this.onResizeLogicDebounced||_.throttle(this.onResizeLogic,250,{leading:!1}),this.onResizeLogicDebounced()},onResizeLogic:function(){if(this.isActive()){var $note=$(this.getDOMNode());if($note.data("noteSize")){var nextSize={width:$note.outerWidth(),height:$note.outerHeight()},prevSize=$note.data("noteSizeActual");(nextSize.height!==prevSize.height||nextSize.width!==prevSize.width)&&("edit"===this.state.view?$note.data("noteSizeActual",nextSize):($note.data("noteSize",nextSize),$note.data("noteSizeActual",_.clone(nextSize))),this.props.onResize(this))}}},getTagsToHide:function(){return this.props.getTagsToHide?this.props.getTagsToHide():[]},render:function(){if(!this.state.inflated)return null;var noteClasses={},noteStyles={};return noteClasses.note=!0,noteClasses.animate=!0,noteClasses[this.state.view]=!0,noteClasses[this.props.className]=!0,noteClasses.saved=!this.props.model.isNew(),noteClasses.selected=this.state.selected,noteClasses.active=this.state.active,noteStyles.backgroundColor=app.lib.color(this.props.model.data().color),React.DOM.div({className:window.classnames(noteClasses),style:noteStyles,onClick:this.toggleSelection},app.view.note[this.state.view]({ref:"note",key:this.key,model:this.props.model,changeView:this.changeView,context:this.props.context,onSaved:this.props.onSaved,onResize:this.onResize,rootParent:this}),React.DOM.div({className:"selectholder"},React.DOM.i({className:"icon-ok-big"})))}}),app.view.note.edit=app.lib.element({displayName:"note.edit",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],getInitialState:function(){return{context:this.props.context||"note"}},componentWillMount:function(){this.events=_.clone(Backbone.Events),this.events.on("save",this.saveNote,this)},componentWillUnmount:function(){this.events.off(),this.events=null},componentDidMount:function(){this.events.on("focus:set",this.focusSet,this),this.events.on("focus:remove",this.focusRemove,this)},render:function(){return React.DOM.div(null,app.view.item.tag.edit({ref:app.lib.cid(),model:this.props.model,context:this.state.context,switchContext:this.switchContext,events:this.events,rootParent:this.props.rootParent}),app.view.item.body.edit({ref:app.lib.cid(),model:this.props.model,context:this.state.context,events:this.events,rootParent:this.props.rootParent}),app.view.item.timestamp.edit({model:this.props.model,rootParent:this.props.rootParent}),app.view.note.menu[this.state.context]({ref:app.lib.cid(),model:this.props.model,context:this.state.context,events:this.events,rootParent:this.props.rootParent}),React.DOM.div({className:"notefooter"},app.view.item.tags.edit({ref:app.lib.cid(),model:this.props.model,events:this.events,context:this.state.context,rootParent:this.props.rootParent}),React.DOM.div({className:"enter",onClick:this.saveNote,title:"Save item"},React.DOM.i({className:"icon-enter"}),React.DOM.span({className:"savetext"},"save"))))},saveNote:function(){this.save()},save:function(pure){for(var isValid=!0,focusIfInvalid=!pure,children=app.lib.findChildren(this),i=0;i<children.length;i++)if(children[i].validate&&!children[i].validate(focusIfInvalid)){isValid=!1;break}if("tag"!==this.props.context&&this.props.model.data(this.props.context).items.length<=0&&(isValid=!1),isValid){if(this.props.model.isNew()){var note=this.props.model.clone();this.props.model.collection.unshift(note),note.save(this.state.context),this.props.model.reset()}else pure||this.props.changeView("view"),this.props.model.save(this.state.context);pure||this.props.onSaved&&this.props.onSaved()}},switchContext:function(context){if(("note"===context||"tracker"===context)&&!this.props.model.data(context)){var items={};items[context]={$set:app.model.note.defaults[context]()._data[context]},this.props.model.update(items)}this.setState({context:context})},focus:function(){var elementToFocus=$(":focusable:first",this.getDOMNode());return 0===elementToFocus.parents(".notefooter").length&&(elementToFocus.focus(),!this.props.model.isNew()&&this.props.model.data("tag")&&this.props.model.data("tag").name.length>0&&app.lib.focus.next()),this.rootParent().setActive(!0),!0},focusSet:function(component){component?component.focus&&component.focus():this.focus()},focusRemove:function(component){component?component.focus&&(component.focus(),app.lib.focus.next()):this.focus()}}),app.view.note.view=app.lib.element({displayName:"note.view",mixins:[app.lib.mixins.rootParent],componentWillMount:function(){this.props.model.on("change",this.forceUpdate.bind(this,null),this)},componentDidMount:function(){},componentWillUnmount:function(){this.props.model.off(null,null,this)},shouldComponentUpdate:function(nextProps,nextState){return!0},componentDidUpdate:function(){this.props.onResize(this)},getInitialState:function(){return{context:this.props.context||"note",selected:!1}},changeView:function(){this.props.changeView("edit")},switchContext:function(context){this.setState({context:context})},render:function(){return React.DOM.div({onDoubleClick:this.changeView,ref:"container"},app.view.item.tag.view({model:this.props.model,context:this.state.context,switchContext:this.switchContext,rootParent:this.props.rootParent}),app.view.item.body.view({model:this.props.model,context:this.state.context,rootParent:this.props.rootParent}),app.view.item.timestamp.view({model:this.props.model,rootParent:this.props.rootParent}),app.view.note.menu.quick({model:this.props.model,context:this.state.context,rootParent:this.props.rootParent}),app.view.item.tags.view({model:this.props.model,context:this.state.context,rootParent:this.props.rootParent}))}}),app.view.note.options=app.view.note.options||{},app.view.note.options.base={optionsToggle:function(field,value,component){this.props.model.data().options=this.props.model.data("options")||{};var options=this.props.model.data("options");if("undefined"==typeof options[field]){var update={};update[field]={$set:!app.config.defaultNoteOptions[field]},this.props.model.update("options",update),component.update(this.props.model.getOptions(field),!1)}else if("undefined"!=typeof options[field]&&options[field]===app.config.defaultNoteOptions[field]){var update={};update[field]={$set:void 0},this.props.model.update("options",update),delete this.props.model.data("options")[field],component.update(this.props.model.getOptions(field),!0)}else{var update={};update[field]={$set:!options[field]},this.props.model.update("options",update),component.update(this.props.model.getOptions(field),!1)}},getOptionToggleProps:function(field,text){this.props.model.data().options=this.props.model.data("options")||{};var options=this.props.model.data("options"),isDefault="undefined"==typeof options[field],checked=isDefault?app.config.defaultNoteOptions[field]:options[field];return{field:field,isDefault:isDefault,checked:checked,text:text,callback:this.optionsToggle}}},app.view.note.options=app.view.note.options||{},app.view.note.options.note=app.lib.element({displayName:"note.options.note",mixins:[app.view.note.options.base],render:function(){return React.DOM.div({className:"options"},app.view.components.checkbox(this.getOptionToggleProps("timestamp","Show timestamp")))}}),app.view.note.options=app.view.note.options||{},app.view.note.options.tag=app.lib.element({displayName:"note.options.tag",mixins:[app.view.note.options.base],render:function(){return React.DOM.div({className:"options"},app.view.components.checkbox(this.getOptionToggleProps("timestamp","Show timestamp")),app.view.components.checkbox(this.getOptionToggleProps("autoExpand","Auto expand")),React.DOM.div({className:"seperator"}),app.view.components.checkbox(this.getOptionToggleProps("noteTimestamp","Note - Show timestamp")),app.view.components.checkbox(this.getOptionToggleProps("noteInheritColor","Note - Same color as tag")),app.view.components.checkbox(this.getOptionToggleProps("noteAddToInbox","Note - Add to inbox")),React.DOM.div({className:"seperator"}),app.view.components.group({name:"Note - Extra tags"},app.view.note.options.components.extratags({model:this.props.model,events:this.props.events})))}}),app.view.note.options=app.view.note.options||{},app.view.note.options.tracker=app.lib.element({displayName:"note.options.tracker",mixins:[app.view.note.options.base],render:function(){return React.DOM.div({className:"options"},app.view.components.checkbox(this.getOptionToggleProps("timestamp","Show timestamp")),app.view.components.checkbox(this.getOptionToggleProps("hideFromTrackerList","Hide from tracker list")),app.view.components.checkbox(this.getOptionToggleProps("autoExpand","Auto expand")),React.DOM.div({className:"seperator"}),app.view.components.checkbox(this.getOptionToggleProps("noteTimestamp","Note - Show timestamp")),app.view.components.checkbox(this.getOptionToggleProps("noteInheritColor","Note - Same color as tracker")),app.view.components.checkbox(this.getOptionToggleProps("noteAddToInbox","Note - Add to inbox")),app.view.components.checkbox(this.getOptionToggleProps("noteLinkToTag","Note - Create as tag")),React.DOM.div({className:"seperator"}),app.view.components.group({name:"Note - Extra tags"},app.view.note.options.components.extratags({model:this.props.model,events:this.props.events})))}}),app.view.note.options=app.view.note.options||{},app.view.note.options.components=app.view.note.options.components||{},app.view.note.options.components.extratags=app.lib.element({displayName:"note.options.components.extratags",mixins:[app.lib.mixins.resize],componentWillMount:function(){this.props.model.on("update:options.extratags",this.forceUpdate.bind(this,null),this)},componentWillUnmount:function(){this.props.model.off(null,null,this)},render:function(){return app.view.components.tagbox({ref:app.lib.cid(),tags:this.props.model.getOptions("extratags"),addTag:this.addTag,removeTag:this.removeTag,events:this.props.events})},addTag:function(tag){this.props.model.data().options=this.props.model.data().options||{},this.props.model.data().options.extratags=this.props.model.getOptions("extratags"),this.props.model.update({options:{extratags:{$push:[tag]}}})},removeTag:function(tag){var tags=this.props.model.getOptions("extratags");tags.length>1?this.props.model.update({options:{extratags:{$splice:[[tags.indexOf(tag),1]]}}}):(this.props.model.update({options:{extratags:{$set:void 0}}}),delete this.props.model.data("options").extratags)}}),app.view.note.menu=app.view.note.menu||{},app.view.note.menu.base={getInitialState:function(){return{active:"note"===this.props.context||"tracker"===this.props.context?"add":null,fullview:!0}},componentWillMount:function(){this.events=_.clone(Backbone.Events)},componentDidMount:function(){},shouldComponentUpdate:function(nextProps,nextState){return!0},componentDidUpdate:function(){},componentWillUnmount:function(){},itemClicked:function(event){var type=$(event.target).data("type");switch(this.setState({active:null}),type){case"more":app.events.trigger("contextmenu",event.target,{type:"textmenu",items:[{icon:"icon-trash-alt",text:"Delete"},{icon:"icon-cog",text:"Settings"}]});break;case"archive":this.props.model.archiveNote();break;case"remove":this.props.model.removeNote();break;case"tag":this.props.model.data().tag?this.props.model.removeTag():this.props.model.setTag()}this.setState({active:type})},render:function(){var content=this.renderItems(this.state.active);return React.DOM.div({className:window.classnames({noselect:!0,picker:!0,active:this.state.active,fullview:this.state.fullview})},React.DOM.div({className:"hint",onClick:this.itemClicked},React.DOM.i({className:"item icon-ellipsis"})),React.DOM.div({className:"content"},React.DOM.div({className:"root"},this.renderItems("root",this.state.active)),content?React.DOM.div({className:"sub"},content):null))},renderItems:function(parent,active){if("options"===parent)return app.view.note.options[this.props.context]({model:this.props.model,events:this.props.events});var items=this.commands[parent];return _.map(items,function(item,index){return React.DOM.i({key:index,className:item.icon+" "+window.classnames({item:!0,active:active===item.value}),"data-type":item.value,onClick:this.execute.bind(this,parent,item.value),style:item.color?{color:app.lib.color(item.color)}:{},title:item.text})},this)},execute:function(parent,command,event){if(this.commands[command]||"options"===command)this.setState(this.state.active===command?{active:null}:{active:command});else switch(parent){case"root":switch(this.setState({active:null}),command){case"more":this.menu(event);break;case"tag":this.tag()}break;case"add":this.props.model.addItem(this.props.context,command);break;case"color":this.props.model.updateColor(command)}},clear:function(){this.props.model.reset()},moveToArchive:function(){this.props.model.setStatus(this.props.context,"archive")},moveToTrash:function(){this.props.model.setStatus(this.props.context,"trash")},moveToAll:function(){this.props.model.setStatus(this.props.context,"all")},moveToInbox:function(){this.props.model.setStatus(this.props.context,"inbox")},remove:function(){this.props.model.remove(this.props.context)},tag:function(){this.props.model.data("tag")?this.props.model.removeTag():this.props.model.setTag()},releseTag:function(){this.props.model.update({tag:{$set:null}}),delete this.props.model.data().tag,this.props.model.save(this.props.context)},releseAndDelete:function(){this.props.model.update({tag:{$set:null}}),delete this.props.model.data().tag,this.props.model.save(this.props.context).done(function(){this.props.model.collection.remove(this.props.model)}.bind(this))}},app.view.note.menu=app.view.note.menu||{},app.view.note.menu.quick=app.lib.element({mixins:[app.lib.mixins.rootParent],getDefaultProps:function(){return{context:"note",model:null}},componentWillMount:function(){},componentWillUnmount:function(){},shouldComponentUpdate:function(nextProps,nextState){return!0},componentDidMount:function(){},changeStatus:function(status,event){this.props.model.setStatus(this.props.context,status)},changeColor:function(event){var menu={type:"colormenu",callback:this.applyColor};app.events.trigger("contextmenu",event.target,menu,"top","middle")},applyColor:function(color){this.props.model.updateColor(color),this.props.model.save(this.props.context)},permanentlyDelete:function(){this.props.model.collection.removeNotes({ids:[this.props.model.get("_id")]})},duplicate:function(){this.props.model.duplicate(this.props.context)},select:function(){this.rootParent().setSelected(!0)},edit:function(){this.rootParent().changeView("edit")},showMore:function(event){var status=this.props.model.data("status"),menu={type:"textmenu",items:[]};menu.items.push({icon:"icon-pencil-alt",text:"Edit",callback:this.edit}),"inbox"!==status&&menu.items.push({icon:"icon-inbox",text:"Move to Inbox",callback:this.changeStatus.bind(this,"inbox")}),"note"===this.props.context&&menu.items.push({icon:"icon-docs",text:"Duplicate",callback:this.duplicate.bind(this)}),"trash"!==status&&menu.items.push({icon:"icon-trash-alt",text:"Move to Trash",callback:this.changeStatus.bind(this,"trash")}),"trash"===status&&menu.items.push({icon:"icon-trash-alt",text:"Permanently delete",callback:this.permanentlyDelete.bind(this)}),app.events.trigger("contextmenu",event.target,menu)},prevent:function(event){event.preventDefault(),event.stopPropagation()},render:function(){var status=this.props.model.data("status"),className="nsm",icon="icon-ellipsis-vert",className="nsmb",icon="icon-ellipsis";return React.DOM.div({className:className},React.DOM.div({className:"nsm_main"},React.DOM.div({className:"nsm_handle"},React.DOM.i({className:icon})),React.DOM.div({className:"nsm_content picker",style:{backgroundColor:app.lib.color(this.props.model.data("color"))}},React.DOM.div({className:"nsm_cont_sub",onClick:this.prevent},React.DOM.i({className:"item icon-art-gallery",onClick:this.changeColor,title:"Change color"}),"all"!==status?React.DOM.i({className:"item icon-folder-open",onClick:this.changeStatus.bind(this,"all"),title:"Move to All"}):null,"archive"!==status?React.DOM.i({className:"item icon-archive",onClick:this.changeStatus.bind(this,"archive"),title:"Move to Archive"}):null,React.DOM.i({className:"item icon-ellipsis",onClick:this.showMore,title:"More"}),React.DOM.i({className:"item icon-ok right",onClick:this.select,title:"Check (select)"})))))}}),app.view.note.menu=app.view.note.menu||{},app.view.note.menu.note=app.lib.element({displayName:"note.menu.note",mixins:[app.lib.mixins.rootParent,app.view.note.menu.base,app.lib.mixins.resize],menu:function(event){var menu={type:"textmenu",items:[]};this.props.model.isNew()?(menu.items.push({icon:"icon-arrows-cw",text:"Clear",callback:this.clear}),menu.items.push(this.props.model.data("tag")?{icon:"icon-unlink-01",text:"Relese from tag",callback:this.tag}:{icon:"icon-link-01",text:"Link to tag",callback:this.tag})):(menu.items.push({icon:"icon-folder",
text:"Move to All notes",callback:this.moveToAll}),menu.items.push({icon:"icon-inbox",text:"Move to Inbox",callback:this.moveToInbox}),menu.items.push({icon:"icon-archive",text:"Move to Archive",callback:this.moveToArchive}),menu.items.push(this.props.model.data("tag")?{icon:"icon-unlink-01",text:"Relese from tag",callback:this.releseTag}:{icon:"icon-link-01",text:"Link to tag",callback:this.tag}),menu.items.push({icon:"icon-trash-alt",text:"Move to Trash",callback:this.moveToTrash})),app.events.trigger("contextmenu",event.target,menu)},commands:{root:[{text:"Add new item",icon:"icon-plus-alt",value:"add"},{text:"Change color",icon:"icon-art-gallery",value:"color"},{text:"Options",icon:"icon-cog",value:"options"},{text:"More",icon:"icon-ellipsis",value:"more"}],add:[{text:"Text block",icon:"icon-font",value:"text"},{text:"Check list",icon:"icon-check",value:"list"},{text:"Link & linked image",icon:"icon-link",value:"link"},{text:"Numeric",icon:"icon-sort-numeric",value:"numeric"},{text:"Stopwatch",icon:"icon-stopwatch",value:"stopwatch"},{text:"Countdown",icon:"icon-hourglass",value:"countdown"}],color:_.map(app.config.colors,function(color){return{text:color,icon:"icon-blank",value:color,color:color}})}}),app.view.note.menu=app.view.note.menu||{},app.view.note.menu.tag=app.lib.element({displayName:"note.menu.tag",mixins:[app.lib.mixins.rootParent,app.view.note.menu.base,app.lib.mixins.resize],menu:function(event){var menu={type:"textmenu",items:[]};this.props.model.isNew()?menu.items.push({icon:"icon-arrows-cw",text:"Clear",callback:this.clear}):(menu.items.push({icon:"icon-folder",text:"Move to All tags",callback:this.moveToAll}),menu.items.push({icon:"icon-archive",text:"Move to Archive",callback:this.moveToArchive}),menu.items.push({icon:"icon-trash-alt",text:"Move to Trash",callback:this.moveToTrash})),app.events.trigger("contextmenu",event.target,menu)},commands:{root:[{text:"Change color",icon:"icon-art-gallery",value:"color"},{text:"Options",icon:"icon-cog",value:"options"},{text:"More",icon:"icon-ellipsis",value:"more"}],color:_.map(app.config.colors,function(color){return{text:color,icon:"icon-blank",value:color,color:color}})}}),app.view.note.menu=app.view.note.menu||{},app.view.note.menu.tracker=app.lib.element({displayName:"note.menu.tracker",mixins:[app.lib.mixins.rootParent,app.view.note.menu.base,app.lib.mixins.resize],menu:function(event){var menu={type:"textmenu",items:[]};this.props.model.isNew()?menu.items.push({icon:"icon-arrows-cw",text:"Clear",callback:this.clear}):(menu.items.push({icon:"icon-folder",text:"Move to All trackers",callback:this.moveToAll}),menu.items.push({icon:"icon-archive",text:"Move to Archive",callback:this.moveToArchive}),menu.items.push({icon:"icon-unlink-01",text:"Relese tag & Delete tracker",callback:this.releseAndDelete}),menu.items.push({icon:"icon-trash-alt",text:"Move to Trash",callback:this.moveToTrash})),app.events.trigger("contextmenu",event.target,menu)},commands:{root:[{text:"Add new item",icon:"icon-plus-alt",value:"add"},{text:"Change color",icon:"icon-art-gallery",value:"color"},{text:"Options",icon:"icon-cog",value:"options"},{text:"More",icon:"icon-ellipsis",value:"more"}],add:[{text:"Text block",icon:"icon-font",value:"text"},{text:"Check list",icon:"icon-check",value:"list"},{text:"Choice (combo & dropdown)",icon:"icon-list-bullet",value:"choice"},{text:"Link & linked image",icon:"icon-link",value:"link"},{text:"Numeric",icon:"icon-sort-numeric",value:"numeric"},{text:"Stopwatch",icon:"icon-stopwatch",value:"stopwatch"},{text:"Countdown",icon:"icon-hourglass",value:"countdown"}],color:_.map(app.config.colors,function(color){return{text:color,icon:"icon-blank",value:color,color:color}})}}),app.view.item.body=app.view.item.body||{},app.view.item.body.edit=app.lib.element({displayName:"item.body.edit",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},render:function(){switch(this.props.context){case"note":case"tracker":return app.view.item.container.edit({ref:app.lib.cid(),model:this.props.model,context:this.props.context,events:this.props.events,rootParent:this.props.rootParent});case"tag":return app.view.item.tagbody.edit({ref:app.lib.cid(),model:this.props.model,context:this.props.context,events:this.props.events,rootParent:this.props.rootParent})}}}),app.view.item.body=app.view.item.body||{},app.view.item.body.view=app.lib.element({displayName:"item.body.view",mixins:[app.lib.mixins.rootParent],componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},render:function(){switch(this.props.context){case"note":case"tracker":return app.view.item.container.view({model:this.props.model,context:this.props.context,rootParent:this.props.rootParent});case"tag":return app.view.item.tagbody.view({model:this.props.model,context:this.props.context,rootParent:this.props.rootParent})}}}),app.view.item.container=app.view.item.container||{},app.view.item.container.edit=app.lib.element({displayName:"item.container.edit",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],componentWillMount:function(){this.props.model.on("update:note.items update:tracker.items",this.forceUpdate.bind(this,null),this)},componentDidMount:function(){$(this.getDOMNode()).sortable({containment:"parent",items:".reorder",tolerance:"pointer",cursor:"ns-resize",axis:"y",handle:".handle",update:this.reorderFinished,scroll:!1,delay:100,forceHelperSize:!0,forcePlaceholderSize:!0,helper:this.getHelper,appendTo:"parent"})},getHelper:function(event,element){var helper=element.clone();return helper.removeAttr("data-reactid"),helper.find("[data-reactid]").removeAttr("data-reactid"),helper},componentWillUnmount:function(){this.props.model.off(null,null,this),$(this.getDOMNode()).sortable("destroy")},reorderFinished:function(event,ui){var indexArray=$(this.getDOMNode()).sortable("toArray",{attribute:"data-index"}),orderedItems=_.map(indexArray,function(index){return this.props.model.data(this.props.context).items[parseInt(index)]},this);orderedItems=orderedItems.concat(_.difference(this.props.model.data(this.props.context).items,orderedItems)),$(this.getDOMNode()).sortable("cancel"),this.props.model.update(this.props.context,{items:{$set:orderedItems}},!0),this.forceUpdate()},render:function(){var items=this.props.model.data(this.props.context)&&this.props.model.data(this.props.context).items;return items&&items.length?React.DOM.div({className:"container"},_.map(_.filter(items,function(item){return!item.group},this),function(item,index){return app.view.item.wrapper.edit({ref:app.lib.cid(),index:items.indexOf(item),key:item.uid,data:item,model:this.props.model,canReorder:!0,context:this.props.context,events:this.props.events,rootParent:this.props.rootParent})},this)):React.DOM.div({className:"hide"})},componentDidUpdate:function(){}}),app.view.item.container=app.view.item.container||{},app.view.item.container.view=app.lib.element({displayName:"item.container.view",mixins:[app.lib.mixins.rootParent],componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},shouldComponentUpdate:function(nextProps,nextState){return!0},render:function(){var items=this.props.model.data(this.props.context)&&this.props.model.data(this.props.context).items;return items&&items.length?React.DOM.div({className:"container"},_.map(_.filter(items,function(item){return!item.group},this),function(item,index){return app.view.item.wrapper.view({key:item.uid,data:item,model:this.props.model,context:this.props.context,rootParent:this.props.rootParent})},this)):React.DOM.span()},componentDidUpdate:function(){}}),app.view.item.wrapper=app.view.item.wrapper||{},app.view.item.wrapper.edit=app.lib.element({displayName:"item.wrapper.edit",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize,app.lib.mixins.focus],componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},getInitialState:function(){return{showName:!!this.props.data.name||"tracker"===this.props.context,name:this.props.data.name,showOptions:("tracker"===this.props.context||"link"===this.props.data.type||"numeric"===this.props.data.type||app.data.account.getOptions("noteItemOptions"))&&"group"!==this.props.data.type}},showOptions:function(item,event){var menu={type:"textmenu",items:[]};"group"!==this.props.data.type&&menu.items.push({icon:"icon-fontsize",text:this.state.showName?"Remove block name":"Add block name",callback:this.toggleBlockName}),this.refs.item.getMenuItems&&(menu.items=menu.items.concat(this.refs.item.getMenuItems())),app.view.item[this.props.data.type].edit._class.hasOptions&&menu.items.push({icon:"icon-cog",text:this.state.showOptions?"Hide options":"Show options",callback:this.toggleOptions.bind(this,item)}),menu.items.push({icon:"icon-trash-alt",text:"Remove block",callback:this.remove.bind(this,item)}),app.events.trigger("contextmenu",event.target,menu)},remove:function(item){this.props.model.removeItem(this.props.context,item.uid)},toggleOptions:function(){app.view.item[this.props.data.type].edit._class.hasOptions&&this.setState({showOptions:!this.state.showOptions})},toggleBlockName:function(){this.props.data.name=null,this.setState({showName:!this.state.showName,name:null},this.focus)},changeName:function(event){this.props.data.name=event.target.value,this.setState({name:this.props.data.name})},render:function(){var classSet={wrapper:!0,hasName:this.state.showName,reorder:this.props.canReorder,group:"group"===this.props.data.type,hasoptions:this.state.showOptions},name=null,nameGroup=null;if("group"===this.props.data.type){var blockName=app.data.tags.get(this.props.data.data.trackerId).data("tag").name;nameGroup=[React.DOM.div({key:"0",className:"groupName",style:{backgroundColor:app.lib.color(this.props.model.data().color),color:app.lib.color(this.props.model.data().color)}},blockName),React.DOM.div({key:"1",className:"groupName"},blockName)]}else this.state.showName&&(name=React.DOM.div({className:"fieldName"},React.DOM.textarea({value:this.state.name,rows:1,onChange:this.changeName,placeholder:app.config.context[this.props.context].placeholder.blockTitle,onKeyDown:this.keyPress,ref:"groupname"})));return React.DOM.div({className:window.classnames(classSet),"data-index":this.props.index},this.props.canReorder?React.DOM.span({className:"handle"},React.DOM.i({className:"icon-menu"})):null,this.props.canReorder?React.DOM.span({className:"more"},React.DOM.i({className:"icon-ellipsis-vert",onClick:this.showOptions.bind(this,this.props.data)})):null,nameGroup,React.DOM.div({className:"itemgroup"},name,app.view.item[this.props.data.type].edit({data:this.props.data,model:this.props.model,showOptions:this.state.showOptions,context:this.props.context,ref:"item",events:this.props.events,rootParent:this.props.rootParent,remove:this.remove})))},keyPress:function(event){"Enter"===event.key&&(app.lib.focus.next(),event.preventDefault())},componentDidUpdate:function(){},focus:function(){return this.refs.groupname?(this.refs.groupname.getDOMNode().focus(),!0):this.refs.item.focus?(this.refs.item.focus(),!0):!1}}),app.view.item.wrapper=app.view.item.wrapper||{},app.view.item.wrapper.view=app.lib.element({displayName:"item.wrapper.view",mixins:[app.lib.mixins.rootParent],componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},componentWillReceiveProps:function(nextProps){},render:function(){var hasName=!!this.props.data.name,classSet={wrapper:!0,hasName:hasName,group:"group"===this.props.data.type},nameGroup=null,name=null;if("group"===this.props.data.type){var tracker=app.data.tags.get(this.props.data.data.trackerId),blockName=tracker&&tracker.data("tag")&&tracker.data("tag").name||this.props.data.name;nameGroup=[React.DOM.div({key:"0",className:"groupName",style:{backgroundColor:app.lib.color(this.props.model.data().color),color:app.lib.color(this.props.model.data().color)}},blockName),React.DOM.div({key:"1",className:"groupName"},blockName)]}else hasName&&(name=React.DOM.div({className:"fieldName"},this.props.data.name));return React.DOM.div({className:window.classnames(classSet)},nameGroup,React.DOM.div({className:"itemgroup"},name,app.view.item[this.props.data.type][this.props.itemMode||"view"]({data:this.props.data,model:this.props.model,context:this.props.context,events:this.props.events,rootParent:this.props.rootParent})))},componentDidUpdate:function(){}}),app.view.item.group=app.view.item.group||{},app.view.item.group.edit=app.lib.element({displayName:"item.group.edit",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],componentWillMount:function(){},componentDidMount:function(){},componentDidUpdate:function(prevProps,prevState){},getInitialState:function(){return{}},render:function(){var items=_.filter(this.props.model.data("note").items,function(item){return item.group===this.props.data.uid},this);return React.DOM.div(null,_.map(items,function(item,index){return app.view.item.wrapper.view({ref:app.lib.cid(),index:index,key:item.uid,data:item,model:this.props.model,context:"note",itemMode:"edit",events:this.props.events,rootParent:this.props.rootParent})},this),this.props.showOptions?React.DOM.div({className:"itemoptions"},null):null)},focus:function(){},statics:{hasOptions:!1}}),app.view.item.group=app.view.item.group||{},app.view.item.group.view=app.lib.element({displayName:"item.group.view",mixins:[app.lib.mixins.rootParent],componentWillMount:function(){},componentDidMount:function(){},componentDidUpdate:function(prevProps,prevState){},getInitialState:function(){return{}},componentWillReceiveProps:function(nextProps){},render:function(){var items=_.filter(this.props.model.data("note").items,function(item){return item.group===this.props.data.uid},this);return React.DOM.div(null,_.map(items,function(item,index){return app.view.item.wrapper.view({index:index,key:item.uid,context:this.props.context,data:item,model:this.props.model,rootParent:this.props.rootParent})},this))}}),app.view.item.link=app.view.item.link||{},app.view.item.link.edit=app.lib.element({displayName:"item.link.edit",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){this.setImage()},componentDidUpdate:function(){},getInitialState:function(){return{}},onLinkChange:function(event){this.props.data.data.link=event.target.value,this.clearImage(),this.forceUpdate()},onTitleChange:function(event){this.props.data.data.title=event.target.value,this.forceUpdate()},onBlurLink:function(){this.setImage()},keyPress:function(event){"Enter"===event.key&&(app.lib.focus.next(),event.preventDefault(),event.stopPropagation())},render:function(){var data=this.props.data.data;if(data.hasImage){var size={width:0,height:0},koef=Math.min(268/data.size.width,1);size.width=data.size.width*koef,size.height=data.size.height*koef}return React.DOM.div({className:"linkitem"},React.DOM.input({className:"linkLink",type:"text",value:data.link,onChange:this.onLinkChange,onBlur:this.onBlurLink,placeholder:"Link / image URL",onKeyDown:this.keyPress}),data.hasTitle?React.DOM.input({className:"linkTitle",type:"text",value:data.title,onChange:this.onTitleChange,placeholder:"Link title",onKeyDown:this.keyPress}):null,data.hasImage?React.DOM.img({src:data.link,width:size.width,height:size.height}):null,this.props.showOptions?React.DOM.div({className:"itemoptions"},React.DOM.i({className:"icon-fontsize"+(data.hasTitle?"":" inactive"),onClick:this.toggleTitle,title:"Toggle title"}),React.DOM.i({className:"icon-picture"+(data.hasImage?"":" inactive"),onClick:this.toggleImage,title:"Toggle image"})):null)},update:function(){this.forceUpdate()},toggleTitle:function(){this.props.data.data.hasTitle=!this.props.data.data.hasTitle,this.update()},toggleImage:function(){this.props.data.data.hasImage?this.clearImage():this.setImage()},setImage:function(){if(!this.props.data.data.hasImage){var img=new Image,data=this.props.data.data,self=this;img.onload=function(){data.size={width:this.width,height:this.height},data.hasImage=!data.hasImage,app.lib.isMounted(self)?self.update():self.props.model.save(self.props.context)},img.src=this.props.data.data.link}},clearImage:function(){this.props.data.data.hasImage&&(this.props.data.data.hasImage=!this.props.data.data.hasImage,delete this.props.data.data.size,this.update())},statics:{hasOptions:!0}}),app.view.item.link=app.view.item.link||{},app.view.item.link.view=app.lib.element({displayName:"item.link.view",mixins:[app.lib.mixins.rootParent],componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},componentDidUpdate:function(){},getInitialState:function(){return{}},render:function(){var data=this.props.data.data;if(data.hasImage){var size={width:0,height:0},koef=Math.min(268/data.size.width,1);size.width=data.size.width*koef,size.height=data.size.height*koef}var link=app.lib.getUrl(data.link);return React.DOM.div({className:"linkitem"},data.hasImage?React.DOM.img({src:data.link,width:size.width,height:size.height}):React.DOM.div({className:"linkLink"},React.DOM.a({target:"_blank",href:link||"#"},data.title||data.link||"Empty link")))}}),app.view.item.numeric=app.view.item.numeric||{},app.view.item.numeric.edit=app.lib.element({displayName:"item.numeric.edit",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},componentDidUpdate:function(){},getInitialState:function(){return{}},onChange:function(event){var value=event.target.value,regex=/^([\+-])?(\d+)?([,\.])?(\d+)?$/gi;regex.test(value)&&(this.props.data.data.value=value,this.forceUpdate())},keyPress:function(event){"Enter"===event.key&&(app.lib.focus.next(),event.preventDefault(),event.stopPropagation())},onIncrement:function(dir){value=(this.props.data.data.value||"0").replace(",",".");var dec=app.lib.decimals(value),value=parseFloat(value);value+=dir*Math.pow(10,-dec),value=Math.round(value*Math.pow(10,dec))/Math.pow(10,dec),this.props.data.data.value=value.toFixed(dec),this.forceUpdate()},render:function(){var data=this.props.data.data;return React.DOM.div({className:"numeric"+(data.controls?" hasControls":"")},React.DOM.div({className:"block"},React.DOM.input({className:"value",value:data.value,onChange:this.onChange,onKeyDown:this.keyPress,placeholder:"Blank value"})),data.controls?React.DOM.div({className:"commands"},React.DOM.div({className:"left",onClick:this.onIncrement.bind(this,1)},React.DOM.i({className:"icon-plus"})),React.DOM.div({className:"right",onClick:this.onIncrement.bind(this,-1)},React.DOM.i({className:"icon-minus"}))):null,this.props.showOptions?React.DOM.div({className:"itemoptions"},React.DOM.i({className:"icon-sort"+(data.controls?"":" inactive"),onClick:this.toggleControls,title:"Toggle controls"})):null)},update:function(){this.forceUpdate()},toggleControls:function(){this.props.data.data.controls=!this.props.data.data.controls,this.update()},getMenuItems:function(){var items=[];return items.push({icon:"icon-sort",text:this.props.data.data.controls?"Remove controls":"Add controls",callback:this.toggleControls}),items},statics:{hasOptions:!0}}),app.view.item.numeric=app.view.item.numeric||{},app.view.item.numeric.view=app.lib.element({displayName:"item.numeric.view",mixins:[app.lib.mixins.rootParent],componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},componentDidUpdate:function(){},getInitialState:function(){return{}},onIncrement:function(dir,event){value=this.props.data.data.value||"0";var dec=app.lib.decimals(value),value=parseFloat(value);value+=dir*Math.pow(10,-dec),value=Math.round(value*Math.pow(10,dec))/Math.pow(10,dec),this.props.data.data.value=value.toFixed(dec),this.forceUpdate(),this.save()},prevent:function(event){event.preventDefault(),event.stopPropagation()},save:function(){this._save=this._save||_.debounce(this.saveLogic,1500),this._save()},saveLogic:function(){this.props.model.save(this.props.context)},render:function(){var data=this.props.data.data;return React.DOM.div({className:"numeric"+(data.controls?" hasControls":"")},React.DOM.div({className:"block"},React.DOM.div({className:"value"},data.value||"0")),data.controls?React.DOM.div({className:"commands",onClick:this.prevent,onDoubleClick:this.prevent},React.DOM.div({className:"left",onClick:this.onIncrement.bind(this,1)},React.DOM.i({className:"icon-plus"})),React.DOM.div({className:"right",onClick:this.onIncrement.bind(this,-1)},React.DOM.i({className:"icon-minus"}))):null)}}),app.view.item.list=app.view.item.list||{},app.view.item.list.edit=app.lib.element({displayName:"item.list.edit",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],componentWillMount:function(){this.choice="choice"===this.props.data.type},componentDidMount:function(){$(".notelistitems",this.getDOMNode()).sortable({containment:"parent",items:".notelistitem",tolerance:"pointer",cursor:"ns-resize",axis:"y",handle:".lihandle",update:this.reorderFinished,scroll:!1,delay:100,forceHelperSize:!0,forcePlaceholderSize:!0,helper:this.getHelper,appendTo:"parent"})},getHelper:function(event,element){var helper=element.clone();return helper.removeAttr("data-reactid"),helper.find("[data-reactid]").removeAttr("data-reactid"),helper},componentWillUnmount:function(){$(".notelistitems",this.getDOMNode()).sortable("destroy")},reorderFinished:function(event,ui){var indexArray=$(".notelistitems",this.getDOMNode()).sortable("toArray",{attribute:"data-index"}),orderedItems=_.map(indexArray,function(index){return this.props.data.data.items[parseInt(index)]},this);orderedItems=orderedItems.concat(_.difference(this.props.data.data.items,orderedItems)),$(".notelistitems",this.getDOMNode()).sortable("cancel"),this.props.data.data.items=orderedItems,this.forceUpdate()},componentDidUpdate:function(prevProps,prevState){},getInitialState:function(){return{}},componentWillReceiveProps:function(nextProps){},nextItem:function(index){index>=this.props.data.data.items.length-1?this.newItem():this.focusItem(index+1)},newItem:function(focus){var newItem={text:"",uid:app.lib.uid()};this.choice&&(newItem.tags=[]),this.props.data.data.items.push(newItem),this.forceUpdate(function(){focus!==!1&&this.focusItem(this.props.data.data.items.length-1)}.bind(this))},batchAdd:function(arr){_.each(arr,function(text){text=text.trim();var textOriginal=text,text=text.length<151?text:text.substring(0,147);textOriginal.length!==text.length&&(text+="...");var newItem={text:text,uid:app.lib.uid()};this.choice&&(newItem.tags=[]),this.props.data.data.items.push(newItem)},this),this.forceUpdate(function(){this.focusItem(this.props.data.data.items.length-1)}.bind(this))},focusItem:function(index){0>index&&(index=0),index>this.props.data.data.items.length-1&&(index=this.props.data.data.items.length-1),this.refs["item-"+index]&&this.refs["item-"+index].focus()},removeItem:function(index){return 1!==this.props.data.data.items.length||this.props.data.data.items[0].text?(this.props.data.data.items.splice(index,1),void(0===this.props.data.data.items.length?this.newItem(!1):this.forceUpdate())):void this.props.remove(this.props.data)},singleChoice:function(){if(this.props.data.data.combo=!this.props.data.data.combo,this.props.data.data.combo){var checkCount=0;_.each(this.props.data.data.items,function(item){item.checked=item.checked&&0===checkCount,item.checked&&checkCount++})}this.forceUpdate()},hasTags:function(){this.props.data.data.hasTags=!this.props.data.data.hasTags,this.props.data.data.hasTags||_.each(this.props.data.data.items,function(item){item.tags=[]}),this.forceUpdate()},render:function(){var data=this.props.data.data;return React.DOM.div({className:"notelist hascontrols"},React.DOM.div({className:"notelistitems"},_.map(this.props.data.data.items,function(item,index){return app.view.item.listitem.edit({key:index,ref:"item-"+index,index:index,item:item,rootParent:this.props.rootParent,nextItem:this.nextItem,removeItem:this.removeItem,checkItem:this.props.checkItem,focusItem:this.focusItem,batchAdd:this.batchAdd,mode:this.props.mode||"list",context:this.props.context,model:this.props.model,choice:this.choice,hasTags:this.props.data.data.hasTags})},this)),React.DOM.div({className:"newlistitem",onClick:this.newItem},React.DOM.div({className:"newicon icon-plus"})),this.choice?this.props.showOptions?React.DOM.div({className:"itemoptions"},React.DOM.i({className:"icon-tags"+(data.hasTags?"":" inactive"),onClick:this.hasTags,title:"Toggle items to have tags"}),React.DOM.i({className:"icon-align-justify"+(data.combo?"":" inactive"),onClick:this.singleChoice,title:"Toggle block to be added in note as dropdown list"})):null:this.props.showOptions?React.DOM.div({className:"itemoptions blank"}):null)},validate:function(focus){return!0},statics:{hasOptions:!1}}),app.view.item.list=app.view.item.list||{},app.view.item.list.view=app.lib.element({displayName:"item.list.view",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],componentWillMount:function(){this.choice="choice"===this.props.data.type},componentDidMount:function(){},componentDidUpdate:function(prevProps,prevState){},getInitialState:function(){return{}},componentWillReceiveProps:function(nextProps){},focusItem:function(index){0>index&&(index=0),index>this.props.data.data.items.length-1&&(index=this.props.data.data.items.length-1),this.refs["item-"+index]&&this.refs["item-"+index].focus()},save:function(){this._save=this._save||_.debounce(this.saveLogic,1500),this._save()},saveLogic:function(){this.props.model.save(this.props.context)},render:function(){return React.DOM.div({className:"notelist"},React.DOM.div({className:"notelistitems"},_.map(this.props.data.data.items,function(item,index){return app.view.item.listitem.view({key:index,ref:"item-"+index,index:index,item:item,rootParent:this.props.rootParent,focusItem:this.focusItem,checkItem:this.props.checkItem,mode:this.props.mode||"list",context:this.props.context,model:this.props.model,choice:this.choice,viewMode:this.props.viewMode,save:this.save})},this)))},validate:function(focus){return!0}}),app.view.item.listitem=app.view.item.listitem||{},app.view.item.listitem.edit=app.lib.element({displayName:"item.listitem.edit",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],componentWillMount:function(){},componentDidMount:function(){this.props.choice&&this.props.hasTags&&(this.props.item.tags=this.props.item.tags||[]),this.resizeTextarea()},componentDidUpdate:function(prevProps,prevState){this.resizeTextarea()},getDefaultProps:function(){return{item:{checked:!1,text:"",tags:[],value:null},nextItem:null}},getInitialState:function(){return{}},componentWillReceiveProps:function(nextProps){},resizeTextarea:function(){this.resizeTextareaThrottled=this.resizeTextareaThrottled||_.throttle(this.resizeTextareaLogic,150),this.resizeTextareaThrottled()},resizeTextareaLogic:function(){if(app.lib.isMounted(this)){var element=this.refs.textarea.getDOMNode();element.style.height="0px",element.style.height=Math.max(element.scrollHeight,element.clientHeight)+"px"}},paste:function(event){if(event.clipboardData.getData){var text=event.clipboardData.getData("Text")||"",arr=text.split("\n");arr.length>0&&(this.textChangedLogic((this.props.item.text||"")+(arr[0]||"").trim()),arr.shift(),this.props.batchAdd&&arr.length>0&&this.props.batchAdd(arr),event.preventDefault())}},textChanged:function(event){this.textChangedLogic(event.target.value)},textChangedLogic:function(text){var textOriginal=text,text=text.length<151?text:text.substring(0,147);textOriginal.length!==text.length&&(text+="..."),this.props.item.text=text,this.forceUpdate()},keyPress:function(event){},keyDown:function(event){"Enter"!==event.key||event.shiftKey||(event.preventDefault(),event.stopPropagation(),this.props.item.text?this.props.nextItem&&this.props.nextItem(this.props.index):(app.lib.focus.next(),this.removeItem())),"ArrowDown"===event.key&&this.props.focusItem&&(event.preventDefault(),event.stopPropagation(),this.props.focusItem(this.props.index+1)),"ArrowUp"===event.key&&this.props.focusItem&&(event.preventDefault(),event.stopPropagation(),this.props.focusItem(this.props.index-1)),"Backspace"!==event.key||this.props.item.text||(event.preventDefault(),event.stopPropagation(),this.removeItem())},removeItem:function(){this.props.removeItem&&this.props.removeItem(this.props.index)},checkItem:function(){this.props.item.checked=!this.props.item.checked,this.props.checkItem&&this.props.checkItem(this.props.index),this.forceUpdate()},render:function(){var textStyle,checkClass=this.props.item.checked?"icon-ok-blank":"icon-blank-empty";if("list"===this.props.mode)var textStyle=this.props.item.checked?"item-list-checked":"item-list-unchecked";else var textStyle=this.props.item.checked?"item-combo-checked":"item-combo-unchecked";return React.DOM.div({className:"notelistitem "+textStyle,"data-index":this.props.index},React.DOM.i({className:"licheck pointer "+checkClass,onClick:this.checkItem}),React.DOM.textarea({ref:"textarea",className:"litext",rows:1,placeholder:"List item",onChange:this.textChanged,onKeyDown:this.keyDown,onPaste:this.paste,value:this.props.item.text}),this.props.choice&&this.props.hasTags?React.DOM.div({className:"lichoice"},app.view.content.component.choicetags({tags:this.props.item.tags})):null,React.DOM.i({className:"lihandle icon-menu"}),React.DOM.i({className:"liremove icon-cancel",onClick:this.removeItem}))},focus:function(){return this.refs.textarea.getDOMNode().focus(),!0},validate:function(focus){return!0}}),app.view.item.listitem=app.view.item.listitem||{},app.view.item.listitem.view=app.lib.element({displayName:"item.listitem.view",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],componentWillMount:function(){},componentDidMount:function(){},componentDidUpdate:function(prevProps,prevState){},getDefaultProps:function(){return{item:{checked:!1,text:"",tags:[],value:null},nextItem:null}},getInitialState:function(){return{}},componentWillReceiveProps:function(nextProps){},checkItem:function(){this.props.choice?this.props.choice&&"edit"===this.props.viewMode&&(this.props.item.checked=!this.props.item.checked,this.props.checkItem&&this.props.checkItem(this.props.index),this.forceUpdate()):(this.props.item.checked=!this.props.item.checked,this.forceUpdate(),this.props.save())},prevent:function(event){this.props.choice||(event.preventDefault(),event.stopPropagation())},render:function(){var textStyle,checkClass=this.props.item.checked?"icon-ok-blank":"icon-blank-empty";if("list"===this.props.mode)var textStyle=this.props.item.checked?"item-list-checked":"item-list-unchecked";else var textStyle=this.props.item.checked?"item-combo-checked":"item-combo-unchecked";var style={};this.props.item.text||(style.color="rgba(10, 10, 10, 0.40)");var canCheck=!this.props.choice||this.props.choice&&"edit"===this.props.viewMode;return React.DOM.div({className:"notelistitem "+textStyle},React.DOM.i({className:"licheck "+checkClass+(canCheck?" pointer":""),onClick:this.checkItem,onDoubleClick:this.prevent}),React.DOM.div({style:style,className:"litext"},this.props.item.text||"List item"))},focus:function(){return!0},validate:function(focus){return!0}}),app.view.item.combo=app.view.item.combo||{},app.view.item.combo.edit=app.lib.element({displayName:"item.combo.edit",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},componentDidUpdate:function(prevProps,prevState){},getInitialState:function(){return{}},componentWillReceiveProps:function(nextProps){},onChange:function(index){index>=0?(this.props.data.data.items[index].checked=!0,this.props.checkItem(index)):this.props.checkItem(index)},onClick:function(event){var menu={type:"textmenu",items:[]};menu.items=_.map(this.props.data.data.items,function(item,index){
return{icon:item.checked?"icon-dot-circled":"icon-circle-empty",text:item.text,callback:this.onChange.bind(this,index)}},this),menu.items=_.filter(menu.items,function(item){return item.text}),menu.items.length>0&&menu.items.push({icon:"icon-cancel",text:"Unselect",callback:this.onChange.bind(this,-1)}),app.events.trigger("contextmenu",event.target,menu,"bottom","middle")},render:function(){var selected=_.find(this.props.data.data.items,function(item){return item.checked});return React.DOM.div({className:"combo",onClick:this.onClick},React.DOM.div({className:"combo-content"},selected?selected.text:"- Not selected -"),React.DOM.i({className:"combo-indicator icon-down-dir"}))},validate:function(focus){return!0},statics:{hasOptions:!1}}),app.view.item.combo=app.view.item.combo||{},app.view.item.combo.view=app.lib.element({displayName:"item.combo.view",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},componentDidUpdate:function(prevProps,prevState){},getInitialState:function(){return{}},componentWillReceiveProps:function(nextProps){},render:function(){var selected=_.find(this.props.data.data.items,function(item){return item.checked});return React.DOM.div({className:"combo"},React.DOM.div({className:"combo-content"},selected?selected.text:"- Not selected -"),"tracker"===this.props.context?React.DOM.i({className:"combo-indicator icon-down-dir"}):null)}}),app.view.item.choice=app.view.item.choice||{},app.view.item.choice.edit=app.lib.element({displayName:"item.choice.edit",checkItem:function(index){if((-1==index||this.props.data.data.combo&&this.props.data.data.items[index].checked)&&(_.each(this.props.data.data.items,function(item,itemIndex){itemIndex!==index&&item.checked&&(item.checked=!1,this.checkItem(itemIndex))},this),index>=0&&(this.props.data.data.items[index].checked=!0),this.forceUpdate()),index>=0&&"note"===this.props.context){var item=this.props.data.data.items[index];if(item&&item.tags&&item.tags.length>0)if(item.checked)_.each(item.tags,function(tag){this.props.model.appendTag(tag,this.props.context)},this);else{var checkedTags=_.reduce(this.props.data.data.items,function(memo,item){return item.checked&&item.tags&&item.tags.length>0&&memo.push(item.tags),memo},[],this);checkedTags=_.uniq(_.flatten(checkedTags));var diff=_.difference(item.tags,checkedTags),tagsToRemove=diff.length>0?diff:item.tags;_.each(tagsToRemove,function(tag){this.props.model.deleteTag(tag,this.props.context)},this)}}},render:function(){var props=_.clone(this.props);return props.choice=!0,props.mode="choice",props.checkItem=this.checkItem,"tracker"===this.props.context?app.view.item.list.edit(props):this.props.data.data.combo?(props.viewMode="edit",app.view.item.combo.edit(props)):(props.viewMode="edit",app.view.item.list.view(props))},validate:function(focus){return!0},statics:{hasOptions:!0}}),app.view.item.choice=app.view.item.choice||{},app.view.item.choice.view=app.lib.element({displayName:"item.choice.view",render:function(){var props=_.clone(this.props);return props.choice=!0,props.mode="choice","tracker"===this.props.context?this.props.data.data.combo?app.view.item.combo.view(props):app.view.item.list.view(props):this.props.data.data.combo?(props.viewMode="view",app.view.item.combo.view(props)):(props.viewMode="view",app.view.item.list.view(props))}}),app.view.item.stopwatch=app.view.item.stopwatch||{},app.view.item.stopwatch.edit=app.lib.element({displayName:"item.stopwatch.edit",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],componentWillMount:function(){this.update(),this.toggleTickListner()},componentWillUnmount:function(){app.events.off(null,null,this)},componentDidMount:function(){},componentDidUpdate:function(prevProps,prevState){},getInitialState:function(){return{running:!1,ellapsed:0,editing:null}},update:function(){var ellapsed=this.props.data.data.ellapsed,periods=this.props.data.data.periods;periods.length>0&&!periods[periods.length-1].stopped&&(ellapsed+=app.lib.dateUTC().getTime()-periods[periods.length-1].started),this.setState({ellapsed:ellapsed})},start:function(){this.view(),this.props.data.data.periods.push({started:app.lib.dateUTC().getTime(),stopped:null}),this.toggleTickListner()},stop:function(){this.view();var periods=this.props.data.data.periods;periods&&periods.length>0&&(periods[periods.length-1].stopped=app.lib.dateUTC().getTime(),this.props.data.data.ellapsed+=periods[periods.length-1].stopped-periods[periods.length-1].started),this.toggleTickListner()},reset:function(){this.view(),this.props.data.data.periods=[],this.props.data.data.ellapsed=0,this.update(),this.toggleTickListner()},toggleTickListner:function(){var periods=this.props.data.data.periods;periods.length>0&&!periods[periods.length-1].stopped?(app.events.on("tick:seconds",this.update,this),this.setState({running:!0})):(app.events.off("tick:seconds",null,this),this.setState({running:!1}))},edit:function(){var date=new Date(this.state.ellapsed),dateString=app.lib.pad(24*(date.getUTCDate()-1)+date.getUTCHours(),2)+":"+app.lib.pad(date.getUTCMinutes(),2)+":"+app.lib.pad(date.getUTCSeconds(),2);this.stop(),this.setState({editing:dateString},function(){this.refs.input.getDOMNode().focus()}.bind(this))},view:function(){null!==this.state.editing&&this.setState({editing:null},this.update)},onChange:function(event){var regex=/^(((\d+)?(:([0-5]?\d)?)?(:([0-5]?\d)?)?)|((\d+)?([,\.])?(\d+)?))$/gi,value=event.target.value;if(regex.test(value)){var val=0;if(value.indexOf(":")>=0){var arr=value.split(":");arr[0]&&(val+=1e3*parseInt(arr[0])*60*60),arr[1]&&(val+=1e3*parseInt(arr[1])*60),arr[2]&&(val+=1e3*parseInt(arr[2]))}else value=value.replace(",","."),val=Math.round(1e3*parseFloat(value)*60*60);this.props.data.data.periods=[],this.props.data.data.periods.push({started:0,stopped:val}),this.props.data.data.ellapsed=val,this.setState({editing:value})}},render:function(){var commands;switch(this.state.running){case!1:commands=React.DOM.div({className:"commands"},React.DOM.div({className:"left",onClick:this.start},React.DOM.i({className:"icon-play"})),React.DOM.div({className:"right",onClick:this.reset},React.DOM.i({className:"icon-arrows-cw"})));break;case!0:commands=React.DOM.div({className:"commands"},React.DOM.div({className:"left",onClick:this.stop},React.DOM.i({className:"icon-pause"})),React.DOM.div({className:"right",onClick:this.reset},React.DOM.i({className:"icon-arrows-cw"})))}var date=new Date(this.state.ellapsed),dateString=app.lib.pad(24*(date.getUTCDate()-1)+date.getUTCHours(),2)+":"+app.lib.pad(date.getUTCMinutes(),2)+":"+app.lib.pad(date.getUTCSeconds(),2);return React.DOM.div({className:"stopwatch field"},React.DOM.div({className:"block"},null!==this.state.editing?React.DOM.input({className:"value",value:this.state.editing,onBlur:this.view,ref:"input",placeholder:"Blank time",onChange:this.onChange}):React.DOM.div({className:"value",onClick:this.edit},dateString),commands),this.props.showOptions?React.DOM.div({className:"itemoptions blank"}):null)},focus:function(){return!0},statics:{hasOptions:!1}}),app.view.item.stopwatch=app.view.item.stopwatch||{},app.view.item.stopwatch.view=app.lib.element({displayName:"item.stopwatch.view",mixins:[app.lib.mixins.rootParent],componentWillMount:function(){this.update(),this.toggleTickListner()},componentWillUnmount:function(){app.events.off(null,null,this)},componentDidMount:function(){},componentDidUpdate:function(prevProps,prevState){},getInitialState:function(){return{running:!1,ellapsed:0}},update:function(){var ellapsed=this.props.data.data.ellapsed,periods=this.props.data.data.periods;periods.length>0&&!periods[periods.length-1].stopped&&(ellapsed+=app.lib.dateUTC().getTime()-periods[periods.length-1].started),this.setState({ellapsed:ellapsed})},start:function(){this.props.data.data.periods.push({started:app.lib.dateUTC().getTime(),stopped:null}),this.toggleTickListner(),this.save()},stop:function(){var periods=this.props.data.data.periods;periods[periods.length-1].stopped=app.lib.dateUTC().getTime(),this.props.data.data.ellapsed+=periods[periods.length-1].stopped-periods[periods.length-1].started,this.toggleTickListner(),this.save()},reset:function(){this.props.data.data.periods=[],this.props.data.data.ellapsed=0,this.update(),this.toggleTickListner(),this.save()},save:function(){this._save=this._save||_.debounce(this.saveLogic,1500),this._save()},saveLogic:function(){this.props.model.save(this.props.context)},componentWillReceiveProps:function(nextProps){},toggleTickListner:function(){var periods=this.props.data.data.periods;periods.length>0&&!periods[periods.length-1].stopped?(app.events.on("tick:seconds",this.update,this),this.setState({running:!0})):(app.events.off("tick:seconds",null,this),this.setState({running:!1}))},prevent:function(event){event.preventDefault(),event.stopPropagation()},render:function(){var commands;switch(this.state.running){case!1:commands=React.DOM.div({className:"commands",onClick:this.prevent,onDoubleClick:this.prevent},React.DOM.div({className:"left",onClick:this.start},React.DOM.i({className:"icon-play"})),React.DOM.div({className:"right",onClick:this.reset},React.DOM.i({className:"icon-arrows-cw"})));break;case!0:commands=React.DOM.div({className:"commands",onClick:this.prevent,onDoubleClick:this.prevent},React.DOM.div({className:"left",onClick:this.stop},React.DOM.i({className:"icon-pause"})),React.DOM.div({className:"right",onClick:this.reset},React.DOM.i({className:"icon-arrows-cw"})))}var date=new Date(this.state.ellapsed),dateString=app.lib.pad(24*(date.getUTCDate()-1)+date.getUTCHours(),2)+":"+app.lib.pad(date.getUTCMinutes(),2)+":"+app.lib.pad(date.getUTCSeconds(),2);return React.DOM.div({className:"stopwatch field"},React.DOM.div({className:"block"},React.DOM.div({className:"value"},dateString),commands),this.props.showOptions?React.DOM.div({className:"itemoptions"},null):null)},focus:function(){return!0},statics:{hasOptions:!1}}),app.view.item.countdown=app.view.item.countdown||{},app.view.item.countdown.edit=app.lib.element({displayName:"item.countdown.edit",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],componentWillMount:function(){this.update(),this.toggleTickListner()},componentWillUnmount:function(){app.events.off(null,null,this)},componentDidMount:function(){},componentDidUpdate:function(prevProps,prevState){},getInitialState:function(){return{running:!1,ellapsed:0,editing:null}},update:function(){var ellapsed=this.props.data.data.ellapsed,periods=this.props.data.data.periods;periods.length>0&&!periods[periods.length-1].stopped&&(ellapsed+=app.lib.dateUTC().getTime()-periods[periods.length-1].started),this.setState({ellapsed:ellapsed})},start:function(){this.view(),this.props.data.data.periods.push({started:app.lib.dateUTC().getTime(),stopped:null}),this.toggleTickListner()},stop:function(){this.view();var periods=this.props.data.data.periods;periods&&periods.length>0&&(periods[periods.length-1].stopped=app.lib.dateUTC().getTime(),this.props.data.data.ellapsed+=periods[periods.length-1].stopped-periods[periods.length-1].started),this.toggleTickListner()},reset:function(){this.view(),this.props.data.data.periods=[],this.props.data.data.ellapsed=0,this.update(),this.toggleTickListner()},toggleTickListner:function(){var periods=this.props.data.data.periods;periods.length>0&&!periods[periods.length-1].stopped?(app.events.on("tick:seconds",this.update,this),this.setState({running:!0})):(app.events.off("tick:seconds",null,this),this.setState({running:!1}))},edit:function(){var date=new Date(Math.max(this.props.data.data.start-this.state.ellapsed,0)),dateString=app.lib.pad(24*(date.getUTCDate()-1)+date.getUTCHours(),2)+":"+app.lib.pad(date.getUTCMinutes(),2)+":"+app.lib.pad(date.getUTCSeconds(),2);this.stop(),this.setState({editing:dateString},function(){this.refs.input.getDOMNode().focus()}.bind(this))},view:function(){null!==this.state.editing&&this.setState({editing:null},this.update)},onChange:function(event){var regex=/^(((\d+)?(:([0-5]?\d)?)?(:([0-5]?\d)?)?)|((\d+)?([,\.])?(\d+)?))$/gi,value=event.target.value;if(regex.test(value)){var val=0;if(value.indexOf(":")>=0){var arr=value.split(":");arr[0]&&(val+=1e3*parseInt(arr[0])*60*60),arr[1]&&(val+=1e3*parseInt(arr[1])*60),arr[2]&&(val+=1e3*parseInt(arr[2]))}else value=value.replace(",","."),val=Math.round(1e3*parseFloat(value)*60*60);this.props.data.data.periods=[],this.props.data.data.periods.push({started:0,stopped:val}),this.props.data.data.start=val,this.props.data.data.ellapsed=0,this.setState({editing:value})}},render:function(){var commands;switch(this.state.running){case!1:commands=React.DOM.div({className:"commands"},React.DOM.div({className:"left",onClick:this.start},React.DOM.i({className:"icon-play"})),React.DOM.div({className:"right",onClick:this.reset},React.DOM.i({className:"icon-arrows-cw"})));break;case!0:commands=React.DOM.div({className:"commands"},React.DOM.div({className:"left",onClick:this.stop},React.DOM.i({className:"icon-pause"})),React.DOM.div({className:"right",onClick:this.reset},React.DOM.i({className:"icon-arrows-cw"})))}var ms=this.props.data.data.start-this.state.ellapsed,date=new Date(Math.max(ms,0)),dateString=app.lib.pad(24*(date.getUTCDate()-1)+date.getUTCHours(),2)+":"+app.lib.pad(date.getUTCMinutes(),2)+":"+app.lib.pad(date.getUTCSeconds(),2);return React.DOM.div({className:"stopwatch field"},React.DOM.div({className:"block"},null!==this.state.editing?React.DOM.input({className:"value"+(0>ms?" blink":""),value:this.state.editing,onBlur:this.view,ref:"input",placeholder:"Blank time",onChange:this.onChange}):React.DOM.div({className:"value"+(0>ms?" blink":""),onClick:this.edit},dateString),commands),this.props.showOptions?React.DOM.div({className:"itemoptions blank"}):null)},focus:function(){return!0},statics:{hasOptions:!1}}),app.view.item.countdown=app.view.item.countdown||{},app.view.item.countdown.view=app.lib.element({displayName:"item.countdown.view",mixins:[app.lib.mixins.rootParent],componentWillMount:function(){this.update(),this.toggleTickListner()},componentWillUnmount:function(){app.events.off(null,null,this)},componentDidMount:function(){},componentDidUpdate:function(prevProps,prevState){},getInitialState:function(){return{running:!1,ellapsed:0}},update:function(){var ellapsed=this.props.data.data.ellapsed,periods=this.props.data.data.periods;periods.length>0&&!periods[periods.length-1].stopped&&(ellapsed+=app.lib.dateUTC().getTime()-periods[periods.length-1].started),this.setState({ellapsed:ellapsed})},start:function(){this.props.data.data.periods.push({started:app.lib.dateUTC().getTime(),stopped:null}),this.toggleTickListner(),this.save()},stop:function(){var periods=this.props.data.data.periods;periods[periods.length-1].stopped=app.lib.dateUTC().getTime(),this.props.data.data.ellapsed+=periods[periods.length-1].stopped-periods[periods.length-1].started,this.toggleTickListner(),this.save()},reset:function(){this.props.data.data.periods=[],this.props.data.data.ellapsed=0,this.update(),this.toggleTickListner(),this.save()},save:function(){this._save=this._save||_.debounce(this.saveLogic,1500),this._save()},saveLogic:function(){this.props.model.save(this.props.context)},componentWillReceiveProps:function(nextProps){},toggleTickListner:function(){var periods=this.props.data.data.periods;periods.length>0&&!periods[periods.length-1].stopped?(app.events.on("tick:seconds",this.update,this),this.setState({running:!0})):(app.events.off("tick:seconds",null,this),this.setState({running:!1}))},prevent:function(event){event.preventDefault(),event.stopPropagation()},render:function(){var commands;switch(this.state.running){case!1:commands=React.DOM.div({className:"commands",onClick:this.prevent,onDoubleClick:this.prevent},React.DOM.div({className:"left",onClick:this.start},React.DOM.i({className:"icon-play"})),React.DOM.div({className:"right",onClick:this.reset},React.DOM.i({className:"icon-arrows-cw"})));break;case!0:commands=React.DOM.div({className:"commands",onClick:this.prevent,onDoubleClick:this.prevent},React.DOM.div({className:"left",onClick:this.stop},React.DOM.i({className:"icon-pause"})),React.DOM.div({className:"right",onClick:this.reset},React.DOM.i({className:"icon-arrows-cw"})))}var ms=this.props.data.data.start-this.state.ellapsed,date=new Date(Math.max(ms,0)),dateString=app.lib.pad(24*(date.getUTCDate()-1)+date.getUTCHours(),2)+":"+app.lib.pad(date.getUTCMinutes(),2)+":"+app.lib.pad(date.getUTCSeconds(),2);return React.DOM.div({className:"stopwatch field"},React.DOM.div({className:"block"},React.DOM.div({className:"value"+(0>ms?" blink":"")},dateString),commands),this.props.showOptions?React.DOM.div({className:"itemoptions"},null):null)},focus:function(){return!0},statics:{hasOptions:!1}}),app.view.item.tag=app.view.item.tag||{},app.view.item.tag.edit=app.lib.element({mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize,app.lib.mixins.focus],displayName:"item.tag.edit",toggle:function(){this.forceUpdate(this.refocus)},componentWillMount:function(){this.props.model.on("update:tag",this.toggle,this),this.props.model.on("update:tag.name",this.forceUpdate.bind(this,null),this)},componentWillUnmount:function(){this.props.model.off(null,null,this)},changeText:function(event){this.props.model.update({tag:{name:{$set:event.target.value}}})},keyPress:function(event){"Enter"===event.key&&(app.lib.focus.next(),event.preventDefault())},render:function(){if(this.props.model.data("tag")){var status=this.props.model.getStatus(),color={color:app.lib.color(this.props.model.data().color)},placeholder="tag"===this.props.context&&this.props.model.tags().length>0?"Sub tag name":app.config.context[this.props.context].placeholder.header;return React.DOM.div({className:"notetag"},app.view.item.contextswitch.edit({context:this.props.context,switchContext:this.props.switchContext,model:this.props.model}),React.DOM.textarea({ref:"input",rows:1,onKeyDown:this.keyPress,placeholder:placeholder,value:this.props.model.data().tag.name,onChange:this.changeText}),React.DOM.div({className:"tagstatus"},"link"===status?React.DOM.i({className:"link icon-link-alt",style:color}):null,"error"===status?React.DOM.i({className:"error icon-error"}):null))}return React.DOM.div({className:"hide"})},focus:function(){return this.props.model.data("tag")?(this.refs.input.getDOMNode().focus(),!0):!0},validate:function(focus){var status=this.props.model.getStatus();return"error"===status?(focus&&this.focus(),!1):this.props.model.data("tag")&&0===_.trim(this.props.model.data("tag").name).length?(focus&&this.focus(),!1):!0},refocus:function(){this.props.events.trigger("focus:set")}}),app.view.item.tag=app.view.item.tag||{},app.view.item.tag.view=app.lib.element({displayName:"item.tag.view",mixins:[app.lib.mixins.rootParent],render:function(){return this.props.model.data().tag?React.DOM.div({className:"notetag"},app.view.item.contextswitch.view({context:this.props.context,switchContext:this.props.switchContext,model:this.props.model}),React.DOM.div({className:"name"},this.props.model.data().tag.name)):React.DOM.div({className:"hide"})}}),app.view.item.tagbody=app.view.item.tagbody||{},app.view.item.tagbody.edit=app.lib.element({displayName:"item.tagbody.edit",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],componentWillMount:function(){this.props.model.on("update:tag.name",this.forceUpdate.bind(this,null),this)},componentDidMount:function(){},componentWillUnmount:function(){this.props.model.off(null,null,this)},changeText:function(text){this.props.model.update({tag:{name:{$set:text}}})},render:function(){return React.DOM.div({className:"container"},React.DOM.div({className:"wrapper"},React.DOM.div({className:"itemgroup"},app.view.item.text.edit({ref:app.lib.cid(),model:this.props.model,data:{data:{text:this.props.model.data().tag.name}},changed:this.changeText,context:"tag",events:this.props.events,rootParent:this.props.rootParent}))))}}),app.view.item.tagbody=app.view.item.tagbody||{},app.view.item.tagbody.view=app.lib.element({displayName:"item.tagbody.view",mixins:[app.lib.mixins.rootParent],componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},render:function(){return React.DOM.div({className:"container"},React.DOM.div({className:"wrapper"},React.DOM.div({className:"itemgroup"},app.view.item.text.view({data:{data:{text:this.props.model.data().tag.name}},rootParent:this.props.rootParent}))))}}),app.view.item.tags=app.view.item.tags||{},app.view.item.tags.edit=app.lib.element({displayName:"item.tags.edit",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize,app.lib.mixins.focus],componentWillMount:function(){this.props.model.on("update:tags",this.forceUpdate.bind(this,null),this)},componentWillUnmount:function(){this.props.model.off(null,null,this)},render:function(){return app.view.components.tagbox({ref:app.lib.cid(),tags:_.pluck(this.props.model.data("tags"),"_id"),addTag:this.addTag,removeTag:this.removeTag,events:this.props.events,onClickTag:this.onClickTag,save:!0,rootParent:this.props.rootParent})},replaceTag:function(prev,next){this.props.model.deleteTag(prev,this.props.context),this.props.model.appendTag(next,this.props.context)},onClickTag:function(event,tag){var id=tag.get("_id"),tags=app.data.account.tagLinkHash[id];if(tags){var menu={type:"tagmenu",tags:tags,tag:id,onClick:this.replaceTag};app.events.trigger("contextmenu",event.target,menu,"bottom")}},addTag:function(tag){this.props.model.appendTag(tag,this.props.context)},removeTag:function(tag){this.props.model.deleteTag(tag,this.props.context)}}),app.view.item.tags=app.view.item.tags||{},app.view.item.tags.view=app.lib.element({displayName:"item.tags.view",mixins:[app.lib.mixins.rootParent],componentWillMount:function(){this.resolveTags()},componentDidMount:function(){},componentWillUnmount:function(){},componentDidBlur:function(event){},componentWillReceiveProps:function(){this.resolveTags()},resolveTags:function(){var tags=_.difference(_.pluck(this.props.model.tags(),"_id"),this.rootParent().getTagsToHide()),selected=_.map(tags,function(tag){return app.data.tags.get(tag)});this.setState({selected:selected})},getInitialState:function(){return{selected:[]}},render:function(){var showInboxTag="inbox"!==app.navigation.view&&"inbox"===this.props.model.data("status");return showInboxTag||0!==this.state.selected.length?React.DOM.div({className:"notefooter"},React.DOM.div({className:"tags"},showInboxTag?app.view.components.tag({tag:app.data.misc.inboxTag}):null,_.map(this.state.selected,function(tag){return app.view.components.tag({key:app.lib.uidmap(tag.get("_id")),tag:tag,onClickTag:this.onClickTag})},this))):null},replaceTag:function(prev,next){this.props.model.deleteTag(prev,this.props.context),this.props.model.appendTag(next,this.props.context),this.resolveTags(),this.props.model.save(this.props.context)},onClickTag:function(event,tag){var id=tag.get("_id"),tags=app.data.account.tagLinkHash[id];if(tags){var menu={type:"tagmenu",tags:tags,tag:id,onClick:this.replaceTag};app.events.trigger("contextmenu",event.target,menu,"bottom")}}}),app.view.item.text=app.view.item.text||{},app.view.item.text.edit=app.lib.element({displayName:"item.text.edit",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],componentWillMount:function(){},componentDidMount:function(){this.resizeTextareaLogic()},componentDidUpdate:function(prevProps,prevState){this.state.text!==prevState.text&&this.resizeTextarea()},update:function(){this.forceUpdate(function(){this.resizeTextarea()})},getInitialState:function(){return{text:this.props.data.data.text}},componentWillReceiveProps:function(nextProps){this.setState({text:nextProps.data.data.text})},resizeTextarea:function(){this.resizeTextareaThrottled=this.resizeTextareaThrottled||_.throttle(this.resizeTextareaLogic,150),this.resizeTextareaThrottled()},resizeTextareaLogic:function(){var element=this.refs.textarea.getDOMNode();element.style.height="0px";var newHeight=Math.max(element.scrollHeight,element.clientHeight)+"px";element.style.height=newHeight,this.refs.wrapper.getDOMNode().style.height=newHeight},paste:function(event){this.props.data.data.text||event.clipboardData.getData&&(event.preventDefault(),this.changeTextLogic(event.clipboardData.getData("Text").trim()))},changeTextLogic:function(text){this.props.data.data.text=text.length<app.config.maxNoteLength+1?text:text.substring(0,app.config.maxNoteLength),this.props.changed&&this.props.changed(text),this.setState({text:this.props.data.data.text})},changeText:function(event){this.changeTextLogic(event.target.value)},fontStyle:function(){var length=this.state.text&&this.state.text.length||0,size=this.props.data.data.size||app.lib.getFontSize(length),style={fontSize:size+"px"};return 22>size&&(style.fontWeight=300),this.props.data.data.bold&&(style.fontWeight=22>size?400:300),this.props.data.data.underline&&(style.textDecoration="underline"),this.props.data.data.italic&&(style.fontStyle="italic"),this.props.data.data.center&&(style.textAlign="center"),style},keyPress:function(event){"Enter"!==event.key||event.shiftKey||(app.lib.focus.next(),event.preventDefault(),event.stopPropagation())},render:function(){var placeholder="tag"===this.props.context&&this.props.model.tags().length>0?"Sub tag name":app.config.context[this.props.context].placeholder.blockValue,data=this.props.data.data;return React.DOM.div({className:"text inputwrapper"},React.DOM.div({ref:"wrapper"},React.DOM.textarea({ref:"textarea",className:"textarea",onChange:this.changeText,onPaste:this.paste,value:this.state.text,style:this.fontStyle(),onFocus:this.onFocus,placeholder:placeholder,onKeyDown:this.keyPress})),this.props.showOptions?React.DOM.div({className:"itemoptions"},React.DOM.i({className:"icon-bold"+(data.bold?"":" inactive"),onClick:this.toggleBold,title:"Toggle bold"}),React.DOM.i({className:"icon-underline"+(data.underline?"":" inactive"),onClick:this.toggleUnderline,title:"Toggle underline"}),React.DOM.i({className:"icon-italic"+(data.italic?"":" inactive"),onClick:this.toggleItalic,title:"Toggle italic"}),React.DOM.i({className:"icon-align-center"+(data.center?"":" inactive"),onClick:this.toggleCenter,title:"Toggle center alignment"}),React.DOM.i({className:"icon-fontsize"+(17!==data.size?" inactive":""),onClick:this.toggleSize,title:"Toggle force small font size"})):null)},validate:function(focus){return!0},onFocus:function(){this.focus()},focus:function(){return this.refs.textarea.getDOMNode().focus(),!0},toggleBold:function(){this.props.data.data.bold=!this.props.data.data.bold,this.update()},toggleUnderline:function(){this.props.data.data.underline=!this.props.data.data.underline,this.update()},toggleItalic:function(){this.props.data.data.italic=!this.props.data.data.italic,this.update()},toggleCenter:function(){this.props.data.data.center=!this.props.data.data.center,this.update()},toggleSize:function(){this.props.data.data.size=this.props.data.data.size?null:17,this.update()},getMenuItems:function(){var items=[];return items.push({icon:"icon-bold",text:this.props.data.data.bold?"Remove bold":"Make bold",callback:this.toggleBold}),items},statics:{hasOptions:!0}}),app.view.item.text=app.view.item.text||{},app.view.item.text.view=app.lib.element({displayName:"item.text.view",mixins:[app.lib.mixins.rootParent],componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},componentDidUpdate:function(){},getInitialState:function(){return{}},fontStyle:function(){var text=this.props.data.data.text,length=text&&text.length||0,size=this.props.data.data.size||app.lib.getFontSize(length),style={fontSize:size+"px"};return 22>size&&(style.fontWeight=300),this.props.data.data.bold&&(style.fontWeight=22>size?400:300),this.props.data.data.underline&&(style.textDecoration="underline"),this.props.data.data.italic&&(style.fontStyle="italic"),this.props.data.data.center&&(style.textAlign="center"),this.props.data.data.text||(style.color="rgba(10, 10, 10, 0.40)"),style},render:function(){var text=this.props.data.data.text?this.props.data.data.text:app.config.context[this.props.context].placeholder.blockValue;return React.DOM.div({className:"text field"},React.DOM.div({className:"value",style:this.fontStyle()},text))}}),app.view.item.timestamp=app.view.item.timestamp||{},app.view.item.timestamp.edit=app.lib.element({displayName:"item.timestamp.edit",mixins:[app.lib.mixins.rootParent,app.lib.mixins.resize],componentWillMount:function(){this.props.model.on("update:options.timestamp",this.forceUpdate.bind(this,null),this)},componentWillUnmount:function(){this.props.model.off(null,null,this)},render:function(){return this.props.model.getOptions("timestamp")&&this.props.model.data("created")?React.DOM.div({className:"timestamp"},app.lib.dateTimeToString(this.props.model.data("created"))):React.DOM.div({className:"hide"})}}),app.view.item.timestamp=app.view.item.timestamp||{},app.view.item.timestamp.view=app.lib.element({displayName:"item.timestamp.view",mixins:[app.lib.mixins.rootParent],componentWillMount:function(){this.props.model.on("update:options.timestamp",this.forceUpdate.bind(this,null),this)},componentWillUnmount:function(){this.props.model.off(null,null,this)},render:function(){return this.props.model.getOptions("timestamp")&&this.props.model.data("created")?React.DOM.div({className:"timestamp"},app.lib.dateTimeToString(this.props.model.data("created"))):React.DOM.div({className:"hide"})}}),app.view.item.contextswitch=app.view.item.contextswitch||{},app.view.item.contextswitch.edit=app.lib.element({displayName:"item.contextswitch.edit",componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},render:function(){var color={color:app.lib.color(this.props.model.data().color)};return React.DOM.div({className:"contextswitch",ref:"contextswitch"},React.DOM.div({className:"currenctcontext"},React.DOM.i({className:app.config.context[this.props.context].icon,style:color})))}}),app.view.item.contextswitch=app.view.item.contextswitch||{},app.view.item.contextswitch.view=app.lib.element({displayName:"item.contextswitch.view",componentWillMount:function(){},componentDidMount:function(){},componentWillUnmount:function(){},switchContext:function(context,event){this.refs.contextswitch.getDOMNode().style.display="none",setTimeout(function(){app.lib.isMounted(this)&&(this.refs.contextswitch.getDOMNode().style.display=null)}.bind(this),0),this.props.switchContext&&this.props.switchContext(context)},render:function(){var color={color:app.lib.color(this.props.model.data().color)},contextList=_.filter(app.config.contextList,function(context){return!!this.props.model.data(context.name)},this),colorBG=app.lib.color(this.props.model.data().color);return contextList.length>1?React.DOM.div({className:"contextswitch view",ref:"contextswitch"},React.DOM.div({className:"currenctcontext"},React.DOM.i({className:app.config.context[this.props.context].icon,style:color}),React.DOM.div({className:"contextindicator"},_.map(contextList,function(context){return React.DOM.div({className:"item",key:context.name,style:context.name===this.props.context?{backgroundColor:colorBG}:{}})},this))),React.DOM.div({className:"switchcontext"},_.map(_.sortBy(contextList,function(context){return context.name===this.props.context?0:1},this),function(context){return React.DOM.i({className:context.icon,style:color,key:context.name,onClick:this.switchContext.bind(this,context.name)})},this))):app.view.item.contextswitch.edit(this.props)}}),app.router=new(Backbone.Router.extend({initialize:function(){this.path=null,this.prev=null},navigate:function(path,options){if(Backbone.History.started){if(!app.lib.newNotes.validate())return;return app.lib.newNotes.clear(),options.temp?this.prev=app.navigation:(this.path=path,this.prev=null),Backbone.Router.prototype.navigate.apply(this,arguments)}window.location.hash=path},getPath:function(){return this.path},routes:{"notes(/)":function(){
app.router.navigate("notes/inbox",{trigger:!0,replace:!0})},"notes/inbox(/)":app.lib.router.handler("notes","inbox"),"notes/all(/)":app.lib.router.handler("notes","all"),"notes/all/:query(/)":app.lib.router.handler("notes","all"),"notes/search/:query(/)":app.lib.router.handler("notes","search"),"notes/trackers(/)":function(){app.router.navigate("notes/trackers/all",{trigger:!0,replace:!0})},"notes/trackers/all(/)":app.lib.router.handler("notes","trackers"),"notes/trackers/all/:query(/)":app.lib.router.handler("notes","trackers"),"notes/untagged(/)":app.lib.router.handler("notes","untagged"),"notes/archive(/)":app.lib.router.handler("notes","archive"),"notes/trash(/)":app.lib.router.handler("notes","trash"),"boards(/)":app.lib.router.handler("boards","all"),"boards/:board(/)":function(board){app.router.navigate("boards/"+board+"/all",{trigger:!0,replace:!0})},"boards/:board/all(/)":app.lib.router.handler("boards","board"),"boards/:board/all/:query(/)":app.lib.router.handler("boards","board-search"),"boards/:board/:list(/)":function(board,list){app.router.navigate("boards/"+board+"/"+list+"/all",{trigger:!0,replace:!0})},"boards/:board/:list/all(/)":app.lib.router.handler("boards","list"),"boards/:board/:list/all/:query(/)":app.lib.router.handler("boards","list-search"),"trackers(/)":function(){app.router.navigate("trackers/manage",{trigger:!0,replace:!0})},"trackers/manage(/)":app.lib.router.handler("trackers","manage"),"trackers/all(/)":app.lib.router.handler("trackers","all"),"trackers/all/:query(/)":app.lib.router.handler("trackers","all"),"trackers/search/:query(/)":app.lib.router.handler("trackers","search"),"trackers/untagged(/)":app.lib.router.handler("trackers","untagged"),"trackers/archive(/)":app.lib.router.handler("trackers","archive"),"trackers/trash(/)":app.lib.router.handler("trackers","trash"),"tags(/)":function(){app.router.navigate("tags/all",{trigger:!0,replace:!0})},"tags/all(/)":app.lib.router.handler("tags","all"),"tags/all/:query(/)":app.lib.router.handler("tags","all"),"tags/search/:query(/)":app.lib.router.handler("tags","search"),"tags/graph(/)":app.lib.router.handler("tags","graph"),"tags/untagged(/)":app.lib.router.handler("tags","untagged"),"tags/archive(/)":app.lib.router.handler("tags","archive"),"tags/trash(/)":app.lib.router.handler("tags","trash"),"calendar(/)":app.lib.router.handler("calendar","all"),"map(/)":app.lib.router.handler("map","all"),"insights(/)":app.lib.router.handler("insights","all"),"logout(/)":app.lib.router.handler("logout","all"),"settings(/)":app.lib.router.handler("settings","all"),"upload(/)":app.lib.router.handler("upload","all"),"upgrade(/)":app.lib.router.handler("upgrade","all"),"feedback(/)":app.lib.router.handler("feedback","all"),"*notfound":"notfound"},notfound:function(){setTimeout(function(){this.navigate("notes/inbox",{trigger:!0,replace:!0})}.bind(this),0)},execute:function(){return this.path||(this.path=Backbone.history.fragment),Backbone.Router.prototype.execute.apply(this,arguments)}})),$(document).ready(function(){app.lib.isSupported()?(app.navigation=null,app.events=_.clone(Backbone.Events),app.data.state=new app.model.state,app.data.account=new app.model.account,app.data.tags=new app.collection.tags,app.data.boards=new app.collection.boards,app.data.misc={inboxTag:new app.model.tag({_data:{color:"#777",tag:{name:"Inbox",icon:"icon-inbox"}}})},$.when(app.lib.retry(function(){return app.fonts.load()}).fail(function(font){logException("font load error",font)}),app.dataadapter.generic.preload().fail(function(xhr){xhr=xhr||{},logException("preload error",xhr.statusText+";"+xhr.readyState+";"+xhr.status+";"+xhr.responseText)}),app.lib.retry(function(){return app.data.account.fetch()}).fail(function(xhr){xhr=xhr||{},logException("account load error",xhr.statusText+";"+xhr.readyState+";"+xhr.status+";"+xhr.responseText)}),app.lib.retry(function(){return app.data.boards.load()}).fail(function(xhr){xhr=xhr||{},logException("boards load error",xhr.statusText+";"+xhr.readyState+";"+xhr.status+";"+xhr.responseText)})).done(function(){if(!app.data.account.get("_id"))return void(window.location="/logout");var texts=app.dataadapter.local.getAllTexts();texts&&($("#fontFix").text(texts),_.each(["100","300","500","700"],function(weight,index){setTimeout(function(weight){$("#fontFix").css("fontWeight",weight)}.bind(null,weight),75*index)})),app.data.tags.load().done(function(){setTimeout(function(){app.data.tags.buildEdges(),React.render(app.view.layout.main(),$("#root")[0]),uwa&&uwa.getLaunchPath()&&app.router.navigate(uwa.getLaunchPath(),{trigger:!0}),Backbone.history.start()},300)}).fail(function(xhr){xhr=xhr||{},logException("tags load error",xhr.statusText+";"+xhr.readyState+";"+xhr.status+";"+xhr.responseText),$(".loadingdatatext").text("Something went wrong while loading tags. Try to reload.")})}).fail(function(){$(".loadingdatatext").text("Something went wrong while loading data. Try to reload.")}),setInterval(function(){app.events.trigger("tick:seconds")},1e3),$(window).resize(function(){app.lib.triggerWindowResizeEvent()}),$(document).unbind("keydown").bind("keydown",function(event){var doPrevent=!1;if(8===event.keyCode){var d=event.srcElement||event.target;doPrevent="INPUT"===d.tagName.toUpperCase()&&("TEXT"===d.type.toUpperCase()||"PASSWORD"===d.type.toUpperCase()||"FILE"===d.type.toUpperCase()||"EMAIL"===d.type.toUpperCase()||"SEARCH"===d.type.toUpperCase()||"DATE"===d.type.toUpperCase())||"TEXTAREA"===d.tagName.toUpperCase()?d.readOnly||d.disabled:!0}doPrevent&&event.preventDefault()}),$(window).on("beforeunload",function(event){return app.lib.newNotes.validate(!0)?void 0:"There are unsaved new note(s)."})):$(".loadingdatatext").text("Your browser is not supported at the moment (use Chrome, Firefox, Opera, Safari or IE10+)")});